ARM GAS  /tmp/ccHbAl3v.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB143:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccHbAl3v.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccHbAl3v.s 			page 3


  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     HAL_GPIO_TogglePin(Green_Led_GPIO_Port, Green_Led_Pin);
  97:Core/Src/main.c ****     HAL_Delay(300);
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****   * @brief System Clock Configuration
 107:Core/Src/main.c ****   * @retval None
 108:Core/Src/main.c ****   */
 109:Core/Src/main.c **** void SystemClock_Config(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     Error_Handler();
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c ****   /** Activate the Over-Drive mode
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccHbAl3v.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief GPIO Initialization Function
 156:Core/Src/main.c ****   * @param None
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** static void MX_GPIO_Init(void)
 160:Core/Src/main.c **** {
  27              		.loc 1 160 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 161:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 161 0
  41 0004 0024     		movs	r4, #0
  42 0006 0394     		str	r4, [sp, #12]
  43 0008 0494     		str	r4, [sp, #16]
  44 000a 0594     		str	r4, [sp, #20]
  45 000c 0694     		str	r4, [sp, #24]
  46 000e 0794     		str	r4, [sp, #28]
  47              	.LBB4:
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 164:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  48              		.loc 1 164 0
  49 0010 164B     		ldr	r3, .L3
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 42F08002 		orr	r2, r2, #128
  52 0018 1A63     		str	r2, [r3, #48]
  53 001a 1A6B     		ldr	r2, [r3, #48]
  54 001c 02F08002 		and	r2, r2, #128
  55 0020 0092     		str	r2, [sp]
  56 0022 009A     		ldr	r2, [sp]
  57              	.LBE4:
  58              	.LBB5:
 165:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  59              		.loc 1 165 0
  60 0024 1A6B     		ldr	r2, [r3, #48]
  61 0026 42F00202 		orr	r2, r2, #2
  62 002a 1A63     		str	r2, [r3, #48]
  63 002c 1A6B     		ldr	r2, [r3, #48]
  64 002e 02F00202 		and	r2, r2, #2
ARM GAS  /tmp/ccHbAl3v.s 			page 5


  65 0032 0192     		str	r2, [sp, #4]
  66 0034 019A     		ldr	r2, [sp, #4]
  67              	.LBE5:
  68              	.LBB6:
 166:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  69              		.loc 1 166 0
  70 0036 1A6B     		ldr	r2, [r3, #48]
  71 0038 42F00102 		orr	r2, r2, #1
  72 003c 1A63     		str	r2, [r3, #48]
  73 003e 1B6B     		ldr	r3, [r3, #48]
  74 0040 03F00103 		and	r3, r3, #1
  75 0044 0293     		str	r3, [sp, #8]
  76 0046 029B     		ldr	r3, [sp, #8]
  77              	.LBE6:
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 169:Core/Src/main.c ****   HAL_GPIO_WritePin(Green_Led_GPIO_Port, Green_Led_Pin, GPIO_PIN_RESET);
  78              		.loc 1 169 0
  79 0048 094D     		ldr	r5, .L3+4
  80 004a 2246     		mov	r2, r4
  81 004c 0121     		movs	r1, #1
  82 004e 2846     		mov	r0, r5
  83 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /*Configure GPIO pin : Green_Led_Pin */
 172:Core/Src/main.c ****   GPIO_InitStruct.Pin = Green_Led_Pin;
  85              		.loc 1 172 0
  86 0054 0123     		movs	r3, #1
  87 0056 0393     		str	r3, [sp, #12]
 173:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 173 0
  89 0058 0493     		str	r3, [sp, #16]
 174:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 174 0
  91 005a 0594     		str	r4, [sp, #20]
 175:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 175 0
  93 005c 0694     		str	r4, [sp, #24]
 176:Core/Src/main.c ****   HAL_GPIO_Init(Green_Led_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 176 0
  95 005e 03A9     		add	r1, sp, #12
  96 0060 2846     		mov	r0, r5
  97 0062 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL1:
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** }
  99              		.loc 1 178 0
 100 0066 09B0     		add	sp, sp, #36
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 12
 103              		@ sp needed
 104 0068 30BD     		pop	{r4, r5, pc}
 105              	.L4:
 106 006a 00BF     		.align	2
 107              	.L3:
 108 006c 00380240 		.word	1073887232
ARM GAS  /tmp/ccHbAl3v.s 			page 6


 109 0070 00040240 		.word	1073873920
 110              		.cfi_endproc
 111              	.LFE143:
 113              		.section	.text.Error_Handler,"ax",%progbits
 114              		.align	1
 115              		.global	Error_Handler
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-sp-d16
 121              	Error_Handler:
 122              	.LFB144:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
 123              		.loc 1 189 0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LBB7:
 130              	.LBB8:
 131              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/ccHbAl3v.s 			page 7


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/ccHbAl3v.s 			page 8


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccHbAl3v.s 			page 9


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 132              		.loc 2 142 0
 133              		.syntax unified
 134              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 135 0000 72B6     		cpsid i
 136              	@ 0 "" 2
 137              		.thumb
 138              		.syntax unified
 139              	.L6:
 140 0002 FEE7     		b	.L6
 141              	.LBE8:
 142              	.LBE7:
 143              		.cfi_endproc
 144              	.LFE144:
 146              		.section	.text.SystemClock_Config,"ax",%progbits
 147              		.align	1
 148              		.global	SystemClock_Config
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv5-sp-d16
 154              	SystemClock_Config:
 155              	.LFB142:
 110:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156              		.loc 1 110 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 80
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 00B5     		push	{lr}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 14, -4
 164 0002 95B0     		sub	sp, sp, #84
 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 88
 111:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167              		.loc 1 111 0
 168 0004 3022     		movs	r2, #48
 169 0006 0021     		movs	r1, #0
 170 0008 08A8     		add	r0, sp, #32
 171 000a FFF7FEFF 		bl	memset
 172              	.LVL2:
 112:Core/Src/main.c **** 
 173              		.loc 1 112 0
 174 000e 0023     		movs	r3, #0
 175 0010 0393     		str	r3, [sp, #12]
 176 0012 0493     		str	r3, [sp, #16]
 177 0014 0593     		str	r3, [sp, #20]
 178 0016 0693     		str	r3, [sp, #24]
 179 0018 0793     		str	r3, [sp, #28]
 180              	.LBB9:
 116:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 181              		.loc 1 116 0
 182 001a 234B     		ldr	r3, .L15
 183 001c 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/ccHbAl3v.s 			page 10


 184 001e 42F08052 		orr	r2, r2, #268435456
 185 0022 1A64     		str	r2, [r3, #64]
 186 0024 1B6C     		ldr	r3, [r3, #64]
 187 0026 03F08053 		and	r3, r3, #268435456
 188 002a 0193     		str	r3, [sp, #4]
 189 002c 019B     		ldr	r3, [sp, #4]
 190              	.LBE9:
 191              	.LBB10:
 117:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 192              		.loc 1 117 0
 193 002e 1F4B     		ldr	r3, .L15+4
 194 0030 1A68     		ldr	r2, [r3]
 195 0032 42F44042 		orr	r2, r2, #49152
 196 0036 1A60     		str	r2, [r3]
 197 0038 1B68     		ldr	r3, [r3]
 198 003a 03F44043 		and	r3, r3, #49152
 199 003e 0293     		str	r3, [sp, #8]
 200 0040 029B     		ldr	r3, [sp, #8]
 201              	.LBE10:
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 202              		.loc 1 121 0
 203 0042 0123     		movs	r3, #1
 204 0044 0893     		str	r3, [sp, #32]
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 205              		.loc 1 122 0
 206 0046 4FF4A023 		mov	r3, #327680
 207 004a 0993     		str	r3, [sp, #36]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 208              		.loc 1 123 0
 209 004c 0223     		movs	r3, #2
 210 004e 0E93     		str	r3, [sp, #56]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 211              		.loc 1 124 0
 212 0050 4FF48002 		mov	r2, #4194304
 213 0054 0F92     		str	r2, [sp, #60]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 214              		.loc 1 125 0
 215 0056 1922     		movs	r2, #25
 216 0058 1092     		str	r2, [sp, #64]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 217              		.loc 1 126 0
 218 005a 4FF4D872 		mov	r2, #432
 219 005e 1192     		str	r2, [sp, #68]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 220              		.loc 1 127 0
 221 0060 1293     		str	r3, [sp, #72]
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 222              		.loc 1 128 0
 223 0062 1393     		str	r3, [sp, #76]
 129:Core/Src/main.c ****   {
 224              		.loc 1 129 0
 225 0064 08A8     		add	r0, sp, #32
 226 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 227              	.LVL3:
 228 006a B0B9     		cbnz	r0, .L12
 135:Core/Src/main.c ****   {
 229              		.loc 1 135 0
ARM GAS  /tmp/ccHbAl3v.s 			page 11


 230 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 231              	.LVL4:
 232 0070 A8B9     		cbnz	r0, .L13
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 233              		.loc 1 141 0
 234 0072 0F23     		movs	r3, #15
 235 0074 0393     		str	r3, [sp, #12]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 236              		.loc 1 143 0
 237 0076 0223     		movs	r3, #2
 238 0078 0493     		str	r3, [sp, #16]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 239              		.loc 1 144 0
 240 007a 0023     		movs	r3, #0
 241 007c 0593     		str	r3, [sp, #20]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 242              		.loc 1 145 0
 243 007e 4FF4A053 		mov	r3, #5120
 244 0082 0693     		str	r3, [sp, #24]
 146:Core/Src/main.c **** 
 245              		.loc 1 146 0
 246 0084 4FF48053 		mov	r3, #4096
 247 0088 0793     		str	r3, [sp, #28]
 148:Core/Src/main.c ****   {
 248              		.loc 1 148 0
 249 008a 0721     		movs	r1, #7
 250 008c 03A8     		add	r0, sp, #12
 251 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 252              	.LVL5:
 253 0092 30B9     		cbnz	r0, .L14
 152:Core/Src/main.c **** 
 254              		.loc 1 152 0
 255 0094 15B0     		add	sp, sp, #84
 256              	.LCFI5:
 257              		.cfi_remember_state
 258              		.cfi_def_cfa_offset 4
 259              		@ sp needed
 260 0096 5DF804FB 		ldr	pc, [sp], #4
 261              	.L12:
 262              	.LCFI6:
 263              		.cfi_restore_state
 131:Core/Src/main.c ****   }
 264              		.loc 1 131 0
 265 009a FFF7FEFF 		bl	Error_Handler
 266              	.LVL6:
 267              	.L13:
 137:Core/Src/main.c ****   }
 268              		.loc 1 137 0
 269 009e FFF7FEFF 		bl	Error_Handler
 270              	.LVL7:
 271              	.L14:
 150:Core/Src/main.c ****   }
 272              		.loc 1 150 0
 273 00a2 FFF7FEFF 		bl	Error_Handler
 274              	.LVL8:
 275              	.L16:
 276 00a6 00BF     		.align	2
ARM GAS  /tmp/ccHbAl3v.s 			page 12


 277              	.L15:
 278 00a8 00380240 		.word	1073887232
 279 00ac 00700040 		.word	1073770496
 280              		.cfi_endproc
 281              	.LFE142:
 283              		.section	.text.main,"ax",%progbits
 284              		.align	1
 285              		.global	main
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv5-sp-d16
 291              	main:
 292              	.LFB141:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 293              		.loc 1 65 0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI7:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 303              		.loc 1 73 0
 304 0002 FFF7FEFF 		bl	HAL_Init
 305              	.LVL9:
  80:Core/Src/main.c **** 
 306              		.loc 1 80 0
 307 0006 FFF7FEFF 		bl	SystemClock_Config
 308              	.LVL10:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 309              		.loc 1 87 0
 310 000a FFF7FEFF 		bl	MX_GPIO_Init
 311              	.LVL11:
 312              	.L18:
  96:Core/Src/main.c ****     HAL_Delay(300);
 313              		.loc 1 96 0 discriminator 1
 314 000e 0121     		movs	r1, #1
 315 0010 0348     		ldr	r0, .L20
 316 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 317              	.LVL12:
  97:Core/Src/main.c ****     /* USER CODE END WHILE */
 318              		.loc 1 97 0 discriminator 1
 319 0016 4FF49670 		mov	r0, #300
 320 001a FFF7FEFF 		bl	HAL_Delay
 321              	.LVL13:
 322 001e F6E7     		b	.L18
 323              	.L21:
 324              		.align	2
 325              	.L20:
 326 0020 00040240 		.word	1073873920
 327              		.cfi_endproc
 328              	.LFE141:
 330              		.text
ARM GAS  /tmp/ccHbAl3v.s 			page 13


 331              	.Letext0:
 332              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 333              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 334              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 335              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 336              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f756xx.h"
 337              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 338              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 339              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 340              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 341              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 342              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 343              		.file 14 "<built-in>"
ARM GAS  /tmp/ccHbAl3v.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHbAl3v.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccHbAl3v.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccHbAl3v.s:108    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccHbAl3v.s:114    .text.Error_Handler:0000000000000000 $t
     /tmp/ccHbAl3v.s:121    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccHbAl3v.s:147    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccHbAl3v.s:154    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccHbAl3v.s:278    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccHbAl3v.s:284    .text.main:0000000000000000 $t
     /tmp/ccHbAl3v.s:291    .text.main:0000000000000000 main
     /tmp/ccHbAl3v.s:326    .text.main:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay

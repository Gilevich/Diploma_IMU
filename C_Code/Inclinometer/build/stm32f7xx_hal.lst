ARM GAS  /tmp/ccsX5ldF.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	HAL_MspInit:
  26              	.LFB143:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
ARM GAS  /tmp/ccsX5ldF.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.9
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x09) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
ARM GAS  /tmp/ccsX5ldF.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
ARM GAS  /tmp/ccsX5ldF.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  28              		.loc 1 198 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsX5ldF.s 			page 5


  32              		@ link register save eliminated.
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  33              		.loc 1 202 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE143:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-sp-d16
  46              	HAL_MspDeInit:
  47              	.LFB144:
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  48              		.loc 1 209 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  53              		.loc 1 213 0
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE144:
  58              		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_DeInit
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-sp-d16
  66              	HAL_DeInit:
  67              	.LFB142:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 169 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsX5ldF.s 			page 6


 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 171 0
  78 0002 094B     		ldr	r3, .L5
  79 0004 4FF0FF32 		mov	r2, #-1
  80 0008 1A62     		str	r2, [r3, #32]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81              		.loc 1 172 0
  82 000a 0024     		movs	r4, #0
  83 000c 1C62     		str	r4, [r3, #32]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  84              		.loc 1 174 0
  85 000e 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  86              		.loc 1 175 0
  87 0010 5C62     		str	r4, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  88              		.loc 1 177 0
  89 0012 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  90              		.loc 1 178 0
  91 0014 1C61     		str	r4, [r3, #16]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  92              		.loc 1 180 0
  93 0016 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  94              		.loc 1 181 0
  95 0018 5C61     		str	r4, [r3, #20]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  96              		.loc 1 183 0
  97 001a 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  98              		.loc 1 184 0
  99 001c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 100              		.loc 1 187 0
 101 001e FFF7FEFF 		bl	HAL_MspDeInit
 102              	.LVL0:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 103              		.loc 1 191 0
 104 0022 2046     		mov	r0, r4
 105 0024 10BD     		pop	{r4, pc}
 106              	.L6:
 107 0026 00BF     		.align	2
 108              	.L5:
 109 0028 00380240 		.word	1073887232
 110              		.cfi_endproc
 111              	.LFE142:
 113              		.section	.text.HAL_InitTick,"ax",%progbits
 114              		.align	1
 115              		.weak	HAL_InitTick
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv5-sp-d16
 121              	HAL_InitTick:
 122              	.LFB145:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/ccsX5ldF.s 			page 7


 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 123              		.loc 1 232 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL1:
 128 0000 10B5     		push	{r4, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133 0002 0446     		mov	r4, r0
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 134              		.loc 1 234 0
 135 0004 0E4B     		ldr	r3, .L13
 136 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 137              	.LVL2:
 138 0008 4FF47A73 		mov	r3, #1000
 139 000c B3FBF0F3 		udiv	r3, r3, r0
 140 0010 0C4A     		ldr	r2, .L13+4
 141 0012 1068     		ldr	r0, [r2]
 142 0014 B0FBF3F0 		udiv	r0, r0, r3
 143 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 144              	.LVL3:
 145 001c 68B9     		cbnz	r0, .L9
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 146              		.loc 1 240 0
 147 001e 0F2C     		cmp	r4, #15
 148 0020 01D9     		bls	.L12
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
ARM GAS  /tmp/ccsX5ldF.s 			page 8


 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 149              		.loc 1 247 0
 150 0022 0120     		movs	r0, #1
 151 0024 0AE0     		b	.L8
 152              	.L12:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 153              		.loc 1 242 0
 154 0026 0022     		movs	r2, #0
 155 0028 2146     		mov	r1, r4
 156 002a 4FF0FF30 		mov	r0, #-1
 157 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL4:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 159              		.loc 1 243 0
 160 0032 054B     		ldr	r3, .L13+8
 161 0034 1C60     		str	r4, [r3]
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 162              		.loc 1 251 0
 163 0036 0020     		movs	r0, #0
 164 0038 00E0     		b	.L8
 165              	.L9:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 166              		.loc 1 236 0
 167 003a 0120     		movs	r0, #1
 168              	.L8:
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 169              		.loc 1 252 0
 170 003c 10BD     		pop	{r4, pc}
 171              	.LVL5:
 172              	.L14:
 173 003e 00BF     		.align	2
 174              	.L13:
 175 0040 00000000 		.word	.LANCHOR0
 176 0044 00000000 		.word	SystemCoreClock
 177 0048 00000000 		.word	.LANCHOR1
 178              		.cfi_endproc
 179              	.LFE145:
 181              		.section	.text.HAL_Init,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_Init
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-sp-d16
 189              	HAL_Init:
 190              	.LFB141:
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 191              		.loc 1 139 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI2:
ARM GAS  /tmp/ccsX5ldF.s 			page 9


 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 200              		.loc 1 151 0
 201 0002 0320     		movs	r0, #3
 202 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 203              	.LVL6:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 204              		.loc 1 154 0
 205 0008 0020     		movs	r0, #0
 206 000a FFF7FEFF 		bl	HAL_InitTick
 207              	.LVL7:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 208              		.loc 1 157 0
 209 000e FFF7FEFF 		bl	HAL_MspInit
 210              	.LVL8:
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 211              		.loc 1 161 0
 212 0012 0020     		movs	r0, #0
 213 0014 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE141:
 217              		.section	.text.HAL_IncTick,"ax",%progbits
 218              		.align	1
 219              		.weak	HAL_IncTick
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-sp-d16
 225              	HAL_IncTick:
 226              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
ARM GAS  /tmp/ccsX5ldF.s 			page 10


 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 227              		.loc 1 291 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 232              		.loc 1 292 0
 233 0000 034A     		ldr	r2, .L18
 234 0002 1168     		ldr	r1, [r2]
 235 0004 034B     		ldr	r3, .L18+4
 236 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237 0008 0B44     		add	r3, r3, r1
 238 000a 1360     		str	r3, [r2]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 239              		.loc 1 293 0
 240 000c 7047     		bx	lr
 241              	.L19:
 242 000e 00BF     		.align	2
 243              	.L18:
 244 0010 00000000 		.word	uwTick
 245 0014 00000000 		.word	.LANCHOR0
 246              		.cfi_endproc
 247              	.LFE146:
 249              		.section	.text.HAL_GetTick,"ax",%progbits
 250              		.align	1
 251              		.weak	HAL_GetTick
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv5-sp-d16
 257              	HAL_GetTick:
 258              	.LFB147:
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 259              		.loc 1 302 0
 260              		.cfi_startproc
ARM GAS  /tmp/ccsX5ldF.s 			page 11


 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 264              		.loc 1 303 0
 265 0000 014B     		ldr	r3, .L21
 266 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 267              		.loc 1 304 0
 268 0004 7047     		bx	lr
 269              	.L22:
 270 0006 00BF     		.align	2
 271              	.L21:
 272 0008 00000000 		.word	uwTick
 273              		.cfi_endproc
 274              	.LFE147:
 276              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 277              		.align	1
 278              		.global	HAL_GetTickPrio
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv5-sp-d16
 284              	HAL_GetTickPrio:
 285              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 286              		.loc 1 311 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 291              		.loc 1 313 0
 292 0000 014B     		ldr	r3, .L24
 293 0002 1868     		ldr	r0, [r3]
 294 0004 7047     		bx	lr
 295              	.L25:
 296 0006 00BF     		.align	2
 297              	.L24:
 298 0008 00000000 		.word	.LANCHOR1
 299              		.cfi_endproc
 300              	.LFE148:
 302              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_SetTickFreq
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-sp-d16
 310              	HAL_SetTickFreq:
ARM GAS  /tmp/ccsX5ldF.s 			page 12


 311              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 312              		.loc 1 320 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL9:
 317 0000 10B5     		push	{r4, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
 322              	.LVL10:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 323              		.loc 1 326 0
 324 0002 084B     		ldr	r3, .L30
 325 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 326 0006 8442     		cmp	r4, r0
 327 0008 09D0     		beq	.L28
 328              	.LVL11:
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Back up uwTickFreq frequency */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     prevTickFreq = uwTickFreq;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 329              		.loc 1 332 0
 330 000a 1870     		strb	r0, [r3]
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 331              		.loc 1 335 0
 332 000c 064B     		ldr	r3, .L30+4
 333 000e 1868     		ldr	r0, [r3]
 334              	.LVL12:
 335 0010 FFF7FEFF 		bl	HAL_InitTick
 336              	.LVL13:
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     if (status != HAL_OK)
 337              		.loc 1 337 0
 338 0014 0346     		mov	r3, r0
 339 0016 18B1     		cbz	r0, .L27
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       /* Restore previous tick frequency */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       uwTickFreq = prevTickFreq;
 340              		.loc 1 340 0
ARM GAS  /tmp/ccsX5ldF.s 			page 13


 341 0018 024A     		ldr	r2, .L30
 342 001a 1470     		strb	r4, [r2]
 343 001c 00E0     		b	.L27
 344              	.LVL14:
 345              	.L28:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 346              		.loc 1 321 0
 347 001e 0023     		movs	r3, #0
 348              	.LVL15:
 349              	.L27:
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 350              		.loc 1 345 0
 351 0020 1846     		mov	r0, r3
 352 0022 10BD     		pop	{r4, pc}
 353              	.L31:
 354              		.align	2
 355              	.L30:
 356 0024 00000000 		.word	.LANCHOR0
 357 0028 00000000 		.word	.LANCHOR1
 358              		.cfi_endproc
 359              	.LFE149:
 361              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 362              		.align	1
 363              		.global	HAL_GetTickFreq
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv5-sp-d16
 369              	HAL_GetTickFreq:
 370              	.LFB150:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 371              		.loc 1 352 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 376              		.loc 1 354 0
 377 0000 014B     		ldr	r3, .L33
 378 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 379 0004 7047     		bx	lr
 380              	.L34:
 381 0006 00BF     		.align	2
 382              	.L33:
 383 0008 00000000 		.word	.LANCHOR0
 384              		.cfi_endproc
ARM GAS  /tmp/ccsX5ldF.s 			page 14


 385              	.LFE150:
 387              		.section	.text.HAL_Delay,"ax",%progbits
 388              		.align	1
 389              		.weak	HAL_Delay
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv5-sp-d16
 395              	HAL_Delay:
 396              	.LFB151:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 397              		.loc 1 368 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL16:
 402 0000 38B5     		push	{r3, r4, r5, lr}
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 16
 405              		.cfi_offset 3, -16
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 5, -8
 408              		.cfi_offset 14, -4
 409 0002 0446     		mov	r4, r0
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 410              		.loc 1 369 0
 411 0004 FFF7FEFF 		bl	HAL_GetTick
 412              	.LVL17:
 413 0008 0546     		mov	r5, r0
 414              	.LVL18:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 415              		.loc 1 373 0
 416 000a B4F1FF3F 		cmp	r4, #-1
 417 000e 02D0     		beq	.L37
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 418              		.loc 1 375 0
 419 0010 044B     		ldr	r3, .L39
 420 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 0014 1C44     		add	r4, r4, r3
 422              	.LVL19:
ARM GAS  /tmp/ccsX5ldF.s 			page 15


 423              	.L37:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 424              		.loc 1 378 0 discriminator 1
 425 0016 FFF7FEFF 		bl	HAL_GetTick
 426              	.LVL20:
 427 001a 401B     		subs	r0, r0, r5
 428 001c A042     		cmp	r0, r4
 429 001e FAD3     		bcc	.L37
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 430              		.loc 1 381 0
 431 0020 38BD     		pop	{r3, r4, r5, pc}
 432              	.LVL21:
 433              	.L40:
 434 0022 00BF     		.align	2
 435              	.L39:
 436 0024 00000000 		.word	.LANCHOR0
 437              		.cfi_endproc
 438              	.LFE151:
 440              		.section	.text.HAL_SuspendTick,"ax",%progbits
 441              		.align	1
 442              		.weak	HAL_SuspendTick
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv5-sp-d16
 448              	HAL_SuspendTick:
 449              	.LFB152:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 450              		.loc 1 394 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 455              		.loc 1 396 0
 456 0000 024A     		ldr	r2, .L42
 457 0002 1368     		ldr	r3, [r2]
 458 0004 23F00203 		bic	r3, r3, #2
 459 0008 1360     		str	r3, [r2]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
ARM GAS  /tmp/ccsX5ldF.s 			page 16


 460              		.loc 1 397 0
 461 000a 7047     		bx	lr
 462              	.L43:
 463              		.align	2
 464              	.L42:
 465 000c 10E000E0 		.word	-536813552
 466              		.cfi_endproc
 467              	.LFE152:
 469              		.section	.text.HAL_ResumeTick,"ax",%progbits
 470              		.align	1
 471              		.weak	HAL_ResumeTick
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv5-sp-d16
 477              	HAL_ResumeTick:
 478              	.LFB153:
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 479              		.loc 1 410 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 484              		.loc 1 412 0
 485 0000 024A     		ldr	r2, .L45
 486 0002 1368     		ldr	r3, [r2]
 487 0004 43F00203 		orr	r3, r3, #2
 488 0008 1360     		str	r3, [r2]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 489              		.loc 1 413 0
 490 000a 7047     		bx	lr
 491              	.L46:
 492              		.align	2
 493              	.L45:
 494 000c 10E000E0 		.word	-536813552
 495              		.cfi_endproc
 496              	.LFE153:
 498              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 499              		.align	1
 500              		.global	HAL_GetHalVersion
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
ARM GAS  /tmp/ccsX5ldF.s 			page 17


 504              		.fpu fpv5-sp-d16
 506              	HAL_GetHalVersion:
 507              	.LFB154:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 508              		.loc 1 420 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 513              		.loc 1 422 0
 514 0000 0048     		ldr	r0, .L48
 515 0002 7047     		bx	lr
 516              	.L49:
 517              		.align	2
 518              	.L48:
 519 0004 00090201 		.word	16910592
 520              		.cfi_endproc
 521              	.LFE154:
 523              		.section	.text.HAL_GetREVID,"ax",%progbits
 524              		.align	1
 525              		.global	HAL_GetREVID
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv5-sp-d16
 531              	HAL_GetREVID:
 532              	.LFB155:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 533              		.loc 1 429 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 538              		.loc 1 430 0
 539 0000 014B     		ldr	r3, .L51
 540 0002 1868     		ldr	r0, [r3]
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 541              		.loc 1 431 0
 542 0004 000C     		lsrs	r0, r0, #16
 543 0006 7047     		bx	lr
 544              	.L52:
 545              		.align	2
ARM GAS  /tmp/ccsX5ldF.s 			page 18


 546              	.L51:
 547 0008 002004E0 		.word	-536600576
 548              		.cfi_endproc
 549              	.LFE155:
 551              		.section	.text.HAL_GetDEVID,"ax",%progbits
 552              		.align	1
 553              		.global	HAL_GetDEVID
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv5-sp-d16
 559              	HAL_GetDEVID:
 560              	.LFB156:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 561              		.loc 1 438 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 566              		.loc 1 439 0
 567 0000 024B     		ldr	r3, .L54
 568 0002 1868     		ldr	r0, [r3]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 569              		.loc 1 440 0
 570 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 571 0008 7047     		bx	lr
 572              	.L55:
 573 000a 00BF     		.align	2
 574              	.L54:
 575 000c 002004E0 		.word	-536600576
 576              		.cfi_endproc
 577              	.LFE156:
 579              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_GetUIDw0
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv5-sp-d16
 587              	HAL_GetUIDw0:
 588              	.LFB157:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 589              		.loc 1 447 0
 590              		.cfi_startproc
ARM GAS  /tmp/ccsX5ldF.s 			page 19


 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 594              		.loc 1 449 0
 595 0000 014B     		ldr	r3, .L57
 596 0002 1868     		ldr	r0, [r3]
 597 0004 7047     		bx	lr
 598              	.L58:
 599 0006 00BF     		.align	2
 600              	.L57:
 601 0008 20F4F01F 		.word	535884832
 602              		.cfi_endproc
 603              	.LFE157:
 605              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 606              		.align	1
 607              		.global	HAL_GetUIDw1
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv5-sp-d16
 613              	HAL_GetUIDw1:
 614              	.LFB158:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 615              		.loc 1 456 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 620              		.loc 1 458 0
 621 0000 014B     		ldr	r3, .L60
 622 0002 1868     		ldr	r0, [r3]
 623 0004 7047     		bx	lr
 624              	.L61:
 625 0006 00BF     		.align	2
 626              	.L60:
 627 0008 24F4F01F 		.word	535884836
 628              		.cfi_endproc
 629              	.LFE158:
 631              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_GetUIDw2
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv5-sp-d16
 639              	HAL_GetUIDw2:
 640              	.LFB159:
ARM GAS  /tmp/ccsX5ldF.s 			page 20


 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 641              		.loc 1 465 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 646              		.loc 1 467 0
 647 0000 014B     		ldr	r3, .L63
 648 0002 1868     		ldr	r0, [r3]
 649 0004 7047     		bx	lr
 650              	.L64:
 651 0006 00BF     		.align	2
 652              	.L63:
 653 0008 28F4F01F 		.word	535884840
 654              		.cfi_endproc
 655              	.LFE159:
 657              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 658              		.align	1
 659              		.global	HAL_DBGMCU_EnableDBGSleepMode
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv5-sp-d16
 665              	HAL_DBGMCU_EnableDBGSleepMode:
 666              	.LFB160:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 667              		.loc 1 474 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 672              		.loc 1 475 0
 673 0000 024A     		ldr	r2, .L66
 674 0002 5368     		ldr	r3, [r2, #4]
 675 0004 43F00103 		orr	r3, r3, #1
 676 0008 5360     		str	r3, [r2, #4]
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 677              		.loc 1 476 0
 678 000a 7047     		bx	lr
 679              	.L67:
 680              		.align	2
 681              	.L66:
ARM GAS  /tmp/ccsX5ldF.s 			page 21


 682 000c 002004E0 		.word	-536600576
 683              		.cfi_endproc
 684              	.LFE160:
 686              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 687              		.align	1
 688              		.global	HAL_DBGMCU_DisableDBGSleepMode
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv5-sp-d16
 694              	HAL_DBGMCU_DisableDBGSleepMode:
 695              	.LFB161:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 696              		.loc 1 483 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 701              		.loc 1 484 0
 702 0000 024A     		ldr	r2, .L69
 703 0002 5368     		ldr	r3, [r2, #4]
 704 0004 23F00103 		bic	r3, r3, #1
 705 0008 5360     		str	r3, [r2, #4]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 706              		.loc 1 485 0
 707 000a 7047     		bx	lr
 708              	.L70:
 709              		.align	2
 710              	.L69:
 711 000c 002004E0 		.word	-536600576
 712              		.cfi_endproc
 713              	.LFE161:
 715              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_DBGMCU_EnableDBGStopMode
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv5-sp-d16
 723              	HAL_DBGMCU_EnableDBGStopMode:
 724              	.LFB162:
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 725              		.loc 1 492 0
 726              		.cfi_startproc
ARM GAS  /tmp/ccsX5ldF.s 			page 22


 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 730              		.loc 1 493 0
 731 0000 024A     		ldr	r2, .L72
 732 0002 5368     		ldr	r3, [r2, #4]
 733 0004 43F00203 		orr	r3, r3, #2
 734 0008 5360     		str	r3, [r2, #4]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 735              		.loc 1 494 0
 736 000a 7047     		bx	lr
 737              	.L73:
 738              		.align	2
 739              	.L72:
 740 000c 002004E0 		.word	-536600576
 741              		.cfi_endproc
 742              	.LFE162:
 744              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 745              		.align	1
 746              		.global	HAL_DBGMCU_DisableDBGStopMode
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv5-sp-d16
 752              	HAL_DBGMCU_DisableDBGStopMode:
 753              	.LFB163:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 754              		.loc 1 501 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 759              		.loc 1 502 0
 760 0000 024A     		ldr	r2, .L75
 761 0002 5368     		ldr	r3, [r2, #4]
 762 0004 23F00203 		bic	r3, r3, #2
 763 0008 5360     		str	r3, [r2, #4]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 764              		.loc 1 503 0
 765 000a 7047     		bx	lr
 766              	.L76:
 767              		.align	2
 768              	.L75:
 769 000c 002004E0 		.word	-536600576
 770              		.cfi_endproc
 771              	.LFE163:
 773              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 774              		.align	1
 775              		.global	HAL_DBGMCU_EnableDBGStandbyMode
ARM GAS  /tmp/ccsX5ldF.s 			page 23


 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 779              		.fpu fpv5-sp-d16
 781              	HAL_DBGMCU_EnableDBGStandbyMode:
 782              	.LFB164:
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 783              		.loc 1 510 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 788              		.loc 1 511 0
 789 0000 024A     		ldr	r2, .L78
 790 0002 5368     		ldr	r3, [r2, #4]
 791 0004 43F00403 		orr	r3, r3, #4
 792 0008 5360     		str	r3, [r2, #4]
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 793              		.loc 1 512 0
 794 000a 7047     		bx	lr
 795              	.L79:
 796              		.align	2
 797              	.L78:
 798 000c 002004E0 		.word	-536600576
 799              		.cfi_endproc
 800              	.LFE164:
 802              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 803              		.align	1
 804              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv5-sp-d16
 810              	HAL_DBGMCU_DisableDBGStandbyMode:
 811              	.LFB165:
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 812              		.loc 1 519 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 817              		.loc 1 520 0
 818 0000 024A     		ldr	r2, .L81
ARM GAS  /tmp/ccsX5ldF.s 			page 24


 819 0002 5368     		ldr	r3, [r2, #4]
 820 0004 23F00403 		bic	r3, r3, #4
 821 0008 5360     		str	r3, [r2, #4]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 822              		.loc 1 521 0
 823 000a 7047     		bx	lr
 824              	.L82:
 825              		.align	2
 826              	.L81:
 827 000c 002004E0 		.word	-536600576
 828              		.cfi_endproc
 829              	.LFE165:
 831              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 832              		.align	1
 833              		.global	HAL_EnableCompensationCell
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv5-sp-d16
 839              	HAL_EnableCompensationCell:
 840              	.LFB166:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 841              		.loc 1 530 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 846              		.loc 1 531 0
 847 0000 024A     		ldr	r2, .L84
 848 0002 136A     		ldr	r3, [r2, #32]
 849 0004 43F00103 		orr	r3, r3, #1
 850 0008 1362     		str	r3, [r2, #32]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 851              		.loc 1 532 0
 852 000a 7047     		bx	lr
 853              	.L85:
 854              		.align	2
 855              	.L84:
 856 000c 00380140 		.word	1073821696
 857              		.cfi_endproc
 858              	.LFE166:
 860              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 861              		.align	1
 862              		.global	HAL_DisableCompensationCell
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 866              		.fpu fpv5-sp-d16
ARM GAS  /tmp/ccsX5ldF.s 			page 25


 868              	HAL_DisableCompensationCell:
 869              	.LFB167:
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 870              		.loc 1 541 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 875              		.loc 1 542 0
 876 0000 024A     		ldr	r2, .L87
 877 0002 136A     		ldr	r3, [r2, #32]
 878 0004 23F00103 		bic	r3, r3, #1
 879 0008 1362     		str	r3, [r2, #32]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 880              		.loc 1 543 0
 881 000a 7047     		bx	lr
 882              	.L88:
 883              		.align	2
 884              	.L87:
 885 000c 00380140 		.word	1073821696
 886              		.cfi_endproc
 887              	.LFE167:
 889              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 890              		.align	1
 891              		.global	HAL_EnableFMCMemorySwapping
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv5-sp-d16
 897              	HAL_EnableFMCMemorySwapping:
 898              	.LFB168:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 899              		.loc 1 554 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
ARM GAS  /tmp/ccsX5ldF.s 			page 26


 904              		.loc 1 555 0
 905 0000 024A     		ldr	r2, .L90
 906 0002 1368     		ldr	r3, [r2]
 907 0004 43F48063 		orr	r3, r3, #1024
 908 0008 1360     		str	r3, [r2]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 909              		.loc 1 556 0
 910 000a 7047     		bx	lr
 911              	.L91:
 912              		.align	2
 913              	.L90:
 914 000c 00380140 		.word	1073821696
 915              		.cfi_endproc
 916              	.LFE168:
 918              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 919              		.align	1
 920              		.global	HAL_DisableFMCMemorySwapping
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv5-sp-d16
 926              	HAL_DisableFMCMemorySwapping:
 927              	.LFB169:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 928              		.loc 1 567 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 933              		.loc 1 569 0
 934 0000 024A     		ldr	r2, .L93
 935 0002 1368     		ldr	r3, [r2]
 936 0004 23F44063 		bic	r3, r3, #3072
 937 0008 1360     		str	r3, [r2]
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 938              		.loc 1 570 0
 939 000a 7047     		bx	lr
 940              	.L94:
 941              		.align	2
 942              	.L93:
 943 000c 00380140 		.word	1073821696
 944              		.cfi_endproc
 945              	.LFE169:
 947              		.global	uwTickFreq
 948              		.global	uwTickPrio
ARM GAS  /tmp/ccsX5ldF.s 			page 27


 949              		.comm	uwTick,4,4
 950              		.section	.data.uwTickFreq,"aw",%progbits
 951              		.set	.LANCHOR0,. + 0
 954              	uwTickFreq:
 955 0000 01       		.byte	1
 956              		.section	.data.uwTickPrio,"aw",%progbits
 957              		.align	2
 958              		.set	.LANCHOR1,. + 0
 961              	uwTickPrio:
 962 0000 10000000 		.word	16
 963              		.text
 964              	.Letext0:
 965              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 966              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 967              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 968              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 969              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f756xx.h"
 970              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 971              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 972              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccsX5ldF.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/ccsX5ldF.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccsX5ldF.s:25     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccsX5ldF.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccsX5ldF.s:46     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccsX5ldF.s:59     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccsX5ldF.s:66     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccsX5ldF.s:109    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccsX5ldF.s:114    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccsX5ldF.s:121    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccsX5ldF.s:175    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccsX5ldF.s:182    .text.HAL_Init:0000000000000000 $t
     /tmp/ccsX5ldF.s:189    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccsX5ldF.s:218    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccsX5ldF.s:225    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccsX5ldF.s:244    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccsX5ldF.s:250    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccsX5ldF.s:257    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccsX5ldF.s:272    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccsX5ldF.s:277    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccsX5ldF.s:284    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccsX5ldF.s:298    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccsX5ldF.s:303    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccsX5ldF.s:310    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccsX5ldF.s:356    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccsX5ldF.s:362    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccsX5ldF.s:369    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccsX5ldF.s:383    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccsX5ldF.s:388    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccsX5ldF.s:395    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccsX5ldF.s:436    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccsX5ldF.s:441    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccsX5ldF.s:448    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccsX5ldF.s:465    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccsX5ldF.s:470    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccsX5ldF.s:477    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccsX5ldF.s:494    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccsX5ldF.s:499    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccsX5ldF.s:506    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccsX5ldF.s:519    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccsX5ldF.s:524    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccsX5ldF.s:531    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccsX5ldF.s:547    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccsX5ldF.s:552    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccsX5ldF.s:559    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccsX5ldF.s:575    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccsX5ldF.s:580    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccsX5ldF.s:587    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccsX5ldF.s:601    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccsX5ldF.s:606    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccsX5ldF.s:613    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccsX5ldF.s:627    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccsX5ldF.s:632    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccsX5ldF.s:639    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccsX5ldF.s:653    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/ccsX5ldF.s 			page 29


     /tmp/ccsX5ldF.s:658    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:665    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccsX5ldF.s:682    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccsX5ldF.s:687    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:694    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccsX5ldF.s:711    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccsX5ldF.s:716    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:723    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccsX5ldF.s:740    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccsX5ldF.s:745    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:752    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccsX5ldF.s:769    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccsX5ldF.s:774    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:781    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccsX5ldF.s:798    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccsX5ldF.s:803    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccsX5ldF.s:810    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccsX5ldF.s:827    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccsX5ldF.s:832    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccsX5ldF.s:839    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccsX5ldF.s:856    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccsX5ldF.s:861    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccsX5ldF.s:868    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccsX5ldF.s:885    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccsX5ldF.s:890    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccsX5ldF.s:897    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/ccsX5ldF.s:914    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/ccsX5ldF.s:919    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccsX5ldF.s:926    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/ccsX5ldF.s:943    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/ccsX5ldF.s:954    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccsX5ldF.s:961    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccsX5ldF.s:957    .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping

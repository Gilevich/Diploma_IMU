ARM GAS  /tmp/cc1AMB4O.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	I2C_Flush_TXDR:
  25              	.LFB204:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @file    stm32f7xx_hal_i2c.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @verbatim
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) I2C pins configuration
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive stream
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
ARM GAS  /tmp/cc1AMB4O.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx stream
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   the DMA Tx or Rx stream
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =====================================
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ===================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==========================================================
ARM GAS  /tmp/cc1AMB4O.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           when a direction change during transfer
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functional is same as associated interfac
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             interface.
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Different sequential I2C interfaces are listed below:
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
ARM GAS  /tmp/cc1AMB4O.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =======================================
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ==============================
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     =================================
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
ARM GAS  /tmp/cc1AMB4O.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      ==================================
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      *** Callback registration ***
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      =============================================
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      to register an interrupt callback.
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      weak function.
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      and the Callback ID.
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
ARM GAS  /tmp/cc1AMB4O.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****      [..]
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   @endverbatim
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @attention
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   ******************************************************************************
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #include "stm32f7xx_hal.h"
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup STM32F7xx_HAL_Driver
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1AMB4O.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /* Bit field can be combinated with @ref I2C_
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /* Bit field can be combinated with @ref I2C_
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /* Bit field can be combinated with @ref I2C_
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /* Bit definition to manage addition of globa
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /* Bit definition to manage only STOP eveneme
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /* Bit definition to manage only Reload of NB
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
ARM GAS  /tmp/cc1AMB4O.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to treat different error callback */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to flush TXDR register */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                uint32_t Request);
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Private function to Convert Specific options */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief    Initialization and Configuration functions
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           the selected configuration:
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Clock Timing
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 1
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Dual Addressing mode
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Own Address 2 Mask
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) General call mode
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) Nostretch mode
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
ARM GAS  /tmp/cc1AMB4O.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
ARM GAS  /tmp/cc1AMB4O.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c == NULL)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
ARM GAS  /tmp/cc1AMB4O.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
ARM GAS  /tmp/cc1AMB4O.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                            pI2C_CallbackTypeDef pCallback)
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
ARM GAS  /tmp/cc1AMB4O.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1AMB4O.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
ARM GAS  /tmp/cc1AMB4O.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     switch (CallbackID)
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       default :
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update the error code */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return error status */
ARM GAS  /tmp/cc1AMB4O.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         status =  HAL_ERROR;
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         break;
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (pCallback == NULL)
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1AMB4O.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update the error code */
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Return error status */
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     status =  HAL_ERROR;
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Release Lock */
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return status;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief   Data transfers functions
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                       ##### IO operation functions #####
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transfers.
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) There are two modes of transfer:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             after finishing transfer.
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             The end of the data processing will be indicated through the
ARM GAS  /tmp/cc1AMB4O.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             using DMA mode.
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) Blocking mode functions are :
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
ARM GAS  /tmp/cc1AMB4O.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                           uint32_t Timeout)
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
ARM GAS  /tmp/cc1AMB4O.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/cc1AMB4O.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                          uint32_t Timeout)
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
ARM GAS  /tmp/cc1AMB4O.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1AMB4O.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
ARM GAS  /tmp/cc1AMB4O.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag */
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
ARM GAS  /tmp/cc1AMB4O.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
ARM GAS  /tmp/cc1AMB4O.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store Last receive data if any */
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Read data from RXDR */
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Increment Buffer pointer */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferCount--;
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP flag is set */
ARM GAS  /tmp/cc1AMB4O.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP flag */
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                              uint16_t Size)
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cc1AMB4O.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc1AMB4O.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  /tmp/cc1AMB4O.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                               uint16_t Size)
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
ARM GAS  /tmp/cc1AMB4O.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                              uint16_t Size)
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
ARM GAS  /tmp/cc1AMB4O.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address */
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
ARM GAS  /tmp/cc1AMB4O.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
ARM GAS  /tmp/cc1AMB4O.s 			page 39


2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cc1AMB4O.s 			page 40


2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
ARM GAS  /tmp/cc1AMB4O.s 			page 41


2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                     uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Ti
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
ARM GAS  /tmp/cc1AMB4O.s 			page 42


2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cc1AMB4O.s 			page 43


2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cc1AMB4O.s 			page 44


2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Tim
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address */
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 45


2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cc1AMB4O.s 			page 46


2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
ARM GAS  /tmp/cc1AMB4O.s 			page 47


2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/cc1AMB4O.s 			page 48


2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
ARM GAS  /tmp/cc1AMB4O.s 			page 49


2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* possible to enable all of these */
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                         uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cc1AMB4O.s 			page 50


2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
ARM GAS  /tmp/cc1AMB4O.s 			page 51


2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
ARM GAS  /tmp/cc1AMB4O.s 			page 52


2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
ARM GAS  /tmp/cc1AMB4O.s 			page 53


2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 54


2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Trials Number of trials
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp1;
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   FlagStatus tmp2;
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_BUSY;
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     do
ARM GAS  /tmp/cc1AMB4O.s 			page 55


3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Generate Start */
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C state */
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Update I2C error code */
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Process Unlocked */
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             return HAL_ERROR;
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Device is ready */
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
ARM GAS  /tmp/cc1AMB4O.s 			page 56


3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate Stop */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Trials */
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Trials++;
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C state */
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update I2C error code */
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  /tmp/cc1AMB4O.s 			page 57


3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 58


3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                   uint16_t Size, uint32_t XferOptions)
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 59


3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/cc1AMB4O.s 			page 60


3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
ARM GAS  /tmp/cc1AMB4O.s 			page 61


3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t Size, uint32_t XferOptions)
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
ARM GAS  /tmp/cc1AMB4O.s 			page 62


3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
ARM GAS  /tmp/cc1AMB4O.s 			page 63


3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 64


3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the DMA error callback */
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable the DMA stream */
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update XferCount value */
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                   process unlock */
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Enable DMA Request */
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C state */
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Update I2C error code */
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 65


3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Send Slave Address */
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                 process unlock */
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* possible to enable all of these */
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint32_t XferOptions)
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
ARM GAS  /tmp/cc1AMB4O.s 			page 66


3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 67


3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                  uint32_t XferOptions)
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
ARM GAS  /tmp/cc1AMB4O.s 			page 68


3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 69


3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
ARM GAS  /tmp/cc1AMB4O.s 			page 70


3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint32_t XferOptions)
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cc1AMB4O.s 			page 71


3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
ARM GAS  /tmp/cc1AMB4O.s 			page 72


4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint32_t XferOptions)
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable associated Interrupts */
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA TX */
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
ARM GAS  /tmp/cc1AMB4O.s 			page 73


4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Abort DMA RX */
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Nothing to do */
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Prepare transfer parameters */
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the DMA error callback */
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
ARM GAS  /tmp/cc1AMB4O.s 			page 74


4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable the DMA stream */
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Reset XferSize */
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = 0;
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C state */
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update I2C error code */
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     process unlock */
ARM GAS  /tmp/cc1AMB4O.s 			page 75


4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable DMA Request */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmp;
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
ARM GAS  /tmp/cc1AMB4O.s 			page 76


4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_BUSY;
4260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Locked */
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Do nothing */
4292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****               process unlock */
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
ARM GAS  /tmp/cc1AMB4O.s 			page 77


4308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_OK;
4310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wrong usage of abort function */
4314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
4316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
4357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear BERR flag */
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
ARM GAS  /tmp/cc1AMB4O.s 			page 78


4365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear OVR flag */
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ARLO flag */
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 79


4422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(TransferDirection);
4471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/cc1AMB4O.s 			page 80


4479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C error callback.
4528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
ARM GAS  /tmp/cc1AMB4O.s 			page 81


4536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C abort callback.
4544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
4547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(hi2c);
4552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****    */
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *  @brief   Peripheral State, Mode and Error functions
4564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *
4565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @verbatim
4566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****  ===============================================================================
4569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     [..]
4570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     and the data flow.
4572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** @endverbatim
4574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL state
4582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->State;
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         the configuration information for I2C module
ARM GAS  /tmp/cc1AMB4O.s 			page 82


4593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL mode
4594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Return the I2C error code.
4602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval I2C Error Code
4605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @}
4617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @{
4621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
ARM GAS  /tmp/cc1AMB4O.s 			page 83


4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR */
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize--;
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
4676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
ARM GAS  /tmp/cc1AMB4O.s 			page 84


4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/cc1AMB4O.s 			page 85


4764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa13
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
4793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Flush TX register */
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Clear NACK Flag */
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 86


4821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Read data from RXDR */
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
4853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
4854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if all Data have already been sent */
4862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Write data to TXDR */
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Increment Buffer pointer */
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
4873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
ARM GAS  /tmp/cc1AMB4O.s 			page 87


4878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
4885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
4887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
4894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
4896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
4902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
4903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
4905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
4906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
4907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Locked */
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set corresponding Error Code */
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC interrupt */
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Recover Slave address */
ARM GAS  /tmp/cc1AMB4O.s 			page 88


4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
4951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
4954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Update XferCount value */
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
4962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable DMA Request */
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
4973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
4974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
4981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
4986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
4987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cc1AMB4O.s 			page 89


4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
4994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
4997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Generate Stop */
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
5004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
5010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
5015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Master complete process */
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
5018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process locked */
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if STOPF is set */
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
ARM GAS  /tmp/cc1AMB4O.s 			page 90


5049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             treatdmanack = 1U;
5083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (treatdmanack == 1U)
5088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
5091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Flush TX register */
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
ARM GAS  /tmp/cc1AMB4O.s 			page 91


5106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         else
5108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear NACK Flag */
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear NACK Flag */
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmpstate = hi2c->State;
5124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           else
5136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
5137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****             /* Do nothing */
5138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
5139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 92


5163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 93


5220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
5231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send Memory Address */
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
5259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Wait until TC flag is set */
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
5269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
ARM GAS  /tmp/cc1AMB4O.s 			page 94


5277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
5283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd1code;
5285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t ownadd2code;
5286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   UNUSED(ITFlags);
5289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
5307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Reset Address Event counter */
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Clear ADDR flag */
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Call Slave Addr callback */
5317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
5323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
5325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 95


5334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Slave Addr callback */
5335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call Slave Addr callback */
5352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Else clear address flag only */
5360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear ADDR flag */
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 96


5391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1AMB4O.s 			page 97


5448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Interrupts */
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
ARM GAS  /tmp/cc1AMB4O.s 			page 98


5505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
5535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACK Flag */
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set acknowledge error code */
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Fetch Last receive data if any */
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
5545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     UNUSED(tmpreg);
5549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
ARM GAS  /tmp/cc1AMB4O.s 			page 99


5562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
ARM GAS  /tmp/cc1AMB4O.s 			page 100


5619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
5636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear STOP Flag */
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 101


5676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register */
5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Do nothing */
5703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
ARM GAS  /tmp/cc1AMB4O.s 			page 102


5733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Transfer */
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
ARM GAS  /tmp/cc1AMB4O.s 			page 103


5790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Store Last receive data if any */
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Read data from RXDR */
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Increment Buffer pointer */
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
5826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable all Interrupts*/
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Clear NACK Flag */
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Process Unlocked */
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc1AMB4O.s 			page 104


5847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
5859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Set new error code */
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable Interrupts */
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable all interrupts */
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* If state is an abort treatment on going, don't change state */
5886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* This change will be do later */
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
5898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
5899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 105


5904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
5906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA TX */
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || \
5928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
5929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
5936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Abort DMA RX */
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
5947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
5950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
5952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
5955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
5959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1AMB4O.s 			page 106


5961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
5963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
5964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
5966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
5967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
5970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
5985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
5991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #else
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
5999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
6002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
6006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  27              		.loc 1 6006 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
6007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
6008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
6009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  33              		.loc 1 6009 0
  34 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc1AMB4O.s 			page 107


  35 0002 9A69     		ldr	r2, [r3, #24]
  36 0004 12F0020F 		tst	r2, #2
  37 0008 01D0     		beq	.L2
6010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  38              		.loc 1 6011 0
  39 000a 0022     		movs	r2, #0
  40 000c 9A62     		str	r2, [r3, #40]
  41              	.L2:
6012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Flush TX register if not empty */
6015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  42              		.loc 1 6015 0
  43 000e 0368     		ldr	r3, [r0]
  44 0010 9A69     		ldr	r2, [r3, #24]
  45 0012 12F0010F 		tst	r2, #1
  46 0016 03D1     		bne	.L1
6016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  47              		.loc 1 6017 0
  48 0018 9A69     		ldr	r2, [r3, #24]
  49 001a 42F00102 		orr	r2, r2, #1
  50 001e 9A61     		str	r2, [r3, #24]
  51              	.L1:
6018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  52              		.loc 1 6019 0
  53 0020 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE204:
  57              		.section	.text.I2C_TransferConfig,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv5-sp-d16
  64              	I2C_TransferConfig:
  65              	.LFB216:
6020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
6023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
ARM GAS  /tmp/cc1AMB4O.s 			page 108


6038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
6057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
ARM GAS  /tmp/cc1AMB4O.s 			page 109


6095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable DMA Request */
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupt */
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Update Buffer pointer */
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable the DMA stream */
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
6132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     else
6137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hdma DMA handle
6147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/cc1AMB4O.s 			page 110


6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable DMA Request */
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle
6174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
6184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
6192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       treatdmaerror = 1U;
6194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check if a FIFO error is detected, if true normal use case, so no specific action to perform *
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (!((HAL_DMA_GetError(hdma) == HAL_DMA_ERROR_FE)) && (treatdmaerror != 0U))
6199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable Acknowledge */
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
6202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
ARM GAS  /tmp/cc1AMB4O.s 			page 111


6209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param hdma DMA handle.
6212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
6226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart)
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
ARM GAS  /tmp/cc1AMB4O.s 			page 112


6266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
6295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
ARM GAS  /tmp/cc1AMB4O.s 			page 113


6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a NACK is detected */
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Store Last receive data if any */
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Return HAL_OK */
6361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_OK;
6363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       else
6365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear STOP Flag */
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         /* Process Unlocked */
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  /tmp/cc1AMB4O.s 			page 114


6380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Check for the Timeout */
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Process Unlocked */
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
6393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval HAL status
6405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Check for the Timeout */
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           /* Process Unlocked */
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           return HAL_ERROR;
6427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
6428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
6429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear NACKF Flag */
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear STOP Flag */
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 115


6437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Flush TX register */
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Process Unlocked */
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     return HAL_ERROR;
6451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return HAL_OK;
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
6454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
6464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                uint32_t Request)
6476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
  66              		.loc 1 6476 0
  67              		.cfi_startproc
  68              		@ args = 4, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL1:
  72 0000 70B4     		push	{r4, r5, r6}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 12
  75              		.cfi_offset 4, -12
  76              		.cfi_offset 5, -8
  77              		.cfi_offset 6, -4
  78 0002 039E     		ldr	r6, [sp, #12]
6477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
6478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
ARM GAS  /tmp/cc1AMB4O.s 			page 116


6481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* update CR2 register */
6483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2,
  79              		.loc 1 6483 0
  80 0004 0568     		ldr	r5, [r0]
  81 0006 6868     		ldr	r0, [r5, #4]
  82              	.LVL2:
  83 0008 740D     		lsrs	r4, r6, #21
  84 000a 04F48064 		and	r4, r4, #1024
  85 000e 44F07F74 		orr	r4, r4, #66846720
  86 0012 44F45834 		orr	r4, r4, #221184
  87 0016 44F47F74 		orr	r4, r4, #1020
  88 001a 44F00304 		orr	r4, r4, #3
  89 001e 20EA0400 		bic	r0, r0, r4
  90 0022 C1F30901 		ubfx	r1, r1, #0, #10
  91              	.LVL3:
  92 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  93 002a 1943     		orrs	r1, r1, r3
  94 002c 3143     		orrs	r1, r1, r6
  95 002e 0143     		orrs	r1, r1, r0
  96 0030 6960     		str	r1, [r5, #4]
6484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
6485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START
6486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
6487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                         (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode 
6488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
  97              		.loc 1 6488 0
  98 0032 70BC     		pop	{r4, r5, r6}
  99              	.LCFI1:
 100              		.cfi_restore 6
 101              		.cfi_restore 5
 102              		.cfi_restore 4
 103              		.cfi_def_cfa_offset 0
 104              	.LVL4:
 105 0034 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE216:
 109              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-sp-d16
 116              	I2C_Enable_IRQ:
 117              	.LFB217:
6489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 118              		.loc 1 6498 0
 119              		.cfi_startproc
ARM GAS  /tmp/cc1AMB4O.s 			page 117


 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL5:
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 124              		.loc 1 6501 0
 125 0000 436B     		ldr	r3, [r0, #52]
 126 0002 1A4A     		ldr	r2, .L21
 127 0004 9342     		cmp	r3, r2
 128 0006 15D0     		beq	.L7
 129              		.loc 1 6501 0 is_stmt 0 discriminator 1
 130 0008 194A     		ldr	r2, .L21+4
 131 000a 9342     		cmp	r3, r2
 132 000c 12D0     		beq	.L7
6502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
6511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
6517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
6520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_RELOAD_IT)
6523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable TC interrupts */
6525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 133              		.loc 1 6530 0 is_stmt 1
 134 000e 11F4004F 		tst	r1, #32768
 135 0012 29D1     		bne	.L17
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 136              		.loc 1 6499 0
 137 0014 0023     		movs	r3, #0
 138              	.L13:
 139              	.LVL6:
6531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 118


6535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 140              		.loc 1 6536 0
 141 0016 11F0010F 		tst	r1, #1
 142 001a 01D0     		beq	.L14
6537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 143              		.loc 1 6539 0
 144 001c 43F0F203 		orr	r3, r3, #242
 145              	.LVL7:
 146              	.L14:
6540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 147              		.loc 1 6542 0
 148 0020 11F0020F 		tst	r1, #2
 149 0024 01D0     		beq	.L15
6543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 150              		.loc 1 6545 0
 151 0026 43F0F403 		orr	r3, r3, #244
 152              	.LVL8:
 153              	.L15:
6546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 154              		.loc 1 6548 0
 155 002a 2029     		cmp	r1, #32
 156 002c 0CD1     		bne	.L12
6549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Enable STOP interrupts */
6551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 157              		.loc 1 6551 0
 158 002e 43F02003 		orr	r3, r3, #32
 159              	.LVL9:
 160 0032 09E0     		b	.L12
 161              	.LVL10:
 162              	.L7:
6504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 163              		.loc 1 6504 0
 164 0034 11F4004F 		tst	r1, #32768
 165 0038 0BD1     		bne	.L16
6499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 166              		.loc 1 6499 0
 167 003a 0023     		movs	r3, #0
 168              	.L9:
 169              	.LVL11:
6510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 170              		.loc 1 6510 0
 171 003c 1029     		cmp	r1, #16
 172 003e 0AD0     		beq	.L18
 173              	.L10:
6516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 174              		.loc 1 6516 0
 175 0040 2029     		cmp	r1, #32
ARM GAS  /tmp/cc1AMB4O.s 			page 119


 176 0042 0BD0     		beq	.L19
 177              	.L11:
6522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 178              		.loc 1 6522 0
 179 0044 4029     		cmp	r1, #64
 180 0046 0CD0     		beq	.L20
 181              	.L12:
6552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all interrupts requested done */
6558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 182              		.loc 1 6558 0
 183 0048 0168     		ldr	r1, [r0]
 184              	.LVL12:
 185 004a 0A68     		ldr	r2, [r1]
 186 004c 1343     		orrs	r3, r3, r2
 187              	.LVL13:
 188 004e 0B60     		str	r3, [r1]
6559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 189              		.loc 1 6559 0
 190 0050 7047     		bx	lr
 191              	.LVL14:
 192              	.L16:
6507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 193              		.loc 1 6507 0
 194 0052 B823     		movs	r3, #184
 195 0054 F2E7     		b	.L9
 196              	.LVL15:
 197              	.L18:
6513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 198              		.loc 1 6513 0
 199 0056 43F09003 		orr	r3, r3, #144
 200              	.LVL16:
 201 005a F1E7     		b	.L10
 202              	.L19:
6519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 203              		.loc 1 6519 0
 204 005c 43F06003 		orr	r3, r3, #96
 205              	.LVL17:
 206 0060 F0E7     		b	.L11
 207              	.L20:
6525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 208              		.loc 1 6525 0
 209 0062 43F04003 		orr	r3, r3, #64
 210              	.LVL18:
 211 0066 EFE7     		b	.L12
 212              	.LVL19:
 213              	.L17:
6533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 214              		.loc 1 6533 0
 215 0068 B823     		movs	r3, #184
 216 006a D4E7     		b	.L13
 217              	.L22:
 218              		.align	2
ARM GAS  /tmp/cc1AMB4O.s 			page 120


 219              	.L21:
 220 006c 00000000 		.word	I2C_Master_ISR_DMA
 221 0070 00000000 		.word	I2C_Slave_ISR_DMA
 222              		.cfi_endproc
 223              	.LFE217:
 225              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv5-sp-d16
 232              	I2C_Disable_IRQ:
 233              	.LFB218:
6560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 234              		.loc 1 6569 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL20:
6570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 240              		.loc 1 6572 0
 241 0000 11F0010F 		tst	r1, #1
 242 0004 09D0     		beq	.L30
 243              	.LVL21:
6573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 244              		.loc 1 6577 0
 245 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 246 000a 03F02803 		and	r3, r3, #40
 247 000e 282B     		cmp	r3, #40
 248 0010 01D0     		beq	.L45
6578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 249              		.loc 1 6580 0
 250 0012 F223     		movs	r3, #242
 251 0014 02E0     		b	.L24
 252              	.L45:
6575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 253              		.loc 1 6575 0
 254 0016 4223     		movs	r3, #66
 255 0018 00E0     		b	.L24
ARM GAS  /tmp/cc1AMB4O.s 			page 121


 256              	.LVL22:
 257              	.L30:
6570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 258              		.loc 1 6570 0
 259 001a 0023     		movs	r3, #0
 260              	.LVL23:
 261              	.L24:
6581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 262              		.loc 1 6584 0
 263 001c 11F0020F 		tst	r1, #2
 264 0020 29D0     		beq	.L34
6569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 265              		.loc 1 6569 0
 266 0022 10B4     		push	{r4}
 267              	.LCFI2:
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 4, -4
6585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 270              		.loc 1 6587 0
 271 0024 43F04404 		orr	r4, r3, #68
 272              	.LVL24:
6588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 273              		.loc 1 6589 0
 274 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 275 002c 02F02802 		and	r2, r2, #40
 276 0030 282A     		cmp	r2, #40
 277 0032 12D0     		beq	.L32
6590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
6591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 278              		.loc 1 6592 0
 279 0034 43F0F403 		orr	r3, r3, #244
 280              	.LVL25:
 281              	.L25:
6593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
6594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 282              		.loc 1 6596 0
 283 0038 11F4004F 		tst	r1, #32768
 284 003c 0FD1     		bne	.L46
 285              	.L26:
6597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 286              		.loc 1 6602 0
 287 003e 1029     		cmp	r1, #16
 288 0040 10D0     		beq	.L47
ARM GAS  /tmp/cc1AMB4O.s 			page 122


 289              	.L27:
6603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 290              		.loc 1 6608 0
 291 0042 2029     		cmp	r1, #32
 292 0044 11D0     		beq	.L48
 293              	.L28:
6609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable STOP interrupts */
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 294              		.loc 1 6614 0
 295 0046 4029     		cmp	r1, #64
 296 0048 12D0     		beq	.L49
 297              	.L29:
6615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Enable TC interrupts */
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 298              		.loc 1 6623 0
 299 004a 0168     		ldr	r1, [r0]
 300              	.LVL26:
 301 004c 0A68     		ldr	r2, [r1]
 302 004e 22EA0303 		bic	r3, r2, r3
 303              	.LVL27:
 304 0052 0B60     		str	r3, [r1]
6624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 305              		.loc 1 6624 0
 306 0054 5DF8044B 		ldr	r4, [sp], #4
 307              	.LCFI3:
 308              		.cfi_remember_state
 309              		.cfi_restore 4
 310              		.cfi_def_cfa_offset 0
 311 0058 7047     		bx	lr
 312              	.LVL28:
 313              	.L32:
 314              	.LCFI4:
 315              		.cfi_restore_state
6587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 316              		.loc 1 6587 0
 317 005a 2346     		mov	r3, r4
 318 005c ECE7     		b	.L25
 319              	.LVL29:
 320              	.L46:
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 321              		.loc 1 6599 0
ARM GAS  /tmp/cc1AMB4O.s 			page 123


 322 005e 43F0B803 		orr	r3, r3, #184
 323              	.LVL30:
 324 0062 ECE7     		b	.L26
 325              	.L47:
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 326              		.loc 1 6605 0
 327 0064 43F09003 		orr	r3, r3, #144
 328              	.LVL31:
 329 0068 EBE7     		b	.L27
 330              	.L48:
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 331              		.loc 1 6611 0
 332 006a 43F02003 		orr	r3, r3, #32
 333              	.LVL32:
 334 006e EAE7     		b	.L28
 335              	.L49:
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 336              		.loc 1 6617 0
 337 0070 43F04003 		orr	r3, r3, #64
 338              	.LVL33:
 339 0074 E9E7     		b	.L29
 340              	.L34:
 341              	.LCFI5:
 342              		.cfi_def_cfa_offset 0
 343              		.cfi_restore 4
6596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 344              		.loc 1 6596 0
 345 0076 11F4004F 		tst	r1, #32768
 346 007a 0BD1     		bne	.L50
 347              	.L36:
6602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 348              		.loc 1 6602 0
 349 007c 1029     		cmp	r1, #16
 350 007e 0CD0     		beq	.L51
 351              	.L38:
6608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 352              		.loc 1 6608 0
 353 0080 2029     		cmp	r1, #32
 354 0082 0DD0     		beq	.L52
 355              	.L40:
6614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 356              		.loc 1 6614 0
 357 0084 4029     		cmp	r1, #64
 358 0086 0ED0     		beq	.L53
 359              	.L42:
6623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 360              		.loc 1 6623 0
 361 0088 0168     		ldr	r1, [r0]
 362              	.LVL34:
 363 008a 0A68     		ldr	r2, [r1]
 364 008c 22EA0303 		bic	r3, r2, r3
 365              	.LVL35:
 366 0090 0B60     		str	r3, [r1]
 367 0092 7047     		bx	lr
 368              	.LVL36:
 369              	.L50:
6599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1AMB4O.s 			page 124


 370              		.loc 1 6599 0
 371 0094 43F0B803 		orr	r3, r3, #184
 372              	.LVL37:
 373 0098 F0E7     		b	.L36
 374              	.L51:
6605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 375              		.loc 1 6605 0
 376 009a 43F09003 		orr	r3, r3, #144
 377              	.LVL38:
 378 009e EFE7     		b	.L38
 379              	.L52:
6611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 380              		.loc 1 6611 0
 381 00a0 43F02003 		orr	r3, r3, #32
 382              	.LVL39:
 383 00a4 EEE7     		b	.L40
 384              	.L53:
6617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 385              		.loc 1 6617 0
 386 00a6 43F04003 		orr	r3, r3, #64
 387              	.LVL40:
 388 00aa EDE7     		b	.L42
 389              		.cfi_endproc
 390              	.LFE218:
 392              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 393              		.align	1
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv5-sp-d16
 399              	I2C_ConvertOtherXferOptions:
 400              	.LFB219:
6625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
6626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
6627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functional XferOptions.
6628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   * @retval None
6630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   */
6631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** {
 401              		.loc 1 6632 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              	.LVL41:
6633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 407              		.loc 1 6636 0
 408 0000 C36A     		ldr	r3, [r0, #44]
 409 0002 AA2B     		cmp	r3, #170
 410 0004 04D0     		beq	.L57
6637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1AMB4O.s 			page 125


6640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 411              		.loc 1 6644 0
 412 0006 C36A     		ldr	r3, [r0, #44]
 413 0008 B3F52A4F 		cmp	r3, #43520
 414 000c 03D0     		beq	.L58
 415              	.L54:
6645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
6647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   else
6649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
6650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     /* Nothing to do */
6651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
6652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 416              		.loc 1 6652 0
 417 000e 7047     		bx	lr
 418              	.L57:
6638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 419              		.loc 1 6638 0
 420 0010 0023     		movs	r3, #0
 421 0012 C362     		str	r3, [r0, #44]
 422 0014 7047     		bx	lr
 423              	.L58:
6646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 424              		.loc 1 6646 0
 425 0016 4FF00073 		mov	r3, #33554432
 426 001a C362     		str	r3, [r0, #44]
 427              		.loc 1 6652 0
 428 001c F7E7     		b	.L54
 429              		.cfi_endproc
 430              	.LFE219:
 432              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 433              		.align	1
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv5-sp-d16
 439              	I2C_IsAcknowledgeFailed:
 440              	.LFB215:
6407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 441              		.loc 1 6407 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              	.LVL42:
 446 0000 70B5     		push	{r4, r5, r6, lr}
 447              	.LCFI6:
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 4, -16
 450              		.cfi_offset 5, -12
 451              		.cfi_offset 6, -8
 452              		.cfi_offset 14, -4
 453 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc1AMB4O.s 			page 126


 454 0004 0D46     		mov	r5, r1
 455 0006 1646     		mov	r6, r2
6408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 456              		.loc 1 6408 0
 457 0008 0368     		ldr	r3, [r0]
 458 000a 9B69     		ldr	r3, [r3, #24]
 459 000c 13F0100F 		tst	r3, #16
 460 0010 1CD0     		beq	.L66
 461              	.LVL43:
 462              	.L62:
6412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 463              		.loc 1 6412 0
 464 0012 2368     		ldr	r3, [r4]
 465 0014 9A69     		ldr	r2, [r3, #24]
 466 0016 12F0200F 		tst	r2, #32
 467 001a 19D1     		bne	.L67
6415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 468              		.loc 1 6415 0
 469 001c B5F1FF3F 		cmp	r5, #-1
 470 0020 F7D0     		beq	.L62
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 471              		.loc 1 6417 0
 472 0022 FFF7FEFF 		bl	HAL_GetTick
 473              	.LVL44:
 474 0026 801B     		subs	r0, r0, r6
 475 0028 A842     		cmp	r0, r5
 476 002a 01D8     		bhi	.L63
6417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 477              		.loc 1 6417 0 is_stmt 0 discriminator 1
 478 002c 002D     		cmp	r5, #0
 479 002e F0D1     		bne	.L62
 480              	.L63:
6419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 481              		.loc 1 6419 0 is_stmt 1
 482 0030 636C     		ldr	r3, [r4, #68]
 483 0032 43F02003 		orr	r3, r3, #32
 484 0036 6364     		str	r3, [r4, #68]
6420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 485              		.loc 1 6420 0
 486 0038 2023     		movs	r3, #32
 487 003a 84F84130 		strb	r3, [r4, #65]
6421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 488              		.loc 1 6421 0
 489 003e 0023     		movs	r3, #0
 490 0040 84F84230 		strb	r3, [r4, #66]
6424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 491              		.loc 1 6424 0
 492 0044 84F84030 		strb	r3, [r4, #64]
6426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 493              		.loc 1 6426 0
 494 0048 0120     		movs	r0, #1
 495 004a 20E0     		b	.L61
 496              	.LVL45:
 497              	.L66:
6452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 498              		.loc 1 6452 0
 499 004c 0020     		movs	r0, #0
ARM GAS  /tmp/cc1AMB4O.s 			page 127


 500              	.LVL46:
 501 004e 1EE0     		b	.L61
 502              	.LVL47:
 503              	.L67:
6432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 504              		.loc 1 6432 0
 505 0050 1022     		movs	r2, #16
 506 0052 DA61     		str	r2, [r3, #28]
6435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 507              		.loc 1 6435 0
 508 0054 2368     		ldr	r3, [r4]
 509 0056 2025     		movs	r5, #32
 510              	.LVL48:
 511 0058 DD61     		str	r5, [r3, #28]
6438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 512              		.loc 1 6438 0
 513 005a 2046     		mov	r0, r4
 514 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 515              	.LVL49:
6441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 516              		.loc 1 6441 0
 517 0060 2268     		ldr	r2, [r4]
 518 0062 5368     		ldr	r3, [r2, #4]
 519 0064 23F0FF73 		bic	r3, r3, #33423360
 520 0068 23F48B33 		bic	r3, r3, #71168
 521 006c 23F4FF73 		bic	r3, r3, #510
 522 0070 23F00103 		bic	r3, r3, #1
 523 0074 5360     		str	r3, [r2, #4]
6443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 524              		.loc 1 6443 0
 525 0076 636C     		ldr	r3, [r4, #68]
 526 0078 43F00403 		orr	r3, r3, #4
 527 007c 6364     		str	r3, [r4, #68]
6444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 528              		.loc 1 6444 0
 529 007e 84F84150 		strb	r5, [r4, #65]
6445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 530              		.loc 1 6445 0
 531 0082 0023     		movs	r3, #0
 532 0084 84F84230 		strb	r3, [r4, #66]
6448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 533              		.loc 1 6448 0
 534 0088 84F84030 		strb	r3, [r4, #64]
6450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 535              		.loc 1 6450 0
 536 008c 0120     		movs	r0, #1
 537              	.L61:
6453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 538              		.loc 1 6453 0
 539 008e 70BD     		pop	{r4, r5, r6, pc}
 540              		.cfi_endproc
 541              	.LFE215:
 543              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 544              		.align	1
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
ARM GAS  /tmp/cc1AMB4O.s 			page 128


 548              		.fpu fpv5-sp-d16
 550              	I2C_WaitOnTXISFlagUntilTimeout:
 551              	.LFB212:
6273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 552              		.loc 1 6273 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              	.LVL50:
 557 0000 70B5     		push	{r4, r5, r6, lr}
 558              	.LCFI7:
 559              		.cfi_def_cfa_offset 16
 560              		.cfi_offset 4, -16
 561              		.cfi_offset 5, -12
 562              		.cfi_offset 6, -8
 563              		.cfi_offset 14, -4
 564 0002 0446     		mov	r4, r0
 565 0004 0D46     		mov	r5, r1
 566 0006 1646     		mov	r6, r2
 567              	.LVL51:
 568              	.L71:
6274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 569              		.loc 1 6274 0
 570 0008 2368     		ldr	r3, [r4]
 571 000a 9B69     		ldr	r3, [r3, #24]
 572 000c 13F0020F 		tst	r3, #2
 573 0010 1DD1     		bne	.L76
6277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 574              		.loc 1 6277 0
 575 0012 3246     		mov	r2, r6
 576 0014 2946     		mov	r1, r5
 577 0016 2046     		mov	r0, r4
 578 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 579              	.LVL52:
 580 001c C8B9     		cbnz	r0, .L74
6283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 581              		.loc 1 6283 0
 582 001e B5F1FF3F 		cmp	r5, #-1
 583 0022 F1D0     		beq	.L71
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 584              		.loc 1 6285 0
 585 0024 FFF7FEFF 		bl	HAL_GetTick
 586              	.LVL53:
 587 0028 801B     		subs	r0, r0, r6
 588 002a A842     		cmp	r0, r5
 589 002c 01D8     		bhi	.L72
6285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 590              		.loc 1 6285 0 is_stmt 0 discriminator 1
 591 002e 002D     		cmp	r5, #0
 592 0030 EAD1     		bne	.L71
 593              	.L72:
6287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 594              		.loc 1 6287 0 is_stmt 1
 595 0032 636C     		ldr	r3, [r4, #68]
 596 0034 43F02003 		orr	r3, r3, #32
 597 0038 6364     		str	r3, [r4, #68]
6288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
ARM GAS  /tmp/cc1AMB4O.s 			page 129


 598              		.loc 1 6288 0
 599 003a 2023     		movs	r3, #32
 600 003c 84F84130 		strb	r3, [r4, #65]
6289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 601              		.loc 1 6289 0
 602 0040 0023     		movs	r3, #0
 603 0042 84F84230 		strb	r3, [r4, #66]
6292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 604              		.loc 1 6292 0
 605 0046 84F84030 		strb	r3, [r4, #64]
6294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 606              		.loc 1 6294 0
 607 004a 0120     		movs	r0, #1
 608 004c 00E0     		b	.L70
 609              	.L76:
6298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 610              		.loc 1 6298 0
 611 004e 0020     		movs	r0, #0
 612              	.L70:
6299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 613              		.loc 1 6299 0
 614 0050 70BD     		pop	{r4, r5, r6, pc}
 615              	.LVL54:
 616              	.L74:
6279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 617              		.loc 1 6279 0
 618 0052 0120     		movs	r0, #1
 619 0054 FCE7     		b	.L70
 620              		.cfi_endproc
 621              	.LFE212:
 623              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 624              		.align	1
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv5-sp-d16
 630              	I2C_WaitOnFlagUntilTimeout:
 631              	.LFB211:
6243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 632              		.loc 1 6243 0
 633              		.cfi_startproc
 634              		@ args = 4, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL55:
 637 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 638              	.LCFI8:
 639              		.cfi_def_cfa_offset 24
 640              		.cfi_offset 3, -24
 641              		.cfi_offset 4, -20
 642              		.cfi_offset 5, -16
 643              		.cfi_offset 6, -12
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 0546     		mov	r5, r0
 647 0004 0F46     		mov	r7, r1
 648 0006 1646     		mov	r6, r2
 649 0008 1C46     		mov	r4, r3
ARM GAS  /tmp/cc1AMB4O.s 			page 130


 650              	.LVL56:
 651              	.L79:
6244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 652              		.loc 1 6244 0
 653 000a 2B68     		ldr	r3, [r5]
 654 000c 9B69     		ldr	r3, [r3, #24]
 655 000e 37EA0303 		bics	r3, r7, r3
 656 0012 0CBF     		ite	eq
 657 0014 0123     		moveq	r3, #1
 658 0016 0023     		movne	r3, #0
 659 0018 B342     		cmp	r3, r6
 660 001a 18D1     		bne	.L84
6247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 661              		.loc 1 6247 0
 662 001c B4F1FF3F 		cmp	r4, #-1
 663 0020 F3D0     		beq	.L79
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 664              		.loc 1 6249 0
 665 0022 FFF7FEFF 		bl	HAL_GetTick
 666              	.LVL57:
 667 0026 069B     		ldr	r3, [sp, #24]
 668 0028 C01A     		subs	r0, r0, r3
 669 002a A042     		cmp	r0, r4
 670 002c 01D8     		bhi	.L80
6249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 671              		.loc 1 6249 0 is_stmt 0 discriminator 1
 672 002e 002C     		cmp	r4, #0
 673 0030 EBD1     		bne	.L79
 674              	.L80:
6251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 675              		.loc 1 6251 0 is_stmt 1
 676 0032 6B6C     		ldr	r3, [r5, #68]
 677 0034 43F02003 		orr	r3, r3, #32
 678 0038 6B64     		str	r3, [r5, #68]
6252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 679              		.loc 1 6252 0
 680 003a 2023     		movs	r3, #32
 681 003c 85F84130 		strb	r3, [r5, #65]
6253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 682              		.loc 1 6253 0
 683 0040 0023     		movs	r3, #0
 684 0042 85F84230 		strb	r3, [r5, #66]
6256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 685              		.loc 1 6256 0
 686 0046 85F84030 		strb	r3, [r5, #64]
6257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 687              		.loc 1 6257 0
 688 004a 0120     		movs	r0, #1
 689 004c 00E0     		b	.L81
 690              	.L84:
6261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 691              		.loc 1 6261 0
 692 004e 0020     		movs	r0, #0
 693              	.L81:
6262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 694              		.loc 1 6262 0
 695 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/cc1AMB4O.s 			page 131


 696              		.cfi_endproc
 697              	.LFE211:
 699              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 700              		.align	1
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu fpv5-sp-d16
 706              	I2C_RequestMemoryWrite:
 707              	.LFB194:
5180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 708              		.loc 1 5180 0
 709              		.cfi_startproc
 710              		@ args = 8, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              	.LVL58:
 713 0000 70B5     		push	{r4, r5, r6, lr}
 714              	.LCFI9:
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 4, -16
 717              		.cfi_offset 5, -12
 718              		.cfi_offset 6, -8
 719              		.cfi_offset 14, -4
 720 0002 82B0     		sub	sp, sp, #8
 721              	.LCFI10:
 722              		.cfi_def_cfa_offset 24
 723 0004 0446     		mov	r4, r0
 724 0006 1646     		mov	r6, r2
 725 0008 1D46     		mov	r5, r3
5181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 726              		.loc 1 5181 0
 727 000a 184B     		ldr	r3, .L92
 728              	.LVL59:
 729 000c 0093     		str	r3, [sp]
 730 000e 4FF08073 		mov	r3, #16777216
 731 0012 EAB2     		uxtb	r2, r5
 732              	.LVL60:
 733 0014 FFF7FEFF 		bl	I2C_TransferConfig
 734              	.LVL61:
5184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 735              		.loc 1 5184 0
 736 0018 079A     		ldr	r2, [sp, #28]
 737 001a 0699     		ldr	r1, [sp, #24]
 738 001c 2046     		mov	r0, r4
 739 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 740              	.LVL62:
 741 0022 E8B9     		cbnz	r0, .L89
5190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 742              		.loc 1 5190 0
 743 0024 012D     		cmp	r5, #1
 744 0026 0ED1     		bne	.L87
5193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 745              		.loc 1 5193 0
 746 0028 2368     		ldr	r3, [r4]
 747 002a F6B2     		uxtb	r6, r6
 748 002c 9E62     		str	r6, [r3, #40]
 749              	.L88:
ARM GAS  /tmp/cc1AMB4O.s 			page 132


5212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 750              		.loc 1 5212 0
 751 002e 079B     		ldr	r3, [sp, #28]
 752 0030 0093     		str	r3, [sp]
 753 0032 069B     		ldr	r3, [sp, #24]
 754 0034 0022     		movs	r2, #0
 755 0036 8021     		movs	r1, #128
 756 0038 2046     		mov	r0, r4
 757 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 758              	.LVL63:
 759 003e 0346     		mov	r3, r0
 760 0040 78B1     		cbz	r0, .L86
5214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 761              		.loc 1 5214 0
 762 0042 0123     		movs	r3, #1
 763 0044 0DE0     		b	.L86
 764              	.L87:
5199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 765              		.loc 1 5199 0
 766 0046 2368     		ldr	r3, [r4]
 767 0048 320A     		lsrs	r2, r6, #8
 768 004a 9A62     		str	r2, [r3, #40]
5202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 769              		.loc 1 5202 0
 770 004c 079A     		ldr	r2, [sp, #28]
 771 004e 0699     		ldr	r1, [sp, #24]
 772 0050 2046     		mov	r0, r4
 773 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 774              	.LVL64:
 775 0056 38B9     		cbnz	r0, .L90
5208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 776              		.loc 1 5208 0
 777 0058 2368     		ldr	r3, [r4]
 778 005a F6B2     		uxtb	r6, r6
 779 005c 9E62     		str	r6, [r3, #40]
 780 005e E6E7     		b	.L88
 781              	.L89:
5186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 782              		.loc 1 5186 0
 783 0060 0123     		movs	r3, #1
 784              	.L86:
5218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 785              		.loc 1 5218 0
 786 0062 1846     		mov	r0, r3
 787 0064 02B0     		add	sp, sp, #8
 788              	.LCFI11:
 789              		.cfi_remember_state
 790              		.cfi_def_cfa_offset 16
 791              		@ sp needed
 792 0066 70BD     		pop	{r4, r5, r6, pc}
 793              	.LVL65:
 794              	.L90:
 795              	.LCFI12:
 796              		.cfi_restore_state
5204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 797              		.loc 1 5204 0
 798 0068 0123     		movs	r3, #1
ARM GAS  /tmp/cc1AMB4O.s 			page 133


 799 006a FAE7     		b	.L86
 800              	.L93:
 801              		.align	2
 802              	.L92:
 803 006c 00200080 		.word	-2147475456
 804              		.cfi_endproc
 805              	.LFE194:
 807              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 808              		.align	1
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu fpv5-sp-d16
 814              	I2C_RequestMemoryRead:
 815              	.LFB195:
5234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 816              		.loc 1 5234 0
 817              		.cfi_startproc
 818              		@ args = 8, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              	.LVL66:
 821 0000 70B5     		push	{r4, r5, r6, lr}
 822              	.LCFI13:
 823              		.cfi_def_cfa_offset 16
 824              		.cfi_offset 4, -16
 825              		.cfi_offset 5, -12
 826              		.cfi_offset 6, -8
 827              		.cfi_offset 14, -4
 828 0002 82B0     		sub	sp, sp, #8
 829              	.LCFI14:
 830              		.cfi_def_cfa_offset 24
 831 0004 0446     		mov	r4, r0
 832 0006 1646     		mov	r6, r2
 833 0008 1D46     		mov	r5, r3
5235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 834              		.loc 1 5235 0
 835 000a 184B     		ldr	r3, .L101
 836              	.LVL67:
 837 000c 0093     		str	r3, [sp]
 838 000e 0023     		movs	r3, #0
 839 0010 EAB2     		uxtb	r2, r5
 840              	.LVL68:
 841 0012 FFF7FEFF 		bl	I2C_TransferConfig
 842              	.LVL69:
5238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 843              		.loc 1 5238 0
 844 0016 079A     		ldr	r2, [sp, #28]
 845 0018 0699     		ldr	r1, [sp, #24]
 846 001a 2046     		mov	r0, r4
 847 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 848              	.LVL70:
 849 0020 E8B9     		cbnz	r0, .L98
5244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 850              		.loc 1 5244 0
 851 0022 012D     		cmp	r5, #1
 852 0024 0ED1     		bne	.L96
5247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
ARM GAS  /tmp/cc1AMB4O.s 			page 134


 853              		.loc 1 5247 0
 854 0026 2368     		ldr	r3, [r4]
 855 0028 F6B2     		uxtb	r6, r6
 856 002a 9E62     		str	r6, [r3, #40]
 857              	.L97:
5266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 858              		.loc 1 5266 0
 859 002c 079B     		ldr	r3, [sp, #28]
 860 002e 0093     		str	r3, [sp]
 861 0030 069B     		ldr	r3, [sp, #24]
 862 0032 0022     		movs	r2, #0
 863 0034 4021     		movs	r1, #64
 864 0036 2046     		mov	r0, r4
 865 0038 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 866              	.LVL71:
 867 003c 0346     		mov	r3, r0
 868 003e 78B1     		cbz	r0, .L95
5268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 869              		.loc 1 5268 0
 870 0040 0123     		movs	r3, #1
 871 0042 0DE0     		b	.L95
 872              	.L96:
5253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 873              		.loc 1 5253 0
 874 0044 2368     		ldr	r3, [r4]
 875 0046 320A     		lsrs	r2, r6, #8
 876 0048 9A62     		str	r2, [r3, #40]
5256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 877              		.loc 1 5256 0
 878 004a 079A     		ldr	r2, [sp, #28]
 879 004c 0699     		ldr	r1, [sp, #24]
 880 004e 2046     		mov	r0, r4
 881 0050 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 882              	.LVL72:
 883 0054 38B9     		cbnz	r0, .L99
5262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 884              		.loc 1 5262 0
 885 0056 2368     		ldr	r3, [r4]
 886 0058 F6B2     		uxtb	r6, r6
 887 005a 9E62     		str	r6, [r3, #40]
 888 005c E6E7     		b	.L97
 889              	.L98:
5240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 890              		.loc 1 5240 0
 891 005e 0123     		movs	r3, #1
 892              	.L95:
5272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 893              		.loc 1 5272 0
 894 0060 1846     		mov	r0, r3
 895 0062 02B0     		add	sp, sp, #8
 896              	.LCFI15:
 897              		.cfi_remember_state
 898              		.cfi_def_cfa_offset 16
 899              		@ sp needed
 900 0064 70BD     		pop	{r4, r5, r6, pc}
 901              	.LVL73:
 902              	.L99:
ARM GAS  /tmp/cc1AMB4O.s 			page 135


 903              	.LCFI16:
 904              		.cfi_restore_state
5258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 905              		.loc 1 5258 0
 906 0066 0123     		movs	r3, #1
 907 0068 FAE7     		b	.L95
 908              	.L102:
 909 006a 00BF     		.align	2
 910              	.L101:
 911 006c 00200080 		.word	-2147475456
 912              		.cfi_endproc
 913              	.LFE195:
 915              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 916              		.align	1
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv5-sp-d16
 922              	I2C_WaitOnSTOPFlagUntilTimeout:
 923              	.LFB213:
6310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 924              		.loc 1 6310 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL74:
 929 0000 70B5     		push	{r4, r5, r6, lr}
 930              	.LCFI17:
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 936 0002 0546     		mov	r5, r0
 937 0004 0C46     		mov	r4, r1
 938 0006 1646     		mov	r6, r2
 939              	.LVL75:
 940              	.L104:
6311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 941              		.loc 1 6311 0
 942 0008 2B68     		ldr	r3, [r5]
 943 000a 9B69     		ldr	r3, [r3, #24]
 944 000c 13F0200F 		tst	r3, #32
 945 0010 1AD1     		bne	.L110
6314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 946              		.loc 1 6314 0
 947 0012 3246     		mov	r2, r6
 948 0014 2146     		mov	r1, r4
 949 0016 2846     		mov	r0, r5
 950 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 951              	.LVL76:
 952 001c B0B9     		cbnz	r0, .L108
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 953              		.loc 1 6320 0
 954 001e FFF7FEFF 		bl	HAL_GetTick
 955              	.LVL77:
 956 0022 801B     		subs	r0, r0, r6
ARM GAS  /tmp/cc1AMB4O.s 			page 136


 957 0024 A042     		cmp	r0, r4
 958 0026 01D8     		bhi	.L106
6320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 959              		.loc 1 6320 0 is_stmt 0 discriminator 1
 960 0028 002C     		cmp	r4, #0
 961 002a EDD1     		bne	.L104
 962              	.L106:
6322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 963              		.loc 1 6322 0 is_stmt 1
 964 002c 6B6C     		ldr	r3, [r5, #68]
 965 002e 43F02003 		orr	r3, r3, #32
 966 0032 6B64     		str	r3, [r5, #68]
6323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 967              		.loc 1 6323 0
 968 0034 2023     		movs	r3, #32
 969 0036 85F84130 		strb	r3, [r5, #65]
6324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 970              		.loc 1 6324 0
 971 003a 0023     		movs	r3, #0
 972 003c 85F84230 		strb	r3, [r5, #66]
6327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 973              		.loc 1 6327 0
 974 0040 85F84030 		strb	r3, [r5, #64]
6329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 975              		.loc 1 6329 0
 976 0044 0120     		movs	r0, #1
 977              	.L105:
6333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 978              		.loc 1 6333 0
 979 0046 70BD     		pop	{r4, r5, r6, pc}
 980              	.LVL78:
 981              	.L110:
6332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 982              		.loc 1 6332 0
 983 0048 0020     		movs	r0, #0
 984 004a FCE7     		b	.L105
 985              	.L108:
6316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 986              		.loc 1 6316 0
 987 004c 0120     		movs	r0, #1
 988 004e FAE7     		b	.L105
 989              		.cfi_endproc
 990              	.LFE213:
 992              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 993              		.align	1
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv5-sp-d16
 999              	I2C_WaitOnRXNEFlagUntilTimeout:
 1000              	.LFB214:
6344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1001              		.loc 1 6344 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL79:
ARM GAS  /tmp/cc1AMB4O.s 			page 137


 1006 0000 70B5     		push	{r4, r5, r6, lr}
 1007              	.LCFI18:
 1008              		.cfi_def_cfa_offset 16
 1009              		.cfi_offset 4, -16
 1010              		.cfi_offset 5, -12
 1011              		.cfi_offset 6, -8
 1012              		.cfi_offset 14, -4
 1013 0002 0446     		mov	r4, r0
 1014 0004 0D46     		mov	r5, r1
 1015 0006 1646     		mov	r6, r2
 1016              	.LVL80:
 1017              	.L112:
6345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1018              		.loc 1 6345 0
 1019 0008 2368     		ldr	r3, [r4]
 1020 000a 9B69     		ldr	r3, [r3, #24]
 1021 000c 13F0040F 		tst	r3, #4
 1022 0010 3ED1     		bne	.L120
6348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1023              		.loc 1 6348 0
 1024 0012 3246     		mov	r2, r6
 1025 0014 2946     		mov	r1, r5
 1026 0016 2046     		mov	r0, r4
 1027 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1028              	.LVL81:
 1029 001c 0146     		mov	r1, r0
 1030 001e 0028     		cmp	r0, #0
 1031 0020 38D1     		bne	.L118
6354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1032              		.loc 1 6354 0
 1033 0022 2368     		ldr	r3, [r4]
 1034 0024 9A69     		ldr	r2, [r3, #24]
 1035 0026 12F0200F 		tst	r2, #32
 1036 002a 13D1     		bne	.L121
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1037              		.loc 1 6384 0
 1038 002c FFF7FEFF 		bl	HAL_GetTick
 1039              	.LVL82:
 1040 0030 801B     		subs	r0, r0, r6
 1041 0032 A842     		cmp	r0, r5
 1042 0034 01D8     		bhi	.L116
6384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1043              		.loc 1 6384 0 is_stmt 0 discriminator 1
 1044 0036 002D     		cmp	r5, #0
 1045 0038 E6D1     		bne	.L112
 1046              	.L116:
6386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1047              		.loc 1 6386 0 is_stmt 1
 1048 003a 636C     		ldr	r3, [r4, #68]
 1049 003c 43F02003 		orr	r3, r3, #32
 1050 0040 6364     		str	r3, [r4, #68]
6387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1051              		.loc 1 6387 0
 1052 0042 2023     		movs	r3, #32
 1053 0044 84F84130 		strb	r3, [r4, #65]
6390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1054              		.loc 1 6390 0
ARM GAS  /tmp/cc1AMB4O.s 			page 138


 1055 0048 0023     		movs	r3, #0
 1056 004a 84F84030 		strb	r3, [r4, #64]
6392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1057              		.loc 1 6392 0
 1058 004e 0121     		movs	r1, #1
 1059              	.L113:
6396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1060              		.loc 1 6396 0
 1061 0050 0846     		mov	r0, r1
 1062 0052 70BD     		pop	{r4, r5, r6, pc}
 1063              	.LVL83:
 1064              	.L121:
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1065              		.loc 1 6358 0
 1066 0054 9A69     		ldr	r2, [r3, #24]
 1067 0056 12F0040F 		tst	r2, #4
 1068 005a 02D0     		beq	.L115
6358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1069              		.loc 1 6358 0 is_stmt 0 discriminator 1
 1070 005c 228D     		ldrh	r2, [r4, #40]
 1071 005e 002A     		cmp	r2, #0
 1072 0060 F6D1     		bne	.L113
 1073              	.L115:
6367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1074              		.loc 1 6367 0 is_stmt 1
 1075 0062 2022     		movs	r2, #32
 1076 0064 DA61     		str	r2, [r3, #28]
6370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1077              		.loc 1 6370 0
 1078 0066 2168     		ldr	r1, [r4]
 1079 0068 4B68     		ldr	r3, [r1, #4]
 1080 006a 23F0FF73 		bic	r3, r3, #33423360
 1081 006e 23F48B33 		bic	r3, r3, #71168
 1082 0072 23F4FF73 		bic	r3, r3, #510
 1083 0076 23F00103 		bic	r3, r3, #1
 1084 007a 4B60     		str	r3, [r1, #4]
6372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1085              		.loc 1 6372 0
 1086 007c 0023     		movs	r3, #0
 1087 007e 6364     		str	r3, [r4, #68]
6373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1088              		.loc 1 6373 0
 1089 0080 84F84120 		strb	r2, [r4, #65]
6374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1090              		.loc 1 6374 0
 1091 0084 84F84230 		strb	r3, [r4, #66]
6377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1092              		.loc 1 6377 0
 1093 0088 84F84030 		strb	r3, [r4, #64]
6379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1094              		.loc 1 6379 0
 1095 008c 0121     		movs	r1, #1
 1096 008e DFE7     		b	.L113
 1097              	.L120:
6395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 1098              		.loc 1 6395 0
 1099 0090 0021     		movs	r1, #0
ARM GAS  /tmp/cc1AMB4O.s 			page 139


 1100 0092 DDE7     		b	.L113
 1101              	.L118:
6350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1102              		.loc 1 6350 0
 1103 0094 0121     		movs	r1, #1
 1104 0096 DBE7     		b	.L113
 1105              		.cfi_endproc
 1106              	.LFE214:
 1108              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1109              		.align	1
 1110              		.weak	HAL_I2C_MspInit
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu fpv5-sp-d16
 1116              	HAL_I2C_MspInit:
 1117              	.LFB143:
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1118              		.loc 1 632 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL84:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1124              		.loc 1 639 0
 1125 0000 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE143:
 1129              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1130              		.align	1
 1131              		.global	HAL_I2C_Init
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv5-sp-d16
 1137              	HAL_I2C_Init:
 1138              	.LFB141:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1139              		.loc 1 477 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              	.LVL85:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1144              		.loc 1 479 0
 1145 0000 0028     		cmp	r0, #0
 1146 0002 57D0     		beq	.L129
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1147              		.loc 1 477 0
 1148 0004 10B5     		push	{r4, lr}
 1149              	.LCFI19:
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 4, -8
 1152              		.cfi_offset 14, -4
 1153 0006 0446     		mov	r4, r0
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1AMB4O.s 			page 140


 1154              		.loc 1 494 0
 1155 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1156 000c 002B     		cmp	r3, #0
 1157 000e 41D0     		beq	.L134
 1158              	.LVL86:
 1159              	.L125:
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1160              		.loc 1 525 0
 1161 0010 2423     		movs	r3, #36
 1162 0012 84F84130 		strb	r3, [r4, #65]
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1163              		.loc 1 528 0
 1164 0016 2268     		ldr	r2, [r4]
 1165 0018 1368     		ldr	r3, [r2]
 1166 001a 23F00103 		bic	r3, r3, #1
 1167 001e 1360     		str	r3, [r2]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1168              		.loc 1 532 0
 1169 0020 6368     		ldr	r3, [r4, #4]
 1170 0022 2268     		ldr	r2, [r4]
 1171 0024 23F07063 		bic	r3, r3, #251658240
 1172 0028 1361     		str	r3, [r2, #16]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1173              		.loc 1 536 0
 1174 002a 2268     		ldr	r2, [r4]
 1175 002c 9368     		ldr	r3, [r2, #8]
 1176 002e 23F40043 		bic	r3, r3, #32768
 1177 0032 9360     		str	r3, [r2, #8]
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1178              		.loc 1 539 0
 1179 0034 E368     		ldr	r3, [r4, #12]
 1180 0036 012B     		cmp	r3, #1
 1181 0038 31D0     		beq	.L135
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1182              		.loc 1 545 0
 1183 003a A368     		ldr	r3, [r4, #8]
 1184 003c 2268     		ldr	r2, [r4]
 1185 003e 43F40443 		orr	r3, r3, #33792
 1186 0042 9360     		str	r3, [r2, #8]
 1187              	.L127:
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1188              		.loc 1 550 0
 1189 0044 E368     		ldr	r3, [r4, #12]
 1190 0046 022B     		cmp	r3, #2
 1191 0048 2FD0     		beq	.L136
 1192              	.L128:
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1193              		.loc 1 555 0
 1194 004a 2268     		ldr	r2, [r4]
 1195 004c 5168     		ldr	r1, [r2, #4]
 1196 004e 1A4B     		ldr	r3, .L137
 1197 0050 0B43     		orrs	r3, r3, r1
 1198 0052 5360     		str	r3, [r2, #4]
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1199              		.loc 1 559 0
 1200 0054 2268     		ldr	r2, [r4]
 1201 0056 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cc1AMB4O.s 			page 141


 1202 0058 23F40043 		bic	r3, r3, #32768
 1203 005c D360     		str	r3, [r2, #12]
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1204              		.loc 1 562 0
 1205 005e 2369     		ldr	r3, [r4, #16]
 1206 0060 6269     		ldr	r2, [r4, #20]
 1207 0062 1343     		orrs	r3, r3, r2
 1208 0064 A169     		ldr	r1, [r4, #24]
 1209 0066 2268     		ldr	r2, [r4]
 1210 0068 43EA0123 		orr	r3, r3, r1, lsl #8
 1211 006c D360     		str	r3, [r2, #12]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1212              		.loc 1 566 0
 1213 006e E369     		ldr	r3, [r4, #28]
 1214 0070 216A     		ldr	r1, [r4, #32]
 1215 0072 2268     		ldr	r2, [r4]
 1216 0074 0B43     		orrs	r3, r3, r1
 1217 0076 1360     		str	r3, [r2]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1218              		.loc 1 569 0
 1219 0078 2268     		ldr	r2, [r4]
 1220 007a 1368     		ldr	r3, [r2]
 1221 007c 43F00103 		orr	r3, r3, #1
 1222 0080 1360     		str	r3, [r2]
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1223              		.loc 1 571 0
 1224 0082 0020     		movs	r0, #0
 1225 0084 6064     		str	r0, [r4, #68]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1226              		.loc 1 572 0
 1227 0086 2023     		movs	r3, #32
 1228 0088 84F84130 		strb	r3, [r4, #65]
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1229              		.loc 1 573 0
 1230 008c 2063     		str	r0, [r4, #48]
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1231              		.loc 1 574 0
 1232 008e 84F84200 		strb	r0, [r4, #66]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1233              		.loc 1 577 0
 1234 0092 10BD     		pop	{r4, pc}
 1235              	.LVL87:
 1236              	.L134:
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1237              		.loc 1 497 0
 1238 0094 80F84030 		strb	r3, [r0, #64]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1239              		.loc 1 521 0
 1240 0098 FFF7FEFF 		bl	HAL_I2C_MspInit
 1241              	.LVL88:
 1242 009c B8E7     		b	.L125
 1243              	.L135:
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1244              		.loc 1 541 0
 1245 009e A368     		ldr	r3, [r4, #8]
 1246 00a0 2268     		ldr	r2, [r4]
 1247 00a2 43F40043 		orr	r3, r3, #32768
ARM GAS  /tmp/cc1AMB4O.s 			page 142


 1248 00a6 9360     		str	r3, [r2, #8]
 1249 00a8 CCE7     		b	.L127
 1250              	.L136:
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1251              		.loc 1 552 0
 1252 00aa 2368     		ldr	r3, [r4]
 1253 00ac 4FF40062 		mov	r2, #2048
 1254 00b0 5A60     		str	r2, [r3, #4]
 1255 00b2 CAE7     		b	.L128
 1256              	.LVL89:
 1257              	.L129:
 1258              	.LCFI20:
 1259              		.cfi_def_cfa_offset 0
 1260              		.cfi_restore 4
 1261              		.cfi_restore 14
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1262              		.loc 1 481 0
 1263 00b4 0120     		movs	r0, #1
 1264              	.LVL90:
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1265              		.loc 1 577 0
 1266 00b6 7047     		bx	lr
 1267              	.L138:
 1268              		.align	2
 1269              	.L137:
 1270 00b8 00800002 		.word	33587200
 1271              		.cfi_endproc
 1272              	.LFE141:
 1274              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1275              		.align	1
 1276              		.weak	HAL_I2C_MspDeInit
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv5-sp-d16
 1282              	HAL_I2C_MspDeInit:
 1283              	.LFB144:
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1284              		.loc 1 648 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
 1289              	.LVL91:
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1290              		.loc 1 655 0
 1291 0000 7047     		bx	lr
 1292              		.cfi_endproc
 1293              	.LFE144:
 1295              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_I2C_DeInit
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv5-sp-d16
 1303              	HAL_I2C_DeInit:
ARM GAS  /tmp/cc1AMB4O.s 			page 143


 1304              	.LFB142:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1305              		.loc 1 586 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              	.LVL92:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1310              		.loc 1 588 0
 1311 0000 A8B1     		cbz	r0, .L142
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1312              		.loc 1 586 0
 1313 0002 10B5     		push	{r4, lr}
 1314              	.LCFI21:
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 4, -8
 1317              		.cfi_offset 14, -4
 1318 0004 0446     		mov	r4, r0
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1319              		.loc 1 596 0
 1320 0006 2423     		movs	r3, #36
 1321 0008 80F84130 		strb	r3, [r0, #65]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1322              		.loc 1 599 0
 1323 000c 0268     		ldr	r2, [r0]
 1324 000e 1368     		ldr	r3, [r2]
 1325 0010 23F00103 		bic	r3, r3, #1
 1326 0014 1360     		str	r3, [r2]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1327              		.loc 1 611 0
 1328 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1329              	.LVL93:
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1330              		.loc 1 614 0
 1331 001a 0020     		movs	r0, #0
 1332 001c 6064     		str	r0, [r4, #68]
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1333              		.loc 1 615 0
 1334 001e 84F84100 		strb	r0, [r4, #65]
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1335              		.loc 1 616 0
 1336 0022 2063     		str	r0, [r4, #48]
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1337              		.loc 1 617 0
 1338 0024 84F84200 		strb	r0, [r4, #66]
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1339              		.loc 1 620 0
 1340 0028 84F84000 		strb	r0, [r4, #64]
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1341              		.loc 1 623 0
 1342 002c 10BD     		pop	{r4, pc}
 1343              	.LVL94:
 1344              	.L142:
 1345              	.LCFI22:
 1346              		.cfi_def_cfa_offset 0
 1347              		.cfi_restore 4
 1348              		.cfi_restore 14
ARM GAS  /tmp/cc1AMB4O.s 			page 144


 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1349              		.loc 1 590 0
 1350 002e 0120     		movs	r0, #1
 1351              	.LVL95:
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1352              		.loc 1 623 0
 1353 0030 7047     		bx	lr
 1354              		.cfi_endproc
 1355              	.LFE142:
 1357              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1358              		.align	1
 1359              		.global	HAL_I2C_Master_Transmit
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1363              		.fpu fpv5-sp-d16
 1365              	HAL_I2C_Master_Transmit:
 1366              	.LFB145:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1367              		.loc 1 1070 0
 1368              		.cfi_startproc
 1369              		@ args = 4, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              	.LVL96:
 1372 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1373              	.LCFI23:
 1374              		.cfi_def_cfa_offset 28
 1375              		.cfi_offset 4, -28
 1376              		.cfi_offset 5, -24
 1377              		.cfi_offset 6, -20
 1378              		.cfi_offset 7, -16
 1379              		.cfi_offset 8, -12
 1380              		.cfi_offset 9, -8
 1381              		.cfi_offset 14, -4
 1382 0004 83B0     		sub	sp, sp, #12
 1383              	.LCFI24:
 1384              		.cfi_def_cfa_offset 40
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1385              		.loc 1 1073 0
 1386 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1387 000a EDB2     		uxtb	r5, r5
 1388 000c 202D     		cmp	r5, #32
 1389 000e 40F0A480 		bne	.L155
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1390              		.loc 1 1076 0
 1391 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1392 0016 012C     		cmp	r4, #1
 1393 0018 00F0A480 		beq	.L156
 1394 001c 9846     		mov	r8, r3
 1395 001e 1746     		mov	r7, r2
 1396 0020 0E46     		mov	r6, r1
 1397 0022 0446     		mov	r4, r0
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1398              		.loc 1 1076 0 is_stmt 0 discriminator 2
 1399 0024 4FF00109 		mov	r9, #1
 1400 0028 80F84090 		strb	r9, [r0, #64]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 145


 1401              		.loc 1 1079 0 is_stmt 1 discriminator 2
 1402 002c FFF7FEFF 		bl	HAL_GetTick
 1403              	.LVL97:
 1404 0030 0546     		mov	r5, r0
 1405              	.LVL98:
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1406              		.loc 1 1081 0 discriminator 2
 1407 0032 0090     		str	r0, [sp]
 1408 0034 1923     		movs	r3, #25
 1409 0036 4A46     		mov	r2, r9
 1410 0038 4FF40041 		mov	r1, #32768
 1411 003c 2046     		mov	r0, r4
 1412              	.LVL99:
 1413 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1414              	.LVL100:
 1415 0042 0028     		cmp	r0, #0
 1416 0044 40F09080 		bne	.L157
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1417              		.loc 1 1086 0
 1418 0048 2123     		movs	r3, #33
 1419 004a 84F84130 		strb	r3, [r4, #65]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1420              		.loc 1 1087 0
 1421 004e 1023     		movs	r3, #16
 1422 0050 84F84230 		strb	r3, [r4, #66]
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1423              		.loc 1 1088 0
 1424 0054 0023     		movs	r3, #0
 1425 0056 6364     		str	r3, [r4, #68]
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1426              		.loc 1 1091 0
 1427 0058 6762     		str	r7, [r4, #36]
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1428              		.loc 1 1092 0
 1429 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1430              		.loc 1 1093 0
 1431 005e 6363     		str	r3, [r4, #52]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1432              		.loc 1 1097 0
 1433 0060 638D     		ldrh	r3, [r4, #42]
 1434 0062 9BB2     		uxth	r3, r3
 1435 0064 FF2B     		cmp	r3, #255
 1436 0066 0AD9     		bls	.L149
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1437              		.loc 1 1099 0
 1438 0068 FF22     		movs	r2, #255
 1439 006a 2285     		strh	r2, [r4, #40]	@ movhi
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1440              		.loc 1 1100 0
 1441 006c 424B     		ldr	r3, .L163
 1442 006e 0093     		str	r3, [sp]
 1443 0070 4FF08073 		mov	r3, #16777216
 1444 0074 3146     		mov	r1, r6
 1445 0076 2046     		mov	r0, r4
 1446 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1447              	.LVL101:
ARM GAS  /tmp/cc1AMB4O.s 			page 146


 1448 007c 18E0     		b	.L151
 1449              	.L149:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1450              		.loc 1 1104 0
 1451 007e 628D     		ldrh	r2, [r4, #42]
 1452 0080 92B2     		uxth	r2, r2
 1453 0082 2285     		strh	r2, [r4, #40]	@ movhi
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1454              		.loc 1 1105 0
 1455 0084 3C4B     		ldr	r3, .L163
 1456 0086 0093     		str	r3, [sp]
 1457 0088 4FF00073 		mov	r3, #33554432
 1458 008c D2B2     		uxtb	r2, r2
 1459 008e 3146     		mov	r1, r6
 1460 0090 2046     		mov	r0, r4
 1461 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1462              	.LVL102:
 1463 0096 0BE0     		b	.L151
 1464              	.L153:
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1465              		.loc 1 1139 0
 1466 0098 628D     		ldrh	r2, [r4, #42]
 1467 009a 92B2     		uxth	r2, r2
 1468 009c 2285     		strh	r2, [r4, #40]	@ movhi
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1469              		.loc 1 1140 0
 1470 009e 0023     		movs	r3, #0
 1471 00a0 0093     		str	r3, [sp]
 1472 00a2 4FF00073 		mov	r3, #33554432
 1473 00a6 D2B2     		uxtb	r2, r2
 1474 00a8 3146     		mov	r1, r6
 1475 00aa 2046     		mov	r0, r4
 1476 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1477              	.LVL103:
 1478              	.L151:
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1479              		.loc 1 1108 0
 1480 00b0 638D     		ldrh	r3, [r4, #42]
 1481 00b2 9BB2     		uxth	r3, r3
 1482 00b4 002B     		cmp	r3, #0
 1483 00b6 33D0     		beq	.L162
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1484              		.loc 1 1111 0
 1485 00b8 2A46     		mov	r2, r5
 1486 00ba 0A99     		ldr	r1, [sp, #40]
 1487 00bc 2046     		mov	r0, r4
 1488 00be FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1489              	.LVL104:
 1490 00c2 0028     		cmp	r0, #0
 1491 00c4 52D1     		bne	.L158
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1492              		.loc 1 1116 0
 1493 00c6 626A     		ldr	r2, [r4, #36]
 1494 00c8 2368     		ldr	r3, [r4]
 1495 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1496 00cc 9A62     		str	r2, [r3, #40]
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 147


 1497              		.loc 1 1119 0
 1498 00ce 636A     		ldr	r3, [r4, #36]
 1499 00d0 0133     		adds	r3, r3, #1
 1500 00d2 6362     		str	r3, [r4, #36]
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 1501              		.loc 1 1121 0
 1502 00d4 638D     		ldrh	r3, [r4, #42]
 1503 00d6 013B     		subs	r3, r3, #1
 1504 00d8 9BB2     		uxth	r3, r3
 1505 00da 6385     		strh	r3, [r4, #42]	@ movhi
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1506              		.loc 1 1122 0
 1507 00dc 238D     		ldrh	r3, [r4, #40]
 1508 00de 013B     		subs	r3, r3, #1
 1509 00e0 9BB2     		uxth	r3, r3
 1510 00e2 2385     		strh	r3, [r4, #40]	@ movhi
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1511              		.loc 1 1124 0
 1512 00e4 628D     		ldrh	r2, [r4, #42]
 1513 00e6 92B2     		uxth	r2, r2
 1514 00e8 002A     		cmp	r2, #0
 1515 00ea E1D0     		beq	.L151
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1516              		.loc 1 1124 0 is_stmt 0 discriminator 1
 1517 00ec 002B     		cmp	r3, #0
 1518 00ee DFD1     		bne	.L151
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1519              		.loc 1 1127 0 is_stmt 1
 1520 00f0 0095     		str	r5, [sp]
 1521 00f2 0A9B     		ldr	r3, [sp, #40]
 1522 00f4 0022     		movs	r2, #0
 1523 00f6 8021     		movs	r1, #128
 1524 00f8 2046     		mov	r0, r4
 1525 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1526              	.LVL105:
 1527 00fe 0028     		cmp	r0, #0
 1528 0100 36D1     		bne	.L159
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1529              		.loc 1 1132 0
 1530 0102 638D     		ldrh	r3, [r4, #42]
 1531 0104 9BB2     		uxth	r3, r3
 1532 0106 FF2B     		cmp	r3, #255
 1533 0108 C6D9     		bls	.L153
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1534              		.loc 1 1134 0
 1535 010a FF22     		movs	r2, #255
 1536 010c 2285     		strh	r2, [r4, #40]	@ movhi
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1537              		.loc 1 1135 0
 1538 010e 0023     		movs	r3, #0
 1539 0110 0093     		str	r3, [sp]
 1540 0112 4FF08073 		mov	r3, #16777216
 1541 0116 3146     		mov	r1, r6
 1542 0118 2046     		mov	r0, r4
 1543 011a FFF7FEFF 		bl	I2C_TransferConfig
 1544              	.LVL106:
 1545 011e C7E7     		b	.L151
ARM GAS  /tmp/cc1AMB4O.s 			page 148


 1546              	.L162:
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1547              		.loc 1 1147 0
 1548 0120 2A46     		mov	r2, r5
 1549 0122 0A99     		ldr	r1, [sp, #40]
 1550 0124 2046     		mov	r0, r4
 1551 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1552              	.LVL107:
 1553 012a 0346     		mov	r3, r0
 1554 012c 10BB     		cbnz	r0, .L160
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1555              		.loc 1 1153 0
 1556 012e 2268     		ldr	r2, [r4]
 1557 0130 2021     		movs	r1, #32
 1558 0132 D161     		str	r1, [r2, #28]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1559              		.loc 1 1156 0
 1560 0134 2068     		ldr	r0, [r4]
 1561 0136 4268     		ldr	r2, [r0, #4]
 1562 0138 22F0FF72 		bic	r2, r2, #33423360
 1563 013c 22F48B32 		bic	r2, r2, #71168
 1564 0140 22F4FF72 		bic	r2, r2, #510
 1565 0144 22F00102 		bic	r2, r2, #1
 1566 0148 4260     		str	r2, [r0, #4]
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1567              		.loc 1 1158 0
 1568 014a 84F84110 		strb	r1, [r4, #65]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1569              		.loc 1 1159 0
 1570 014e 0022     		movs	r2, #0
 1571 0150 84F84220 		strb	r2, [r4, #66]
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1572              		.loc 1 1162 0
 1573 0154 84F84020 		strb	r2, [r4, #64]
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1574              		.loc 1 1164 0
 1575 0158 00E0     		b	.L148
 1576              	.LVL108:
 1577              	.L155:
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1578              		.loc 1 1168 0
 1579 015a 0223     		movs	r3, #2
 1580              	.LVL109:
 1581              	.L148:
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1582              		.loc 1 1170 0
 1583 015c 1846     		mov	r0, r3
 1584 015e 03B0     		add	sp, sp, #12
 1585              	.LCFI25:
 1586              		.cfi_remember_state
 1587              		.cfi_def_cfa_offset 28
 1588              		@ sp needed
 1589 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1590              	.LVL110:
 1591              	.L156:
 1592              	.LCFI26:
 1593              		.cfi_restore_state
ARM GAS  /tmp/cc1AMB4O.s 			page 149


1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1594              		.loc 1 1076 0
 1595 0164 0223     		movs	r3, #2
 1596              	.LVL111:
 1597 0166 F9E7     		b	.L148
 1598              	.LVL112:
 1599              	.L157:
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1600              		.loc 1 1083 0
 1601 0168 0123     		movs	r3, #1
 1602 016a F7E7     		b	.L148
 1603              	.L158:
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1604              		.loc 1 1113 0
 1605 016c 0123     		movs	r3, #1
 1606 016e F5E7     		b	.L148
 1607              	.L159:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1608              		.loc 1 1129 0
 1609 0170 0123     		movs	r3, #1
 1610 0172 F3E7     		b	.L148
 1611              	.L160:
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1612              		.loc 1 1149 0
 1613 0174 0123     		movs	r3, #1
 1614 0176 F1E7     		b	.L148
 1615              	.L164:
 1616              		.align	2
 1617              	.L163:
 1618 0178 00200080 		.word	-2147475456
 1619              		.cfi_endproc
 1620              	.LFE145:
 1622              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1623              		.align	1
 1624              		.global	HAL_I2C_Master_Receive
 1625              		.syntax unified
 1626              		.thumb
 1627              		.thumb_func
 1628              		.fpu fpv5-sp-d16
 1630              	HAL_I2C_Master_Receive:
 1631              	.LFB146:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1632              		.loc 1 1185 0
 1633              		.cfi_startproc
 1634              		@ args = 4, pretend = 0, frame = 0
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636              	.LVL113:
 1637 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1638              	.LCFI27:
 1639              		.cfi_def_cfa_offset 28
 1640              		.cfi_offset 4, -28
 1641              		.cfi_offset 5, -24
 1642              		.cfi_offset 6, -20
 1643              		.cfi_offset 7, -16
 1644              		.cfi_offset 8, -12
 1645              		.cfi_offset 9, -8
 1646              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1AMB4O.s 			page 150


 1647 0004 83B0     		sub	sp, sp, #12
 1648              	.LCFI28:
 1649              		.cfi_def_cfa_offset 40
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1650              		.loc 1 1188 0
 1651 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1652 000a EDB2     		uxtb	r5, r5
 1653 000c 202D     		cmp	r5, #32
 1654 000e 40F0A480 		bne	.L173
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1655              		.loc 1 1191 0
 1656 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1657 0016 012C     		cmp	r4, #1
 1658 0018 00F0A480 		beq	.L174
 1659 001c 9846     		mov	r8, r3
 1660 001e 1746     		mov	r7, r2
 1661 0020 0E46     		mov	r6, r1
 1662 0022 0446     		mov	r4, r0
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1663              		.loc 1 1191 0 is_stmt 0 discriminator 2
 1664 0024 4FF00109 		mov	r9, #1
 1665 0028 80F84090 		strb	r9, [r0, #64]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1666              		.loc 1 1194 0 is_stmt 1 discriminator 2
 1667 002c FFF7FEFF 		bl	HAL_GetTick
 1668              	.LVL114:
 1669 0030 0546     		mov	r5, r0
 1670              	.LVL115:
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1671              		.loc 1 1196 0 discriminator 2
 1672 0032 0090     		str	r0, [sp]
 1673 0034 1923     		movs	r3, #25
 1674 0036 4A46     		mov	r2, r9
 1675 0038 4FF40041 		mov	r1, #32768
 1676 003c 2046     		mov	r0, r4
 1677              	.LVL116:
 1678 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1679              	.LVL117:
 1680 0042 0028     		cmp	r0, #0
 1681 0044 40F09080 		bne	.L175
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1682              		.loc 1 1201 0
 1683 0048 2223     		movs	r3, #34
 1684 004a 84F84130 		strb	r3, [r4, #65]
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1685              		.loc 1 1202 0
 1686 004e 1023     		movs	r3, #16
 1687 0050 84F84230 		strb	r3, [r4, #66]
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1688              		.loc 1 1203 0
 1689 0054 0023     		movs	r3, #0
 1690 0056 6364     		str	r3, [r4, #68]
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1691              		.loc 1 1206 0
 1692 0058 6762     		str	r7, [r4, #36]
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1693              		.loc 1 1207 0
ARM GAS  /tmp/cc1AMB4O.s 			page 151


 1694 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1695              		.loc 1 1208 0
 1696 005e 6363     		str	r3, [r4, #52]
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1697              		.loc 1 1212 0
 1698 0060 638D     		ldrh	r3, [r4, #42]
 1699 0062 9BB2     		uxth	r3, r3
 1700 0064 FF2B     		cmp	r3, #255
 1701 0066 0AD9     		bls	.L167
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1702              		.loc 1 1214 0
 1703 0068 FF22     		movs	r2, #255
 1704 006a 2285     		strh	r2, [r4, #40]	@ movhi
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1705              		.loc 1 1215 0
 1706 006c 424B     		ldr	r3, .L181
 1707 006e 0093     		str	r3, [sp]
 1708 0070 4FF08073 		mov	r3, #16777216
 1709 0074 3146     		mov	r1, r6
 1710 0076 2046     		mov	r0, r4
 1711 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1712              	.LVL118:
 1713 007c 18E0     		b	.L169
 1714              	.L167:
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1715              		.loc 1 1219 0
 1716 007e 628D     		ldrh	r2, [r4, #42]
 1717 0080 92B2     		uxth	r2, r2
 1718 0082 2285     		strh	r2, [r4, #40]	@ movhi
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1719              		.loc 1 1220 0
 1720 0084 3C4B     		ldr	r3, .L181
 1721 0086 0093     		str	r3, [sp]
 1722 0088 4FF00073 		mov	r3, #33554432
 1723 008c D2B2     		uxtb	r2, r2
 1724 008e 3146     		mov	r1, r6
 1725 0090 2046     		mov	r0, r4
 1726 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1727              	.LVL119:
 1728 0096 0BE0     		b	.L169
 1729              	.L171:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1730              		.loc 1 1255 0
 1731 0098 628D     		ldrh	r2, [r4, #42]
 1732 009a 92B2     		uxth	r2, r2
 1733 009c 2285     		strh	r2, [r4, #40]	@ movhi
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1734              		.loc 1 1256 0
 1735 009e 0023     		movs	r3, #0
 1736 00a0 0093     		str	r3, [sp]
 1737 00a2 4FF00073 		mov	r3, #33554432
 1738 00a6 D2B2     		uxtb	r2, r2
 1739 00a8 3146     		mov	r1, r6
 1740 00aa 2046     		mov	r0, r4
 1741 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1742              	.LVL120:
ARM GAS  /tmp/cc1AMB4O.s 			page 152


 1743              	.L169:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1744              		.loc 1 1223 0
 1745 00b0 638D     		ldrh	r3, [r4, #42]
 1746 00b2 9BB2     		uxth	r3, r3
 1747 00b4 002B     		cmp	r3, #0
 1748 00b6 33D0     		beq	.L180
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1749              		.loc 1 1226 0
 1750 00b8 2A46     		mov	r2, r5
 1751 00ba 0A99     		ldr	r1, [sp, #40]
 1752 00bc 2046     		mov	r0, r4
 1753 00be FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1754              	.LVL121:
 1755 00c2 0028     		cmp	r0, #0
 1756 00c4 52D1     		bne	.L176
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1757              		.loc 1 1232 0
 1758 00c6 2368     		ldr	r3, [r4]
 1759 00c8 5A6A     		ldr	r2, [r3, #36]
 1760 00ca 636A     		ldr	r3, [r4, #36]
 1761 00cc 1A70     		strb	r2, [r3]
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1762              		.loc 1 1235 0
 1763 00ce 636A     		ldr	r3, [r4, #36]
 1764 00d0 0133     		adds	r3, r3, #1
 1765 00d2 6362     		str	r3, [r4, #36]
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 1766              		.loc 1 1237 0
 1767 00d4 238D     		ldrh	r3, [r4, #40]
 1768 00d6 013B     		subs	r3, r3, #1
 1769 00d8 9BB2     		uxth	r3, r3
 1770 00da 2385     		strh	r3, [r4, #40]	@ movhi
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1771              		.loc 1 1238 0
 1772 00dc 628D     		ldrh	r2, [r4, #42]
 1773 00de 013A     		subs	r2, r2, #1
 1774 00e0 92B2     		uxth	r2, r2
 1775 00e2 6285     		strh	r2, [r4, #42]	@ movhi
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1776              		.loc 1 1240 0
 1777 00e4 628D     		ldrh	r2, [r4, #42]
 1778 00e6 92B2     		uxth	r2, r2
 1779 00e8 002A     		cmp	r2, #0
 1780 00ea E1D0     		beq	.L169
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1781              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1782 00ec 002B     		cmp	r3, #0
 1783 00ee DFD1     		bne	.L169
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1784              		.loc 1 1243 0 is_stmt 1
 1785 00f0 0095     		str	r5, [sp]
 1786 00f2 0A9B     		ldr	r3, [sp, #40]
 1787 00f4 0022     		movs	r2, #0
 1788 00f6 8021     		movs	r1, #128
 1789 00f8 2046     		mov	r0, r4
 1790 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
ARM GAS  /tmp/cc1AMB4O.s 			page 153


 1791              	.LVL122:
 1792 00fe 0028     		cmp	r0, #0
 1793 0100 36D1     		bne	.L177
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 1794              		.loc 1 1248 0
 1795 0102 638D     		ldrh	r3, [r4, #42]
 1796 0104 9BB2     		uxth	r3, r3
 1797 0106 FF2B     		cmp	r3, #255
 1798 0108 C6D9     		bls	.L171
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1799              		.loc 1 1250 0
 1800 010a FF22     		movs	r2, #255
 1801 010c 2285     		strh	r2, [r4, #40]	@ movhi
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1802              		.loc 1 1251 0
 1803 010e 0023     		movs	r3, #0
 1804 0110 0093     		str	r3, [sp]
 1805 0112 4FF08073 		mov	r3, #16777216
 1806 0116 3146     		mov	r1, r6
 1807 0118 2046     		mov	r0, r4
 1808 011a FFF7FEFF 		bl	I2C_TransferConfig
 1809              	.LVL123:
 1810 011e C7E7     		b	.L169
 1811              	.L180:
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1812              		.loc 1 1263 0
 1813 0120 2A46     		mov	r2, r5
 1814 0122 0A99     		ldr	r1, [sp, #40]
 1815 0124 2046     		mov	r0, r4
 1816 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1817              	.LVL124:
 1818 012a 0346     		mov	r3, r0
 1819 012c 10BB     		cbnz	r0, .L178
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1820              		.loc 1 1269 0
 1821 012e 2268     		ldr	r2, [r4]
 1822 0130 2021     		movs	r1, #32
 1823 0132 D161     		str	r1, [r2, #28]
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1824              		.loc 1 1272 0
 1825 0134 2068     		ldr	r0, [r4]
 1826 0136 4268     		ldr	r2, [r0, #4]
 1827 0138 22F0FF72 		bic	r2, r2, #33423360
 1828 013c 22F48B32 		bic	r2, r2, #71168
 1829 0140 22F4FF72 		bic	r2, r2, #510
 1830 0144 22F00102 		bic	r2, r2, #1
 1831 0148 4260     		str	r2, [r0, #4]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1832              		.loc 1 1274 0
 1833 014a 84F84110 		strb	r1, [r4, #65]
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1834              		.loc 1 1275 0
 1835 014e 0022     		movs	r2, #0
 1836 0150 84F84220 		strb	r2, [r4, #66]
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1837              		.loc 1 1278 0
 1838 0154 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/cc1AMB4O.s 			page 154


1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1839              		.loc 1 1280 0
 1840 0158 00E0     		b	.L166
 1841              	.LVL125:
 1842              	.L173:
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 1843              		.loc 1 1284 0
 1844 015a 0223     		movs	r3, #2
 1845              	.LVL126:
 1846              	.L166:
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1847              		.loc 1 1286 0
 1848 015c 1846     		mov	r0, r3
 1849 015e 03B0     		add	sp, sp, #12
 1850              	.LCFI29:
 1851              		.cfi_remember_state
 1852              		.cfi_def_cfa_offset 28
 1853              		@ sp needed
 1854 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1855              	.LVL127:
 1856              	.L174:
 1857              	.LCFI30:
 1858              		.cfi_restore_state
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1859              		.loc 1 1191 0
 1860 0164 0223     		movs	r3, #2
 1861              	.LVL128:
 1862 0166 F9E7     		b	.L166
 1863              	.LVL129:
 1864              	.L175:
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1865              		.loc 1 1198 0
 1866 0168 0123     		movs	r3, #1
 1867 016a F7E7     		b	.L166
 1868              	.L176:
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 1869              		.loc 1 1228 0
 1870 016c 0123     		movs	r3, #1
 1871 016e F5E7     		b	.L166
 1872              	.L177:
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 1873              		.loc 1 1245 0
 1874 0170 0123     		movs	r3, #1
 1875 0172 F3E7     		b	.L166
 1876              	.L178:
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 1877              		.loc 1 1265 0
 1878 0174 0123     		movs	r3, #1
 1879 0176 F1E7     		b	.L166
 1880              	.L182:
 1881              		.align	2
 1882              	.L181:
 1883 0178 00240080 		.word	-2147474432
 1884              		.cfi_endproc
 1885              	.LFE146:
 1887              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1888              		.align	1
ARM GAS  /tmp/cc1AMB4O.s 			page 155


 1889              		.global	HAL_I2C_Slave_Transmit
 1890              		.syntax unified
 1891              		.thumb
 1892              		.thumb_func
 1893              		.fpu fpv5-sp-d16
 1895              	HAL_I2C_Slave_Transmit:
 1896              	.LFB147:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 1897              		.loc 1 1298 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 0
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              	.LVL130:
 1902 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1903              	.LCFI31:
 1904              		.cfi_def_cfa_offset 24
 1905              		.cfi_offset 4, -24
 1906              		.cfi_offset 5, -20
 1907              		.cfi_offset 6, -16
 1908              		.cfi_offset 7, -12
 1909              		.cfi_offset 8, -8
 1910              		.cfi_offset 14, -4
 1911 0004 82B0     		sub	sp, sp, #8
 1912              	.LCFI32:
 1913              		.cfi_def_cfa_offset 32
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 1914              		.loc 1 1301 0
 1915 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1916 000a EDB2     		uxtb	r5, r5
 1917 000c 202D     		cmp	r5, #32
 1918 000e 40F0BA80 		bne	.L194
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1919              		.loc 1 1303 0
 1920 0012 B2FA82F5 		clz	r5, r2
 1921 0016 6D09     		lsrs	r5, r5, #5
 1922 0018 0029     		cmp	r1, #0
 1923 001a 08BF     		it	eq
 1924 001c 0125     		moveq	r5, #1
 1925 001e 002D     		cmp	r5, #0
 1926 0020 4ED1     		bne	.L198
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1927              		.loc 1 1309 0
 1928 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1929 0026 012C     		cmp	r4, #1
 1930 0028 00F0B280 		beq	.L195
 1931 002c 1F46     		mov	r7, r3
 1932 002e 1646     		mov	r6, r2
 1933 0030 0D46     		mov	r5, r1
 1934 0032 0446     		mov	r4, r0
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1935              		.loc 1 1309 0 is_stmt 0 discriminator 2
 1936 0034 0123     		movs	r3, #1
 1937              	.LVL131:
 1938 0036 80F84030 		strb	r3, [r0, #64]
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1939              		.loc 1 1312 0 is_stmt 1 discriminator 2
 1940 003a FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc1AMB4O.s 			page 156


 1941              	.LVL132:
 1942 003e 8046     		mov	r8, r0
 1943              	.LVL133:
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1944              		.loc 1 1314 0 discriminator 2
 1945 0040 2123     		movs	r3, #33
 1946 0042 84F84130 		strb	r3, [r4, #65]
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1947              		.loc 1 1315 0 discriminator 2
 1948 0046 2023     		movs	r3, #32
 1949 0048 84F84230 		strb	r3, [r4, #66]
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1950              		.loc 1 1316 0 discriminator 2
 1951 004c 0022     		movs	r2, #0
 1952 004e 6264     		str	r2, [r4, #68]
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1953              		.loc 1 1319 0 discriminator 2
 1954 0050 6562     		str	r5, [r4, #36]
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1955              		.loc 1 1320 0 discriminator 2
 1956 0052 6685     		strh	r6, [r4, #42]	@ movhi
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1957              		.loc 1 1321 0 discriminator 2
 1958 0054 6263     		str	r2, [r4, #52]
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1959              		.loc 1 1324 0 discriminator 2
 1960 0056 2168     		ldr	r1, [r4]
 1961 0058 4B68     		ldr	r3, [r1, #4]
 1962 005a 23F40043 		bic	r3, r3, #32768
 1963 005e 4B60     		str	r3, [r1, #4]
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1964              		.loc 1 1327 0 discriminator 2
 1965 0060 0090     		str	r0, [sp]
 1966 0062 3B46     		mov	r3, r7
 1967 0064 0821     		movs	r1, #8
 1968 0066 2046     		mov	r0, r4
 1969              	.LVL134:
 1970 0068 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1971              	.LVL135:
 1972 006c 0028     		cmp	r0, #0
 1973 006e 2CD1     		bne	.L199
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 1974              		.loc 1 1335 0
 1975 0070 2368     		ldr	r3, [r4]
 1976 0072 0822     		movs	r2, #8
 1977 0074 DA61     		str	r2, [r3, #28]
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1978              		.loc 1 1338 0
 1979 0076 E368     		ldr	r3, [r4, #12]
 1980 0078 022B     		cmp	r3, #2
 1981 007a 2DD0     		beq	.L200
 1982              	.L187:
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1983              		.loc 1 1353 0
 1984 007c CDF80080 		str	r8, [sp]
 1985 0080 3B46     		mov	r3, r7
 1986 0082 0022     		movs	r2, #0
ARM GAS  /tmp/cc1AMB4O.s 			page 157


 1987 0084 4FF48031 		mov	r1, #65536
 1988 0088 2046     		mov	r0, r4
 1989 008a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1990              	.LVL136:
 1991 008e 0028     		cmp	r0, #0
 1992 0090 36D1     		bne	.L201
 1993              	.L189:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 1994              		.loc 1 1360 0
 1995 0092 638D     		ldrh	r3, [r4, #42]
 1996 0094 9BB2     		uxth	r3, r3
 1997 0096 002B     		cmp	r3, #0
 1998 0098 40D0     		beq	.L202
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 1999              		.loc 1 1363 0
 2000 009a 4246     		mov	r2, r8
 2001 009c 3946     		mov	r1, r7
 2002 009e 2046     		mov	r0, r4
 2003 00a0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2004              	.LVL137:
 2005 00a4 0028     		cmp	r0, #0
 2006 00a6 32D1     		bne	.L203
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2007              		.loc 1 1371 0
 2008 00a8 626A     		ldr	r2, [r4, #36]
 2009 00aa 2368     		ldr	r3, [r4]
 2010 00ac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2011 00ae 9A62     		str	r2, [r3, #40]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2012              		.loc 1 1374 0
 2013 00b0 636A     		ldr	r3, [r4, #36]
 2014 00b2 0133     		adds	r3, r3, #1
 2015 00b4 6362     		str	r3, [r4, #36]
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2016              		.loc 1 1376 0
 2017 00b6 638D     		ldrh	r3, [r4, #42]
 2018 00b8 013B     		subs	r3, r3, #1
 2019 00ba 9BB2     		uxth	r3, r3
 2020 00bc 6385     		strh	r3, [r4, #42]	@ movhi
 2021 00be E8E7     		b	.L189
 2022              	.LVL138:
 2023              	.L198:
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2024              		.loc 1 1305 0
 2025 00c0 4FF40073 		mov	r3, #512
 2026              	.LVL139:
 2027 00c4 4364     		str	r3, [r0, #68]
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2028              		.loc 1 1306 0
 2029 00c6 0123     		movs	r3, #1
 2030 00c8 5EE0     		b	.L184
 2031              	.LVL140:
 2032              	.L199:
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2033              		.loc 1 1330 0
 2034 00ca 2268     		ldr	r2, [r4]
 2035 00cc 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/cc1AMB4O.s 			page 158


 2036 00ce 43F40043 		orr	r3, r3, #32768
 2037 00d2 5360     		str	r3, [r2, #4]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2038              		.loc 1 1331 0
 2039 00d4 0123     		movs	r3, #1
 2040 00d6 57E0     		b	.L184
 2041              	.L200:
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2042              		.loc 1 1341 0
 2043 00d8 CDF80080 		str	r8, [sp]
 2044 00dc 3B46     		mov	r3, r7
 2045 00de 0022     		movs	r2, #0
 2046 00e0 0821     		movs	r1, #8
 2047 00e2 2046     		mov	r0, r4
 2048 00e4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2049              	.LVL141:
 2050 00e8 18B9     		cbnz	r0, .L204
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2051              		.loc 1 1349 0
 2052 00ea 2368     		ldr	r3, [r4]
 2053 00ec 0822     		movs	r2, #8
 2054 00ee DA61     		str	r2, [r3, #28]
 2055 00f0 C4E7     		b	.L187
 2056              	.L204:
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2057              		.loc 1 1344 0
 2058 00f2 2268     		ldr	r2, [r4]
 2059 00f4 5368     		ldr	r3, [r2, #4]
 2060 00f6 43F40043 		orr	r3, r3, #32768
 2061 00fa 5360     		str	r3, [r2, #4]
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2062              		.loc 1 1345 0
 2063 00fc 0123     		movs	r3, #1
 2064 00fe 43E0     		b	.L184
 2065              	.L201:
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2066              		.loc 1 1356 0
 2067 0100 2268     		ldr	r2, [r4]
 2068 0102 5368     		ldr	r3, [r2, #4]
 2069 0104 43F40043 		orr	r3, r3, #32768
 2070 0108 5360     		str	r3, [r2, #4]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2071              		.loc 1 1357 0
 2072 010a 0123     		movs	r3, #1
 2073 010c 3CE0     		b	.L184
 2074              	.L203:
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         return HAL_ERROR;
 2075              		.loc 1 1366 0
 2076 010e 2268     		ldr	r2, [r4]
 2077 0110 5368     		ldr	r3, [r2, #4]
 2078 0112 43F40043 		orr	r3, r3, #32768
 2079 0116 5360     		str	r3, [r2, #4]
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2080              		.loc 1 1367 0
 2081 0118 0123     		movs	r3, #1
 2082 011a 35E0     		b	.L184
 2083              	.L202:
ARM GAS  /tmp/cc1AMB4O.s 			page 159


1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2084              		.loc 1 1380 0
 2085 011c 4246     		mov	r2, r8
 2086 011e 3946     		mov	r1, r7
 2087 0120 2046     		mov	r0, r4
 2088 0122 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2089              	.LVL142:
 2090 0126 58B1     		cbz	r0, .L192
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2091              		.loc 1 1383 0
 2092 0128 2268     		ldr	r2, [r4]
 2093 012a 5368     		ldr	r3, [r2, #4]
 2094 012c 43F40043 		orr	r3, r3, #32768
 2095 0130 5360     		str	r3, [r2, #4]
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2096              		.loc 1 1385 0
 2097 0132 636C     		ldr	r3, [r4, #68]
 2098 0134 042B     		cmp	r3, #4
 2099 0136 01D0     		beq	.L205
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2100              		.loc 1 1393 0
 2101 0138 0123     		movs	r3, #1
 2102 013a 25E0     		b	.L184
 2103              	.L205:
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2104              		.loc 1 1389 0
 2105 013c 0023     		movs	r3, #0
 2106 013e 6364     		str	r3, [r4, #68]
 2107              	.L192:
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2108              		.loc 1 1398 0
 2109 0140 2368     		ldr	r3, [r4]
 2110 0142 2022     		movs	r2, #32
 2111 0144 DA61     		str	r2, [r3, #28]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2112              		.loc 1 1401 0
 2113 0146 CDF80080 		str	r8, [sp]
 2114 014a 3B46     		mov	r3, r7
 2115 014c 0122     		movs	r2, #1
 2116 014e 4FF40041 		mov	r1, #32768
 2117 0152 2046     		mov	r0, r4
 2118 0154 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2119              	.LVL143:
 2120 0158 0346     		mov	r3, r0
 2121 015a 68B9     		cbnz	r0, .L206
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2122              		.loc 1 1409 0
 2123 015c 2168     		ldr	r1, [r4]
 2124 015e 4A68     		ldr	r2, [r1, #4]
 2125 0160 42F40042 		orr	r2, r2, #32768
 2126 0164 4A60     		str	r2, [r1, #4]
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2127              		.loc 1 1411 0
 2128 0166 2022     		movs	r2, #32
 2129 0168 84F84120 		strb	r2, [r4, #65]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2130              		.loc 1 1412 0
ARM GAS  /tmp/cc1AMB4O.s 			page 160


 2131 016c 0022     		movs	r2, #0
 2132 016e 84F84220 		strb	r2, [r4, #66]
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2133              		.loc 1 1415 0
 2134 0172 84F84020 		strb	r2, [r4, #64]
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2135              		.loc 1 1417 0
 2136 0176 07E0     		b	.L184
 2137              	.L206:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2138              		.loc 1 1404 0
 2139 0178 2268     		ldr	r2, [r4]
 2140 017a 5368     		ldr	r3, [r2, #4]
 2141 017c 43F40043 		orr	r3, r3, #32768
 2142 0180 5360     		str	r3, [r2, #4]
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2143              		.loc 1 1405 0
 2144 0182 0123     		movs	r3, #1
 2145 0184 00E0     		b	.L184
 2146              	.LVL144:
 2147              	.L194:
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2148              		.loc 1 1421 0
 2149 0186 0223     		movs	r3, #2
 2150              	.LVL145:
 2151              	.L184:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2152              		.loc 1 1423 0
 2153 0188 1846     		mov	r0, r3
 2154 018a 02B0     		add	sp, sp, #8
 2155              	.LCFI33:
 2156              		.cfi_remember_state
 2157              		.cfi_def_cfa_offset 24
 2158              		@ sp needed
 2159 018c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2160              	.LVL146:
 2161              	.L195:
 2162              	.LCFI34:
 2163              		.cfi_restore_state
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2164              		.loc 1 1309 0
 2165 0190 0223     		movs	r3, #2
 2166              	.LVL147:
 2167 0192 F9E7     		b	.L184
 2168              		.cfi_endproc
 2169              	.LFE147:
 2171              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2172              		.align	1
 2173              		.global	HAL_I2C_Slave_Receive
 2174              		.syntax unified
 2175              		.thumb
 2176              		.thumb_func
 2177              		.fpu fpv5-sp-d16
 2179              	HAL_I2C_Slave_Receive:
 2180              	.LFB148:
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 2181              		.loc 1 1435 0
ARM GAS  /tmp/cc1AMB4O.s 			page 161


 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 0, uses_anonymous_args = 0
 2185              	.LVL148:
 2186 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2187              	.LCFI35:
 2188              		.cfi_def_cfa_offset 24
 2189              		.cfi_offset 4, -24
 2190              		.cfi_offset 5, -20
 2191              		.cfi_offset 6, -16
 2192              		.cfi_offset 7, -12
 2193              		.cfi_offset 8, -8
 2194              		.cfi_offset 14, -4
 2195 0004 82B0     		sub	sp, sp, #8
 2196              	.LCFI36:
 2197              		.cfi_def_cfa_offset 32
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2198              		.loc 1 1438 0
 2199 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2200 000a EDB2     		uxtb	r5, r5
 2201 000c 202D     		cmp	r5, #32
 2202 000e 40F0A980 		bne	.L216
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2203              		.loc 1 1440 0
 2204 0012 B2FA82F5 		clz	r5, r2
 2205 0016 6D09     		lsrs	r5, r5, #5
 2206 0018 0029     		cmp	r1, #0
 2207 001a 08BF     		it	eq
 2208 001c 0125     		moveq	r5, #1
 2209 001e 65BB     		cbnz	r5, .L220
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2210              		.loc 1 1446 0
 2211 0020 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2212 0024 012C     		cmp	r4, #1
 2213 0026 00F0A280 		beq	.L217
 2214 002a 1F46     		mov	r7, r3
 2215 002c 1646     		mov	r6, r2
 2216 002e 0D46     		mov	r5, r1
 2217 0030 0446     		mov	r4, r0
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2218              		.loc 1 1446 0 is_stmt 0 discriminator 2
 2219 0032 0123     		movs	r3, #1
 2220              	.LVL149:
 2221 0034 80F84030 		strb	r3, [r0, #64]
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2222              		.loc 1 1449 0 is_stmt 1 discriminator 2
 2223 0038 FFF7FEFF 		bl	HAL_GetTick
 2224              	.LVL150:
 2225 003c 8046     		mov	r8, r0
 2226              	.LVL151:
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2227              		.loc 1 1451 0 discriminator 2
 2228 003e 2223     		movs	r3, #34
 2229 0040 84F84130 		strb	r3, [r4, #65]
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2230              		.loc 1 1452 0 discriminator 2
 2231 0044 2023     		movs	r3, #32
ARM GAS  /tmp/cc1AMB4O.s 			page 162


 2232 0046 84F84230 		strb	r3, [r4, #66]
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2233              		.loc 1 1453 0 discriminator 2
 2234 004a 0022     		movs	r2, #0
 2235 004c 6264     		str	r2, [r4, #68]
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2236              		.loc 1 1456 0 discriminator 2
 2237 004e 6562     		str	r5, [r4, #36]
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2238              		.loc 1 1457 0 discriminator 2
 2239 0050 6685     		strh	r6, [r4, #42]	@ movhi
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2240              		.loc 1 1458 0 discriminator 2
 2241 0052 6263     		str	r2, [r4, #52]
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2242              		.loc 1 1461 0 discriminator 2
 2243 0054 2168     		ldr	r1, [r4]
 2244 0056 4B68     		ldr	r3, [r1, #4]
 2245 0058 23F40043 		bic	r3, r3, #32768
 2246 005c 4B60     		str	r3, [r1, #4]
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2247              		.loc 1 1464 0 discriminator 2
 2248 005e 0090     		str	r0, [sp]
 2249 0060 3B46     		mov	r3, r7
 2250 0062 0821     		movs	r1, #8
 2251 0064 2046     		mov	r0, r4
 2252              	.LVL152:
 2253 0066 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2254              	.LVL153:
 2255 006a 58B1     		cbz	r0, .L210
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2256              		.loc 1 1467 0
 2257 006c 2268     		ldr	r2, [r4]
 2258 006e 5368     		ldr	r3, [r2, #4]
 2259 0070 43F40043 		orr	r3, r3, #32768
 2260 0074 5360     		str	r3, [r2, #4]
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2261              		.loc 1 1468 0
 2262 0076 0123     		movs	r3, #1
 2263 0078 75E0     		b	.L208
 2264              	.LVL154:
 2265              	.L220:
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 2266              		.loc 1 1442 0
 2267 007a 4FF40073 		mov	r3, #512
 2268              	.LVL155:
 2269 007e 4364     		str	r3, [r0, #68]
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2270              		.loc 1 1443 0
 2271 0080 0123     		movs	r3, #1
 2272 0082 70E0     		b	.L208
 2273              	.LVL156:
 2274              	.L210:
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2275              		.loc 1 1472 0
 2276 0084 2368     		ldr	r3, [r4]
 2277 0086 0822     		movs	r2, #8
ARM GAS  /tmp/cc1AMB4O.s 			page 163


 2278 0088 DA61     		str	r2, [r3, #28]
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2279              		.loc 1 1475 0
 2280 008a CDF80080 		str	r8, [sp]
 2281 008e 3B46     		mov	r3, r7
 2282 0090 0122     		movs	r2, #1
 2283 0092 4FF48031 		mov	r1, #65536
 2284 0096 2046     		mov	r0, r4
 2285 0098 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2286              	.LVL157:
 2287 009c A8B9     		cbnz	r0, .L221
 2288              	.L211:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2289              		.loc 1 1482 0
 2290 009e 638D     		ldrh	r3, [r4, #42]
 2291 00a0 9BB2     		uxth	r3, r3
 2292 00a2 002B     		cmp	r3, #0
 2293 00a4 2ED0     		beq	.L222
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2294              		.loc 1 1485 0
 2295 00a6 4246     		mov	r2, r8
 2296 00a8 3946     		mov	r1, r7
 2297 00aa 2046     		mov	r0, r4
 2298 00ac FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2299              	.LVL158:
 2300 00b0 90B9     		cbnz	r0, .L223
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2301              		.loc 1 1506 0
 2302 00b2 2368     		ldr	r3, [r4]
 2303 00b4 5A6A     		ldr	r2, [r3, #36]
 2304 00b6 636A     		ldr	r3, [r4, #36]
 2305 00b8 1A70     		strb	r2, [r3]
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2306              		.loc 1 1509 0
 2307 00ba 636A     		ldr	r3, [r4, #36]
 2308 00bc 0133     		adds	r3, r3, #1
 2309 00be 6362     		str	r3, [r4, #36]
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2310              		.loc 1 1511 0
 2311 00c0 638D     		ldrh	r3, [r4, #42]
 2312 00c2 013B     		subs	r3, r3, #1
 2313 00c4 9BB2     		uxth	r3, r3
 2314 00c6 6385     		strh	r3, [r4, #42]	@ movhi
 2315 00c8 E9E7     		b	.L211
 2316              	.L221:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2317              		.loc 1 1478 0
 2318 00ca 2268     		ldr	r2, [r4]
 2319 00cc 5368     		ldr	r3, [r2, #4]
 2320 00ce 43F40043 		orr	r3, r3, #32768
 2321 00d2 5360     		str	r3, [r2, #4]
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2322              		.loc 1 1479 0
 2323 00d4 0123     		movs	r3, #1
 2324 00d6 46E0     		b	.L208
 2325              	.L223:
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 164


 2326              		.loc 1 1488 0
 2327 00d8 2268     		ldr	r2, [r4]
 2328 00da 5368     		ldr	r3, [r2, #4]
 2329 00dc 43F40043 		orr	r3, r3, #32768
 2330 00e0 5360     		str	r3, [r2, #4]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 2331              		.loc 1 1491 0
 2332 00e2 2368     		ldr	r3, [r4]
 2333 00e4 9A69     		ldr	r2, [r3, #24]
 2334 00e6 12F0040F 		tst	r2, #4
 2335 00ea 42D0     		beq	.L218
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2336              		.loc 1 1494 0
 2337 00ec 5A6A     		ldr	r2, [r3, #36]
 2338 00ee 636A     		ldr	r3, [r4, #36]
 2339 00f0 1A70     		strb	r2, [r3]
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2340              		.loc 1 1497 0
 2341 00f2 636A     		ldr	r3, [r4, #36]
 2342 00f4 0133     		adds	r3, r3, #1
 2343 00f6 6362     		str	r3, [r4, #36]
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 2344              		.loc 1 1499 0
 2345 00f8 638D     		ldrh	r3, [r4, #42]
 2346 00fa 013B     		subs	r3, r3, #1
 2347 00fc 9BB2     		uxth	r3, r3
 2348 00fe 6385     		strh	r3, [r4, #42]	@ movhi
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2349              		.loc 1 1502 0
 2350 0100 0123     		movs	r3, #1
 2351 0102 30E0     		b	.L208
 2352              	.L222:
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2353              		.loc 1 1515 0
 2354 0104 4246     		mov	r2, r8
 2355 0106 3946     		mov	r1, r7
 2356 0108 2046     		mov	r0, r4
 2357 010a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2358              	.LVL159:
 2359 010e 30B1     		cbz	r0, .L214
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2360              		.loc 1 1518 0
 2361 0110 2268     		ldr	r2, [r4]
 2362 0112 5368     		ldr	r3, [r2, #4]
 2363 0114 43F40043 		orr	r3, r3, #32768
 2364 0118 5360     		str	r3, [r2, #4]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2365              		.loc 1 1519 0
 2366 011a 0123     		movs	r3, #1
 2367 011c 23E0     		b	.L208
 2368              	.L214:
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2369              		.loc 1 1523 0
 2370 011e 2368     		ldr	r3, [r4]
 2371 0120 2022     		movs	r2, #32
 2372 0122 DA61     		str	r2, [r3, #28]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
ARM GAS  /tmp/cc1AMB4O.s 			page 165


 2373              		.loc 1 1526 0
 2374 0124 CDF80080 		str	r8, [sp]
 2375 0128 3B46     		mov	r3, r7
 2376 012a 0122     		movs	r2, #1
 2377 012c 4FF40041 		mov	r1, #32768
 2378 0130 2046     		mov	r0, r4
 2379 0132 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2380              	.LVL160:
 2381 0136 0346     		mov	r3, r0
 2382 0138 68B9     		cbnz	r0, .L224
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2383              		.loc 1 1534 0
 2384 013a 2168     		ldr	r1, [r4]
 2385 013c 4A68     		ldr	r2, [r1, #4]
 2386 013e 42F40042 		orr	r2, r2, #32768
 2387 0142 4A60     		str	r2, [r1, #4]
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2388              		.loc 1 1536 0
 2389 0144 2022     		movs	r2, #32
 2390 0146 84F84120 		strb	r2, [r4, #65]
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2391              		.loc 1 1537 0
 2392 014a 0022     		movs	r2, #0
 2393 014c 84F84220 		strb	r2, [r4, #66]
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2394              		.loc 1 1540 0
 2395 0150 84F84020 		strb	r2, [r4, #64]
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2396              		.loc 1 1542 0
 2397 0154 07E0     		b	.L208
 2398              	.L224:
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 2399              		.loc 1 1529 0
 2400 0156 2268     		ldr	r2, [r4]
 2401 0158 5368     		ldr	r3, [r2, #4]
 2402 015a 43F40043 		orr	r3, r3, #32768
 2403 015e 5360     		str	r3, [r2, #4]
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2404              		.loc 1 1530 0
 2405 0160 0123     		movs	r3, #1
 2406 0162 00E0     		b	.L208
 2407              	.LVL161:
 2408              	.L216:
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2409              		.loc 1 1546 0
 2410 0164 0223     		movs	r3, #2
 2411              	.LVL162:
 2412              	.L208:
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2413              		.loc 1 1548 0
 2414 0166 1846     		mov	r0, r3
 2415 0168 02B0     		add	sp, sp, #8
 2416              	.LCFI37:
 2417              		.cfi_remember_state
 2418              		.cfi_def_cfa_offset 24
 2419              		@ sp needed
 2420 016a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/cc1AMB4O.s 			page 166


 2421              	.LVL163:
 2422              	.L217:
 2423              	.LCFI38:
 2424              		.cfi_restore_state
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2425              		.loc 1 1446 0
 2426 016e 0223     		movs	r3, #2
 2427              	.LVL164:
 2428 0170 F9E7     		b	.L208
 2429              	.LVL165:
 2430              	.L218:
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 2431              		.loc 1 1502 0
 2432 0172 0123     		movs	r3, #1
 2433 0174 F7E7     		b	.L208
 2434              		.cfi_endproc
 2435              	.LFE148:
 2437              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2438              		.align	1
 2439              		.global	HAL_I2C_Master_Transmit_IT
 2440              		.syntax unified
 2441              		.thumb
 2442              		.thumb_func
 2443              		.fpu fpv5-sp-d16
 2445              	HAL_I2C_Master_Transmit_IT:
 2446              	.LFB149:
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2447              		.loc 1 1562 0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 0, uses_anonymous_args = 0
 2451              	.LVL166:
 2452 0000 30B5     		push	{r4, r5, lr}
 2453              	.LCFI39:
 2454              		.cfi_def_cfa_offset 12
 2455              		.cfi_offset 4, -12
 2456              		.cfi_offset 5, -8
 2457              		.cfi_offset 14, -4
 2458 0002 83B0     		sub	sp, sp, #12
 2459              	.LCFI40:
 2460              		.cfi_def_cfa_offset 24
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2461              		.loc 1 1565 0
 2462 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2463 0008 E4B2     		uxtb	r4, r4
 2464 000a 202C     		cmp	r4, #32
 2465 000c 37D1     		bne	.L229
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2466              		.loc 1 1567 0
 2467 000e 0468     		ldr	r4, [r0]
 2468 0010 A469     		ldr	r4, [r4, #24]
 2469 0012 14F4004F 		tst	r4, #32768
 2470 0016 35D1     		bne	.L230
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2471              		.loc 1 1573 0
 2472 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2473 001c 012C     		cmp	r4, #1
ARM GAS  /tmp/cc1AMB4O.s 			page 167


 2474 001e 33D0     		beq	.L231
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2475              		.loc 1 1573 0 is_stmt 0 discriminator 2
 2476 0020 0124     		movs	r4, #1
 2477 0022 80F84040 		strb	r4, [r0, #64]
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2478              		.loc 1 1575 0 is_stmt 1 discriminator 2
 2479 0026 2124     		movs	r4, #33
 2480 0028 80F84140 		strb	r4, [r0, #65]
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2481              		.loc 1 1576 0 discriminator 2
 2482 002c 1024     		movs	r4, #16
 2483 002e 80F84240 		strb	r4, [r0, #66]
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2484              		.loc 1 1577 0 discriminator 2
 2485 0032 0024     		movs	r4, #0
 2486 0034 4464     		str	r4, [r0, #68]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2487              		.loc 1 1580 0 discriminator 2
 2488 0036 4262     		str	r2, [r0, #36]
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2489              		.loc 1 1581 0 discriminator 2
 2490 0038 4385     		strh	r3, [r0, #42]	@ movhi
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2491              		.loc 1 1582 0 discriminator 2
 2492 003a 144B     		ldr	r3, .L233
 2493              	.LVL167:
 2494 003c C362     		str	r3, [r0, #44]
 2495              	.LVL168:
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2496              		.loc 1 1583 0 discriminator 2
 2497 003e 144B     		ldr	r3, .L233+4
 2498 0040 4363     		str	r3, [r0, #52]
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2499              		.loc 1 1585 0 discriminator 2
 2500 0042 438D     		ldrh	r3, [r0, #42]
 2501 0044 9BB2     		uxth	r3, r3
 2502 0046 FF2B     		cmp	r3, #255
 2503 0048 14D9     		bls	.L227
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2504              		.loc 1 1587 0
 2505 004a FF23     		movs	r3, #255
 2506 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2507              	.LVL169:
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2508              		.loc 1 1588 0
 2509 004e 4FF08073 		mov	r3, #16777216
 2510              	.LVL170:
 2511              	.L228:
 2512 0052 0446     		mov	r4, r0
 2513              	.LVL171:
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2514              		.loc 1 1598 0
 2515 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2516              	.LVL172:
 2517 0058 0E48     		ldr	r0, .L233+8
 2518              	.LVL173:
ARM GAS  /tmp/cc1AMB4O.s 			page 168


 2519 005a 0090     		str	r0, [sp]
 2520              	.LVL174:
 2521 005c 2046     		mov	r0, r4
 2522 005e FFF7FEFF 		bl	I2C_TransferConfig
 2523              	.LVL175:
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2524              		.loc 1 1601 0
 2525 0062 0025     		movs	r5, #0
 2526 0064 84F84050 		strb	r5, [r4, #64]
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2527              		.loc 1 1610 0
 2528 0068 0121     		movs	r1, #1
 2529 006a 2046     		mov	r0, r4
 2530 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2531              	.LVL176:
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2532              		.loc 1 1612 0
 2533 0070 2846     		mov	r0, r5
 2534 0072 05E0     		b	.L226
 2535              	.LVL177:
 2536              	.L227:
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2537              		.loc 1 1592 0
 2538 0074 438D     		ldrh	r3, [r0, #42]
 2539 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2540              	.LVL178:
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2541              		.loc 1 1593 0
 2542 0078 4FF00073 		mov	r3, #33554432
 2543 007c E9E7     		b	.L228
 2544              	.LVL179:
 2545              	.L229:
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2546              		.loc 1 1616 0
 2547 007e 0220     		movs	r0, #2
 2548              	.LVL180:
 2549              	.L226:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2550              		.loc 1 1618 0
 2551 0080 03B0     		add	sp, sp, #12
 2552              	.LCFI41:
 2553              		.cfi_remember_state
 2554              		.cfi_def_cfa_offset 12
 2555              		@ sp needed
 2556 0082 30BD     		pop	{r4, r5, pc}
 2557              	.LVL181:
 2558              	.L230:
 2559              	.LCFI42:
 2560              		.cfi_restore_state
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2561              		.loc 1 1569 0
 2562 0084 0220     		movs	r0, #2
 2563              	.LVL182:
 2564 0086 FBE7     		b	.L226
 2565              	.LVL183:
 2566              	.L231:
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 169


 2567              		.loc 1 1573 0
 2568 0088 0220     		movs	r0, #2
 2569              	.LVL184:
 2570 008a F9E7     		b	.L226
 2571              	.L234:
 2572              		.align	2
 2573              	.L233:
 2574 008c 0000FFFF 		.word	-65536
 2575 0090 00000000 		.word	I2C_Master_ISR_IT
 2576 0094 00200080 		.word	-2147475456
 2577              		.cfi_endproc
 2578              	.LFE149:
 2580              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2581              		.align	1
 2582              		.global	HAL_I2C_Master_Receive_IT
 2583              		.syntax unified
 2584              		.thumb
 2585              		.thumb_func
 2586              		.fpu fpv5-sp-d16
 2588              	HAL_I2C_Master_Receive_IT:
 2589              	.LFB150:
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2590              		.loc 1 1631 0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 0, uses_anonymous_args = 0
 2594              	.LVL185:
 2595 0000 30B5     		push	{r4, r5, lr}
 2596              	.LCFI43:
 2597              		.cfi_def_cfa_offset 12
 2598              		.cfi_offset 4, -12
 2599              		.cfi_offset 5, -8
 2600              		.cfi_offset 14, -4
 2601 0002 83B0     		sub	sp, sp, #12
 2602              	.LCFI44:
 2603              		.cfi_def_cfa_offset 24
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2604              		.loc 1 1634 0
 2605 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2606 0008 E4B2     		uxtb	r4, r4
 2607 000a 202C     		cmp	r4, #32
 2608 000c 37D1     		bne	.L239
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2609              		.loc 1 1636 0
 2610 000e 0468     		ldr	r4, [r0]
 2611 0010 A469     		ldr	r4, [r4, #24]
 2612 0012 14F4004F 		tst	r4, #32768
 2613 0016 35D1     		bne	.L240
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2614              		.loc 1 1642 0
 2615 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2616 001c 012C     		cmp	r4, #1
 2617 001e 33D0     		beq	.L241
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2618              		.loc 1 1642 0 is_stmt 0 discriminator 2
 2619 0020 0124     		movs	r4, #1
 2620 0022 80F84040 		strb	r4, [r0, #64]
ARM GAS  /tmp/cc1AMB4O.s 			page 170


1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2621              		.loc 1 1644 0 is_stmt 1 discriminator 2
 2622 0026 2224     		movs	r4, #34
 2623 0028 80F84140 		strb	r4, [r0, #65]
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2624              		.loc 1 1645 0 discriminator 2
 2625 002c 1024     		movs	r4, #16
 2626 002e 80F84240 		strb	r4, [r0, #66]
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2627              		.loc 1 1646 0 discriminator 2
 2628 0032 0024     		movs	r4, #0
 2629 0034 4464     		str	r4, [r0, #68]
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2630              		.loc 1 1649 0 discriminator 2
 2631 0036 4262     		str	r2, [r0, #36]
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2632              		.loc 1 1650 0 discriminator 2
 2633 0038 4385     		strh	r3, [r0, #42]	@ movhi
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2634              		.loc 1 1651 0 discriminator 2
 2635 003a 144B     		ldr	r3, .L243
 2636              	.LVL186:
 2637 003c C362     		str	r3, [r0, #44]
 2638              	.LVL187:
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2639              		.loc 1 1652 0 discriminator 2
 2640 003e 144B     		ldr	r3, .L243+4
 2641 0040 4363     		str	r3, [r0, #52]
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2642              		.loc 1 1654 0 discriminator 2
 2643 0042 438D     		ldrh	r3, [r0, #42]
 2644 0044 9BB2     		uxth	r3, r3
 2645 0046 FF2B     		cmp	r3, #255
 2646 0048 14D9     		bls	.L237
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2647              		.loc 1 1656 0
 2648 004a FF23     		movs	r3, #255
 2649 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2650              	.LVL188:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2651              		.loc 1 1657 0
 2652 004e 4FF08073 		mov	r3, #16777216
 2653              	.LVL189:
 2654              	.L238:
 2655 0052 0446     		mov	r4, r0
 2656              	.LVL190:
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2657              		.loc 1 1667 0
 2658 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2659              	.LVL191:
 2660 0058 0E48     		ldr	r0, .L243+8
 2661              	.LVL192:
 2662 005a 0090     		str	r0, [sp]
 2663              	.LVL193:
 2664 005c 2046     		mov	r0, r4
 2665 005e FFF7FEFF 		bl	I2C_TransferConfig
 2666              	.LVL194:
ARM GAS  /tmp/cc1AMB4O.s 			page 171


1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2667              		.loc 1 1670 0
 2668 0062 0025     		movs	r5, #0
 2669 0064 84F84050 		strb	r5, [r4, #64]
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2670              		.loc 1 1679 0
 2671 0068 0221     		movs	r1, #2
 2672 006a 2046     		mov	r0, r4
 2673 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2674              	.LVL195:
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2675              		.loc 1 1681 0
 2676 0070 2846     		mov	r0, r5
 2677 0072 05E0     		b	.L236
 2678              	.LVL196:
 2679              	.L237:
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2680              		.loc 1 1661 0
 2681 0074 438D     		ldrh	r3, [r0, #42]
 2682 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2683              	.LVL197:
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2684              		.loc 1 1662 0
 2685 0078 4FF00073 		mov	r3, #33554432
 2686 007c E9E7     		b	.L238
 2687              	.LVL198:
 2688              	.L239:
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2689              		.loc 1 1685 0
 2690 007e 0220     		movs	r0, #2
 2691              	.LVL199:
 2692              	.L236:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2693              		.loc 1 1687 0
 2694 0080 03B0     		add	sp, sp, #12
 2695              	.LCFI45:
 2696              		.cfi_remember_state
 2697              		.cfi_def_cfa_offset 12
 2698              		@ sp needed
 2699 0082 30BD     		pop	{r4, r5, pc}
 2700              	.LVL200:
 2701              	.L240:
 2702              	.LCFI46:
 2703              		.cfi_restore_state
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2704              		.loc 1 1638 0
 2705 0084 0220     		movs	r0, #2
 2706              	.LVL201:
 2707 0086 FBE7     		b	.L236
 2708              	.LVL202:
 2709              	.L241:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2710              		.loc 1 1642 0
 2711 0088 0220     		movs	r0, #2
 2712              	.LVL203:
 2713 008a F9E7     		b	.L236
 2714              	.L244:
ARM GAS  /tmp/cc1AMB4O.s 			page 172


 2715              		.align	2
 2716              	.L243:
 2717 008c 0000FFFF 		.word	-65536
 2718 0090 00000000 		.word	I2C_Master_ISR_IT
 2719 0094 00240080 		.word	-2147474432
 2720              		.cfi_endproc
 2721              	.LFE150:
 2723              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2724              		.align	1
 2725              		.global	HAL_I2C_Slave_Transmit_IT
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv5-sp-d16
 2731              	HAL_I2C_Slave_Transmit_IT:
 2732              	.LFB151:
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2733              		.loc 1 1698 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 0
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737              	.LVL204:
 2738 0000 38B5     		push	{r3, r4, r5, lr}
 2739              	.LCFI47:
 2740              		.cfi_def_cfa_offset 16
 2741              		.cfi_offset 3, -16
 2742              		.cfi_offset 4, -12
 2743              		.cfi_offset 5, -8
 2744              		.cfi_offset 14, -4
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2745              		.loc 1 1699 0
 2746 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2747 0006 DBB2     		uxtb	r3, r3
 2748 0008 202B     		cmp	r3, #32
 2749 000a 23D1     		bne	.L247
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2750              		.loc 1 1702 0
 2751 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2752 0010 012B     		cmp	r3, #1
 2753 0012 21D0     		beq	.L248
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2754              		.loc 1 1702 0 is_stmt 0 discriminator 2
 2755 0014 0123     		movs	r3, #1
 2756 0016 80F84030 		strb	r3, [r0, #64]
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2757              		.loc 1 1704 0 is_stmt 1 discriminator 2
 2758 001a 2123     		movs	r3, #33
 2759 001c 80F84130 		strb	r3, [r0, #65]
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2760              		.loc 1 1705 0 discriminator 2
 2761 0020 2023     		movs	r3, #32
 2762 0022 80F84230 		strb	r3, [r0, #66]
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2763              		.loc 1 1706 0 discriminator 2
 2764 0026 0024     		movs	r4, #0
 2765 0028 4464     		str	r4, [r0, #68]
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 173


 2766              		.loc 1 1709 0 discriminator 2
 2767 002a 0568     		ldr	r5, [r0]
 2768 002c 6B68     		ldr	r3, [r5, #4]
 2769 002e 23F40043 		bic	r3, r3, #32768
 2770 0032 6B60     		str	r3, [r5, #4]
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2771              		.loc 1 1712 0 discriminator 2
 2772 0034 4162     		str	r1, [r0, #36]
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2773              		.loc 1 1713 0 discriminator 2
 2774 0036 4285     		strh	r2, [r0, #42]	@ movhi
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2775              		.loc 1 1714 0 discriminator 2
 2776 0038 438D     		ldrh	r3, [r0, #42]
 2777 003a 0385     		strh	r3, [r0, #40]	@ movhi
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2778              		.loc 1 1715 0 discriminator 2
 2779 003c 074B     		ldr	r3, .L250
 2780 003e C362     		str	r3, [r0, #44]
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2781              		.loc 1 1716 0 discriminator 2
 2782 0040 074B     		ldr	r3, .L250+4
 2783 0042 4363     		str	r3, [r0, #52]
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2784              		.loc 1 1719 0 discriminator 2
 2785 0044 80F84040 		strb	r4, [r0, #64]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2786              		.loc 1 1728 0 discriminator 2
 2787 0048 48F20101 		movw	r1, #32769
 2788              	.LVL205:
 2789 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2790              	.LVL206:
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2791              		.loc 1 1730 0 discriminator 2
 2792 0050 2046     		mov	r0, r4
 2793 0052 00E0     		b	.L246
 2794              	.LVL207:
 2795              	.L247:
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2796              		.loc 1 1734 0
 2797 0054 0220     		movs	r0, #2
 2798              	.LVL208:
 2799              	.L246:
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2800              		.loc 1 1736 0
 2801 0056 38BD     		pop	{r3, r4, r5, pc}
 2802              	.LVL209:
 2803              	.L248:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2804              		.loc 1 1702 0
 2805 0058 0220     		movs	r0, #2
 2806              	.LVL210:
 2807 005a FCE7     		b	.L246
 2808              	.L251:
 2809              		.align	2
 2810              	.L250:
 2811 005c 0000FFFF 		.word	-65536
ARM GAS  /tmp/cc1AMB4O.s 			page 174


 2812 0060 00000000 		.word	I2C_Slave_ISR_IT
 2813              		.cfi_endproc
 2814              	.LFE151:
 2816              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2817              		.align	1
 2818              		.global	HAL_I2C_Slave_Receive_IT
 2819              		.syntax unified
 2820              		.thumb
 2821              		.thumb_func
 2822              		.fpu fpv5-sp-d16
 2824              	HAL_I2C_Slave_Receive_IT:
 2825              	.LFB152:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2826              		.loc 1 1747 0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 0
 2829              		@ frame_needed = 0, uses_anonymous_args = 0
 2830              	.LVL211:
 2831 0000 38B5     		push	{r3, r4, r5, lr}
 2832              	.LCFI48:
 2833              		.cfi_def_cfa_offset 16
 2834              		.cfi_offset 3, -16
 2835              		.cfi_offset 4, -12
 2836              		.cfi_offset 5, -8
 2837              		.cfi_offset 14, -4
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2838              		.loc 1 1748 0
 2839 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2840 0006 DBB2     		uxtb	r3, r3
 2841 0008 202B     		cmp	r3, #32
 2842 000a 23D1     		bne	.L254
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2843              		.loc 1 1751 0
 2844 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2845 0010 012B     		cmp	r3, #1
 2846 0012 21D0     		beq	.L255
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2847              		.loc 1 1751 0 is_stmt 0 discriminator 2
 2848 0014 0123     		movs	r3, #1
 2849 0016 80F84030 		strb	r3, [r0, #64]
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2850              		.loc 1 1753 0 is_stmt 1 discriminator 2
 2851 001a 2223     		movs	r3, #34
 2852 001c 80F84130 		strb	r3, [r0, #65]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2853              		.loc 1 1754 0 discriminator 2
 2854 0020 2023     		movs	r3, #32
 2855 0022 80F84230 		strb	r3, [r0, #66]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2856              		.loc 1 1755 0 discriminator 2
 2857 0026 0024     		movs	r4, #0
 2858 0028 4464     		str	r4, [r0, #68]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2859              		.loc 1 1758 0 discriminator 2
 2860 002a 0568     		ldr	r5, [r0]
 2861 002c 6B68     		ldr	r3, [r5, #4]
 2862 002e 23F40043 		bic	r3, r3, #32768
ARM GAS  /tmp/cc1AMB4O.s 			page 175


 2863 0032 6B60     		str	r3, [r5, #4]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2864              		.loc 1 1761 0 discriminator 2
 2865 0034 4162     		str	r1, [r0, #36]
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2866              		.loc 1 1762 0 discriminator 2
 2867 0036 4285     		strh	r2, [r0, #42]	@ movhi
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2868              		.loc 1 1763 0 discriminator 2
 2869 0038 438D     		ldrh	r3, [r0, #42]
 2870 003a 0385     		strh	r3, [r0, #40]	@ movhi
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2871              		.loc 1 1764 0 discriminator 2
 2872 003c 074B     		ldr	r3, .L257
 2873 003e C362     		str	r3, [r0, #44]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2874              		.loc 1 1765 0 discriminator 2
 2875 0040 074B     		ldr	r3, .L257+4
 2876 0042 4363     		str	r3, [r0, #52]
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2877              		.loc 1 1768 0 discriminator 2
 2878 0044 80F84040 		strb	r4, [r0, #64]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2879              		.loc 1 1777 0 discriminator 2
 2880 0048 48F20201 		movw	r1, #32770
 2881              	.LVL212:
 2882 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2883              	.LVL213:
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2884              		.loc 1 1779 0 discriminator 2
 2885 0050 2046     		mov	r0, r4
 2886 0052 00E0     		b	.L253
 2887              	.LVL214:
 2888              	.L254:
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 2889              		.loc 1 1783 0
 2890 0054 0220     		movs	r0, #2
 2891              	.LVL215:
 2892              	.L253:
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2893              		.loc 1 1785 0
 2894 0056 38BD     		pop	{r3, r4, r5, pc}
 2895              	.LVL216:
 2896              	.L255:
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2897              		.loc 1 1751 0
 2898 0058 0220     		movs	r0, #2
 2899              	.LVL217:
 2900 005a FCE7     		b	.L253
 2901              	.L258:
 2902              		.align	2
 2903              	.L257:
 2904 005c 0000FFFF 		.word	-65536
 2905 0060 00000000 		.word	I2C_Slave_ISR_IT
 2906              		.cfi_endproc
 2907              	.LFE152:
 2909              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
ARM GAS  /tmp/cc1AMB4O.s 			page 176


 2910              		.align	1
 2911              		.global	HAL_I2C_Master_Transmit_DMA
 2912              		.syntax unified
 2913              		.thumb
 2914              		.thumb_func
 2915              		.fpu fpv5-sp-d16
 2917              	HAL_I2C_Master_Transmit_DMA:
 2918              	.LFB153:
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 2919              		.loc 1 1799 0
 2920              		.cfi_startproc
 2921              		@ args = 0, pretend = 0, frame = 0
 2922              		@ frame_needed = 0, uses_anonymous_args = 0
 2923              	.LVL218:
 2924 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2925              	.LCFI49:
 2926              		.cfi_def_cfa_offset 20
 2927              		.cfi_offset 4, -20
 2928              		.cfi_offset 5, -16
 2929              		.cfi_offset 6, -12
 2930              		.cfi_offset 7, -8
 2931              		.cfi_offset 14, -4
 2932 0002 83B0     		sub	sp, sp, #12
 2933              	.LCFI50:
 2934              		.cfi_def_cfa_offset 32
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 2935              		.loc 1 1803 0
 2936 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2937 0008 E4B2     		uxtb	r4, r4
 2938 000a 202C     		cmp	r4, #32
 2939 000c 40F08C80 		bne	.L267
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2940              		.loc 1 1805 0
 2941 0010 0468     		ldr	r4, [r0]
 2942 0012 A469     		ldr	r4, [r4, #24]
 2943 0014 14F4004F 		tst	r4, #32768
 2944 0018 40F08A80 		bne	.L268
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2945              		.loc 1 1811 0
 2946 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2947 0020 012C     		cmp	r4, #1
 2948 0022 00F08780 		beq	.L269
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2949              		.loc 1 1811 0 is_stmt 0 discriminator 2
 2950 0026 0124     		movs	r4, #1
 2951 0028 80F84040 		strb	r4, [r0, #64]
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2952              		.loc 1 1813 0 is_stmt 1 discriminator 2
 2953 002c 2124     		movs	r4, #33
 2954 002e 80F84140 		strb	r4, [r0, #65]
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2955              		.loc 1 1814 0 discriminator 2
 2956 0032 1024     		movs	r4, #16
 2957 0034 80F84240 		strb	r4, [r0, #66]
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2958              		.loc 1 1815 0 discriminator 2
 2959 0038 0024     		movs	r4, #0
ARM GAS  /tmp/cc1AMB4O.s 			page 177


 2960 003a 4464     		str	r4, [r0, #68]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2961              		.loc 1 1818 0 discriminator 2
 2962 003c 4262     		str	r2, [r0, #36]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2963              		.loc 1 1819 0 discriminator 2
 2964 003e 4385     		strh	r3, [r0, #42]	@ movhi
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2965              		.loc 1 1820 0 discriminator 2
 2966 0040 3D4B     		ldr	r3, .L273
 2967              	.LVL219:
 2968 0042 C362     		str	r3, [r0, #44]
 2969              	.LVL220:
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2970              		.loc 1 1821 0 discriminator 2
 2971 0044 3D4B     		ldr	r3, .L273+4
 2972 0046 4363     		str	r3, [r0, #52]
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2973              		.loc 1 1823 0 discriminator 2
 2974 0048 438D     		ldrh	r3, [r0, #42]
 2975 004a 9BB2     		uxth	r3, r3
 2976 004c FF2B     		cmp	r3, #255
 2977 004e 2CD9     		bls	.L261
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2978              		.loc 1 1825 0
 2979 0050 FF23     		movs	r3, #255
 2980 0052 0385     		strh	r3, [r0, #40]	@ movhi
 2981              	.LVL221:
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 2982              		.loc 1 1826 0
 2983 0054 4FF08076 		mov	r6, #16777216
 2984              	.LVL222:
 2985              	.L262:
 2986 0058 1546     		mov	r5, r2
 2987 005a 0F46     		mov	r7, r1
 2988 005c 0446     		mov	r4, r0
 2989              	.LVL223:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 2990              		.loc 1 1834 0
 2991 005e 028D     		ldrh	r2, [r0, #40]
 2992              	.LVL224:
 2993 0060 002A     		cmp	r2, #0
 2994 0062 50D0     		beq	.L263
 2995              	.LVL225:
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 2996              		.loc 1 1836 0
 2997 0064 836B     		ldr	r3, [r0, #56]
 2998 0066 2BB3     		cbz	r3, .L264
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 2999              		.loc 1 1839 0
 3000 0068 354A     		ldr	r2, .L273+8
 3001 006a DA63     		str	r2, [r3, #60]
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3002              		.loc 1 1842 0
 3003 006c 836B     		ldr	r3, [r0, #56]
 3004 006e 354A     		ldr	r2, .L273+12
 3005 0070 DA64     		str	r2, [r3, #76]
ARM GAS  /tmp/cc1AMB4O.s 			page 178


1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 3006              		.loc 1 1845 0
 3007 0072 826B     		ldr	r2, [r0, #56]
 3008 0074 0023     		movs	r3, #0
 3009 0076 1364     		str	r3, [r2, #64]
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3010              		.loc 1 1846 0
 3011 0078 826B     		ldr	r2, [r0, #56]
 3012 007a 1365     		str	r3, [r2, #80]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3013              		.loc 1 1849 0
 3014 007c 0268     		ldr	r2, [r0]
 3015 007e 038D     		ldrh	r3, [r0, #40]
 3016 0080 2832     		adds	r2, r2, #40
 3017 0082 2946     		mov	r1, r5
 3018              	.LVL226:
 3019 0084 806B     		ldr	r0, [r0, #56]
 3020              	.LVL227:
 3021 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3022              	.LVL228:
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3023              		.loc 1 1866 0
 3024 008a 0546     		mov	r5, r0
 3025              	.LVL229:
 3026 008c 00B3     		cbz	r0, .L272
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3027              		.loc 1 1890 0
 3028 008e 2023     		movs	r3, #32
 3029 0090 84F84130 		strb	r3, [r4, #65]
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3030              		.loc 1 1891 0
 3031 0094 0022     		movs	r2, #0
 3032 0096 84F84220 		strb	r2, [r4, #66]
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3033              		.loc 1 1894 0
 3034 009a 636C     		ldr	r3, [r4, #68]
 3035 009c 43F01003 		orr	r3, r3, #16
 3036 00a0 6364     		str	r3, [r4, #68]
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3037              		.loc 1 1897 0
 3038 00a2 84F84020 		strb	r2, [r4, #64]
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3039              		.loc 1 1899 0
 3040 00a6 0125     		movs	r5, #1
 3041 00a8 3FE0     		b	.L260
 3042              	.LVL230:
 3043              	.L261:
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3044              		.loc 1 1830 0
 3045 00aa 438D     		ldrh	r3, [r0, #42]
 3046 00ac 0385     		strh	r3, [r0, #40]	@ movhi
 3047              	.LVL231:
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3048              		.loc 1 1831 0
 3049 00ae 4FF00076 		mov	r6, #33554432
 3050 00b2 D1E7     		b	.L262
 3051              	.LVL232:
ARM GAS  /tmp/cc1AMB4O.s 			page 179


 3052              	.L264:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3053              		.loc 1 1854 0
 3054 00b4 2023     		movs	r3, #32
 3055 00b6 80F84130 		strb	r3, [r0, #65]
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3056              		.loc 1 1855 0
 3057 00ba 0022     		movs	r2, #0
 3058 00bc 80F84220 		strb	r2, [r0, #66]
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3059              		.loc 1 1858 0
 3060 00c0 436C     		ldr	r3, [r0, #68]
 3061 00c2 43F08003 		orr	r3, r3, #128
 3062 00c6 4364     		str	r3, [r0, #68]
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3063              		.loc 1 1861 0
 3064 00c8 80F84020 		strb	r2, [r0, #64]
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3065              		.loc 1 1863 0
 3066 00cc 0125     		movs	r5, #1
 3067              	.LVL233:
 3068 00ce 2CE0     		b	.L260
 3069              	.LVL234:
 3070              	.L272:
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3071              		.loc 1 1870 0
 3072 00d0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3073 00d4 1C4B     		ldr	r3, .L273+16
 3074 00d6 0093     		str	r3, [sp]
 3075 00d8 3346     		mov	r3, r6
 3076 00da 3946     		mov	r1, r7
 3077 00dc 2046     		mov	r0, r4
 3078              	.LVL235:
 3079 00de FFF7FEFF 		bl	I2C_TransferConfig
 3080              	.LVL236:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3081              		.loc 1 1873 0
 3082 00e2 638D     		ldrh	r3, [r4, #42]
 3083 00e4 228D     		ldrh	r2, [r4, #40]
 3084 00e6 9B1A     		subs	r3, r3, r2
 3085 00e8 9BB2     		uxth	r3, r3
 3086 00ea 6385     		strh	r3, [r4, #42]	@ movhi
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3087              		.loc 1 1876 0
 3088 00ec 0023     		movs	r3, #0
 3089 00ee 84F84030 		strb	r3, [r4, #64]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3090              		.loc 1 1882 0
 3091 00f2 1021     		movs	r1, #16
 3092 00f4 2046     		mov	r0, r4
 3093 00f6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3094              	.LVL237:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3095              		.loc 1 1885 0
 3096 00fa 2268     		ldr	r2, [r4]
 3097 00fc 1368     		ldr	r3, [r2]
 3098 00fe 43F48043 		orr	r3, r3, #16384
ARM GAS  /tmp/cc1AMB4O.s 			page 180


 3099 0102 1360     		str	r3, [r2]
 3100 0104 11E0     		b	.L260
 3101              	.LVL238:
 3102              	.L263:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3103              		.loc 1 1905 0
 3104 0106 114B     		ldr	r3, .L273+20
 3105 0108 4363     		str	r3, [r0, #52]
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3106              		.loc 1 1909 0
 3107 010a 0F4B     		ldr	r3, .L273+16
 3108 010c 0093     		str	r3, [sp]
 3109 010e 4FF00073 		mov	r3, #33554432
 3110 0112 D2B2     		uxtb	r2, r2
 3111 0114 FFF7FEFF 		bl	I2C_TransferConfig
 3112              	.LVL239:
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3113              		.loc 1 1912 0
 3114 0118 0025     		movs	r5, #0
 3115              	.LVL240:
 3116 011a 84F84050 		strb	r5, [r4, #64]
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3117              		.loc 1 1920 0
 3118 011e 0121     		movs	r1, #1
 3119 0120 2046     		mov	r0, r4
 3120 0122 FFF7FEFF 		bl	I2C_Enable_IRQ
 3121              	.LVL241:
 3122 0126 00E0     		b	.L260
 3123              	.LVL242:
 3124              	.L267:
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3125              		.loc 1 1927 0
 3126 0128 0225     		movs	r5, #2
 3127              	.LVL243:
 3128              	.L260:
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3129              		.loc 1 1929 0
 3130 012a 2846     		mov	r0, r5
 3131 012c 03B0     		add	sp, sp, #12
 3132              	.LCFI51:
 3133              		.cfi_remember_state
 3134              		.cfi_def_cfa_offset 20
 3135              		@ sp needed
 3136 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 3137              	.LVL244:
 3138              	.L268:
 3139              	.LCFI52:
 3140              		.cfi_restore_state
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3141              		.loc 1 1807 0
 3142 0130 0225     		movs	r5, #2
 3143 0132 FAE7     		b	.L260
 3144              	.L269:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3145              		.loc 1 1811 0
 3146 0134 0225     		movs	r5, #2
 3147 0136 F8E7     		b	.L260
ARM GAS  /tmp/cc1AMB4O.s 			page 181


 3148              	.L274:
 3149              		.align	2
 3150              	.L273:
 3151 0138 0000FFFF 		.word	-65536
 3152 013c 00000000 		.word	I2C_Master_ISR_DMA
 3153 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3154 0144 00000000 		.word	I2C_DMAError
 3155 0148 00200080 		.word	-2147475456
 3156 014c 00000000 		.word	I2C_Master_ISR_IT
 3157              		.cfi_endproc
 3158              	.LFE153:
 3160              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3161              		.align	1
 3162              		.global	HAL_I2C_Master_Receive_DMA
 3163              		.syntax unified
 3164              		.thumb
 3165              		.thumb_func
 3166              		.fpu fpv5-sp-d16
 3168              	HAL_I2C_Master_Receive_DMA:
 3169              	.LFB154:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 3170              		.loc 1 1943 0
 3171              		.cfi_startproc
 3172              		@ args = 0, pretend = 0, frame = 0
 3173              		@ frame_needed = 0, uses_anonymous_args = 0
 3174              	.LVL245:
 3175 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3176              	.LCFI53:
 3177              		.cfi_def_cfa_offset 20
 3178              		.cfi_offset 4, -20
 3179              		.cfi_offset 5, -16
 3180              		.cfi_offset 6, -12
 3181              		.cfi_offset 7, -8
 3182              		.cfi_offset 14, -4
 3183 0002 83B0     		sub	sp, sp, #12
 3184              	.LCFI54:
 3185              		.cfi_def_cfa_offset 32
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3186              		.loc 1 1947 0
 3187 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3188 0008 E4B2     		uxtb	r4, r4
 3189 000a 202C     		cmp	r4, #32
 3190 000c 40F08B80 		bne	.L283
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3191              		.loc 1 1949 0
 3192 0010 0468     		ldr	r4, [r0]
 3193 0012 A469     		ldr	r4, [r4, #24]
 3194 0014 14F4004F 		tst	r4, #32768
 3195 0018 40F08980 		bne	.L284
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3196              		.loc 1 1955 0
 3197 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3198 0020 012C     		cmp	r4, #1
 3199 0022 00F08680 		beq	.L285
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3200              		.loc 1 1955 0 is_stmt 0 discriminator 2
 3201 0026 0124     		movs	r4, #1
ARM GAS  /tmp/cc1AMB4O.s 			page 182


 3202 0028 80F84040 		strb	r4, [r0, #64]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3203              		.loc 1 1957 0 is_stmt 1 discriminator 2
 3204 002c 2224     		movs	r4, #34
 3205 002e 80F84140 		strb	r4, [r0, #65]
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3206              		.loc 1 1958 0 discriminator 2
 3207 0032 1024     		movs	r4, #16
 3208 0034 80F84240 		strb	r4, [r0, #66]
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3209              		.loc 1 1959 0 discriminator 2
 3210 0038 0024     		movs	r4, #0
 3211 003a 4464     		str	r4, [r0, #68]
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3212              		.loc 1 1962 0 discriminator 2
 3213 003c 4262     		str	r2, [r0, #36]
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3214              		.loc 1 1963 0 discriminator 2
 3215 003e 4385     		strh	r3, [r0, #42]	@ movhi
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3216              		.loc 1 1964 0 discriminator 2
 3217 0040 3D4B     		ldr	r3, .L289
 3218              	.LVL246:
 3219 0042 C362     		str	r3, [r0, #44]
 3220              	.LVL247:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3221              		.loc 1 1965 0 discriminator 2
 3222 0044 3D4B     		ldr	r3, .L289+4
 3223 0046 4363     		str	r3, [r0, #52]
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3224              		.loc 1 1967 0 discriminator 2
 3225 0048 438D     		ldrh	r3, [r0, #42]
 3226 004a 9BB2     		uxth	r3, r3
 3227 004c FF2B     		cmp	r3, #255
 3228 004e 2AD9     		bls	.L277
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3229              		.loc 1 1969 0
 3230 0050 FF23     		movs	r3, #255
 3231 0052 0385     		strh	r3, [r0, #40]	@ movhi
 3232              	.LVL248:
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3233              		.loc 1 1970 0
 3234 0054 4FF08076 		mov	r6, #16777216
 3235              	.LVL249:
 3236              	.L278:
 3237 0058 0F46     		mov	r7, r1
 3238 005a 0446     		mov	r4, r0
 3239              	.LVL250:
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3240              		.loc 1 1978 0
 3241 005c 018D     		ldrh	r1, [r0, #40]
 3242              	.LVL251:
 3243 005e 0029     		cmp	r1, #0
 3244 0060 4FD0     		beq	.L279
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3245              		.loc 1 1980 0
 3246 0062 C36B     		ldr	r3, [r0, #60]
ARM GAS  /tmp/cc1AMB4O.s 			page 183


 3247 0064 23B3     		cbz	r3, .L280
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3248              		.loc 1 1983 0
 3249 0066 3649     		ldr	r1, .L289+8
 3250 0068 D963     		str	r1, [r3, #60]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3251              		.loc 1 1986 0
 3252 006a C36B     		ldr	r3, [r0, #60]
 3253 006c 3549     		ldr	r1, .L289+12
 3254 006e D964     		str	r1, [r3, #76]
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3255              		.loc 1 1989 0
 3256 0070 C16B     		ldr	r1, [r0, #60]
 3257 0072 0023     		movs	r3, #0
 3258 0074 0B64     		str	r3, [r1, #64]
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3259              		.loc 1 1990 0
 3260 0076 C16B     		ldr	r1, [r0, #60]
 3261 0078 0B65     		str	r3, [r1, #80]
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3262              		.loc 1 1993 0
 3263 007a 0168     		ldr	r1, [r0]
 3264 007c 038D     		ldrh	r3, [r0, #40]
 3265 007e 2431     		adds	r1, r1, #36
 3266 0080 C06B     		ldr	r0, [r0, #60]
 3267              	.LVL252:
 3268 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3269              	.LVL253:
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3270              		.loc 1 2010 0
 3271 0086 0546     		mov	r5, r0
 3272 0088 00B3     		cbz	r0, .L288
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3273              		.loc 1 2034 0
 3274 008a 2023     		movs	r3, #32
 3275 008c 84F84130 		strb	r3, [r4, #65]
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3276              		.loc 1 2035 0
 3277 0090 0022     		movs	r2, #0
 3278 0092 84F84220 		strb	r2, [r4, #66]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3279              		.loc 1 2038 0
 3280 0096 636C     		ldr	r3, [r4, #68]
 3281 0098 43F01003 		orr	r3, r3, #16
 3282 009c 6364     		str	r3, [r4, #68]
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3283              		.loc 1 2041 0
 3284 009e 84F84020 		strb	r2, [r4, #64]
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3285              		.loc 1 2043 0
 3286 00a2 0125     		movs	r5, #1
 3287 00a4 40E0     		b	.L276
 3288              	.LVL254:
 3289              	.L277:
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3290              		.loc 1 1974 0
 3291 00a6 438D     		ldrh	r3, [r0, #42]
ARM GAS  /tmp/cc1AMB4O.s 			page 184


 3292 00a8 0385     		strh	r3, [r0, #40]	@ movhi
 3293              	.LVL255:
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3294              		.loc 1 1975 0
 3295 00aa 4FF00076 		mov	r6, #33554432
 3296 00ae D3E7     		b	.L278
 3297              	.LVL256:
 3298              	.L280:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3299              		.loc 1 1998 0
 3300 00b0 2023     		movs	r3, #32
 3301 00b2 80F84130 		strb	r3, [r0, #65]
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3302              		.loc 1 1999 0
 3303 00b6 0022     		movs	r2, #0
 3304              	.LVL257:
 3305 00b8 80F84220 		strb	r2, [r0, #66]
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3306              		.loc 1 2002 0
 3307 00bc 436C     		ldr	r3, [r0, #68]
 3308 00be 43F08003 		orr	r3, r3, #128
 3309 00c2 4364     		str	r3, [r0, #68]
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3310              		.loc 1 2005 0
 3311 00c4 80F84020 		strb	r2, [r0, #64]
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3312              		.loc 1 2007 0
 3313 00c8 0125     		movs	r5, #1
 3314 00ca 2DE0     		b	.L276
 3315              	.LVL258:
 3316              	.L288:
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3317              		.loc 1 2014 0
 3318 00cc 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3319 00d0 1D4B     		ldr	r3, .L289+16
 3320 00d2 0093     		str	r3, [sp]
 3321 00d4 3346     		mov	r3, r6
 3322 00d6 3946     		mov	r1, r7
 3323 00d8 2046     		mov	r0, r4
 3324              	.LVL259:
 3325 00da FFF7FEFF 		bl	I2C_TransferConfig
 3326              	.LVL260:
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3327              		.loc 1 2017 0
 3328 00de 638D     		ldrh	r3, [r4, #42]
 3329 00e0 228D     		ldrh	r2, [r4, #40]
 3330 00e2 9B1A     		subs	r3, r3, r2
 3331 00e4 9BB2     		uxth	r3, r3
 3332 00e6 6385     		strh	r3, [r4, #42]	@ movhi
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3333              		.loc 1 2020 0
 3334 00e8 0023     		movs	r3, #0
 3335 00ea 84F84030 		strb	r3, [r4, #64]
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3336              		.loc 1 2026 0
 3337 00ee 1021     		movs	r1, #16
 3338 00f0 2046     		mov	r0, r4
ARM GAS  /tmp/cc1AMB4O.s 			page 185


 3339 00f2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3340              	.LVL261:
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 3341              		.loc 1 2029 0
 3342 00f6 2268     		ldr	r2, [r4]
 3343 00f8 1368     		ldr	r3, [r2]
 3344 00fa 43F40043 		orr	r3, r3, #32768
 3345 00fe 1360     		str	r3, [r2]
 3346 0100 12E0     		b	.L276
 3347              	.LVL262:
 3348              	.L279:
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3349              		.loc 1 2049 0
 3350 0102 124B     		ldr	r3, .L289+20
 3351 0104 4363     		str	r3, [r0, #52]
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3352              		.loc 1 2053 0
 3353 0106 104B     		ldr	r3, .L289+16
 3354 0108 0093     		str	r3, [sp]
 3355 010a 4FF00073 		mov	r3, #33554432
 3356 010e CAB2     		uxtb	r2, r1
 3357              	.LVL263:
 3358 0110 3946     		mov	r1, r7
 3359 0112 FFF7FEFF 		bl	I2C_TransferConfig
 3360              	.LVL264:
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3361              		.loc 1 2056 0
 3362 0116 0025     		movs	r5, #0
 3363 0118 84F84050 		strb	r5, [r4, #64]
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3364              		.loc 1 2064 0
 3365 011c 0121     		movs	r1, #1
 3366 011e 2046     		mov	r0, r4
 3367 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 3368              	.LVL265:
 3369 0124 00E0     		b	.L276
 3370              	.LVL266:
 3371              	.L283:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3372              		.loc 1 2071 0
 3373 0126 0225     		movs	r5, #2
 3374              	.LVL267:
 3375              	.L276:
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3376              		.loc 1 2073 0
 3377 0128 2846     		mov	r0, r5
 3378 012a 03B0     		add	sp, sp, #12
 3379              	.LCFI55:
 3380              		.cfi_remember_state
 3381              		.cfi_def_cfa_offset 20
 3382              		@ sp needed
 3383 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 3384              	.LVL268:
 3385              	.L284:
 3386              	.LCFI56:
 3387              		.cfi_restore_state
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 186


 3388              		.loc 1 1951 0
 3389 012e 0225     		movs	r5, #2
 3390 0130 FAE7     		b	.L276
 3391              	.L285:
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3392              		.loc 1 1955 0
 3393 0132 0225     		movs	r5, #2
 3394 0134 F8E7     		b	.L276
 3395              	.L290:
 3396 0136 00BF     		.align	2
 3397              	.L289:
 3398 0138 0000FFFF 		.word	-65536
 3399 013c 00000000 		.word	I2C_Master_ISR_DMA
 3400 0140 00000000 		.word	I2C_DMAMasterReceiveCplt
 3401 0144 00000000 		.word	I2C_DMAError
 3402 0148 00240080 		.word	-2147474432
 3403 014c 00000000 		.word	I2C_Master_ISR_IT
 3404              		.cfi_endproc
 3405              	.LFE154:
 3407              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3408              		.align	1
 3409              		.global	HAL_I2C_Slave_Transmit_DMA
 3410              		.syntax unified
 3411              		.thumb
 3412              		.thumb_func
 3413              		.fpu fpv5-sp-d16
 3415              	HAL_I2C_Slave_Transmit_DMA:
 3416              	.LFB155:
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3417              		.loc 1 2084 0
 3418              		.cfi_startproc
 3419              		@ args = 0, pretend = 0, frame = 0
 3420              		@ frame_needed = 0, uses_anonymous_args = 0
 3421              	.LVL269:
 3422 0000 38B5     		push	{r3, r4, r5, lr}
 3423              	.LCFI57:
 3424              		.cfi_def_cfa_offset 16
 3425              		.cfi_offset 3, -16
 3426              		.cfi_offset 4, -12
 3427              		.cfi_offset 5, -8
 3428              		.cfi_offset 14, -4
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3429              		.loc 1 2087 0
 3430 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3431 0006 DBB2     		uxtb	r3, r3
 3432 0008 202B     		cmp	r3, #32
 3433 000a 67D1     		bne	.L297
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3434              		.loc 1 2089 0
 3435 000c B2FA82F3 		clz	r3, r2
 3436 0010 5B09     		lsrs	r3, r3, #5
 3437 0012 0029     		cmp	r1, #0
 3438 0014 08BF     		it	eq
 3439 0016 0123     		moveq	r3, #1
 3440 0018 002B     		cmp	r3, #0
 3441 001a 39D1     		bne	.L301
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 187


 3442              		.loc 1 2095 0
 3443 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3444 0020 012B     		cmp	r3, #1
 3445 0022 5ED0     		beq	.L298
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3446              		.loc 1 2095 0 is_stmt 0 discriminator 2
 3447 0024 0123     		movs	r3, #1
 3448 0026 80F84030 		strb	r3, [r0, #64]
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3449              		.loc 1 2097 0 is_stmt 1 discriminator 2
 3450 002a 2123     		movs	r3, #33
 3451 002c 80F84130 		strb	r3, [r0, #65]
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3452              		.loc 1 2098 0 discriminator 2
 3453 0030 2023     		movs	r3, #32
 3454 0032 80F84230 		strb	r3, [r0, #66]
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3455              		.loc 1 2099 0 discriminator 2
 3456 0036 0023     		movs	r3, #0
 3457 0038 4364     		str	r3, [r0, #68]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3458              		.loc 1 2102 0 discriminator 2
 3459 003a 4162     		str	r1, [r0, #36]
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3460              		.loc 1 2103 0 discriminator 2
 3461 003c 4285     		strh	r2, [r0, #42]	@ movhi
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3462              		.loc 1 2104 0 discriminator 2
 3463 003e 438D     		ldrh	r3, [r0, #42]
 3464 0040 0385     		strh	r3, [r0, #40]	@ movhi
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3465              		.loc 1 2105 0 discriminator 2
 3466 0042 294B     		ldr	r3, .L303
 3467 0044 C362     		str	r3, [r0, #44]
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3468              		.loc 1 2106 0 discriminator 2
 3469 0046 294B     		ldr	r3, .L303+4
 3470 0048 4363     		str	r3, [r0, #52]
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3471              		.loc 1 2108 0 discriminator 2
 3472 004a 836B     		ldr	r3, [r0, #56]
 3473 004c 2BB3     		cbz	r3, .L294
 3474 004e 0546     		mov	r5, r0
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3475              		.loc 1 2111 0
 3476 0050 274A     		ldr	r2, .L303+8
 3477              	.LVL270:
 3478 0052 DA63     		str	r2, [r3, #60]
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3479              		.loc 1 2114 0
 3480 0054 836B     		ldr	r3, [r0, #56]
 3481 0056 274A     		ldr	r2, .L303+12
 3482 0058 DA64     		str	r2, [r3, #76]
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3483              		.loc 1 2117 0
 3484 005a 826B     		ldr	r2, [r0, #56]
 3485 005c 0023     		movs	r3, #0
ARM GAS  /tmp/cc1AMB4O.s 			page 188


 3486 005e 1364     		str	r3, [r2, #64]
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3487              		.loc 1 2118 0
 3488 0060 826B     		ldr	r2, [r0, #56]
 3489 0062 1365     		str	r3, [r2, #80]
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3490              		.loc 1 2121 0
 3491 0064 0268     		ldr	r2, [r0]
 3492 0066 038D     		ldrh	r3, [r0, #40]
 3493 0068 2832     		adds	r2, r2, #40
 3494 006a 806B     		ldr	r0, [r0, #56]
 3495              	.LVL271:
 3496 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 3497              	.LVL272:
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3498              		.loc 1 2138 0
 3499 0070 0446     		mov	r4, r0
 3500 0072 00B3     		cbz	r0, .L302
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3501              		.loc 1 2158 0
 3502 0074 2823     		movs	r3, #40
 3503 0076 85F84130 		strb	r3, [r5, #65]
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3504              		.loc 1 2159 0
 3505 007a 0022     		movs	r2, #0
 3506 007c 85F84220 		strb	r2, [r5, #66]
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3507              		.loc 1 2162 0
 3508 0080 6B6C     		ldr	r3, [r5, #68]
 3509 0082 43F01003 		orr	r3, r3, #16
 3510 0086 6B64     		str	r3, [r5, #68]
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3511              		.loc 1 2165 0
 3512 0088 85F84020 		strb	r2, [r5, #64]
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3513              		.loc 1 2167 0
 3514 008c 0124     		movs	r4, #1
 3515 008e 26E0     		b	.L292
 3516              	.LVL273:
 3517              	.L301:
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3518              		.loc 1 2091 0
 3519 0090 4FF40073 		mov	r3, #512
 3520 0094 4364     		str	r3, [r0, #68]
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3521              		.loc 1 2092 0
 3522 0096 0124     		movs	r4, #1
 3523 0098 21E0     		b	.L292
 3524              	.L294:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3525              		.loc 1 2126 0
 3526 009a 2823     		movs	r3, #40
 3527 009c 80F84130 		strb	r3, [r0, #65]
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3528              		.loc 1 2127 0
 3529 00a0 0022     		movs	r2, #0
 3530              	.LVL274:
ARM GAS  /tmp/cc1AMB4O.s 			page 189


 3531 00a2 80F84220 		strb	r2, [r0, #66]
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3532              		.loc 1 2130 0
 3533 00a6 436C     		ldr	r3, [r0, #68]
 3534 00a8 43F08003 		orr	r3, r3, #128
 3535 00ac 4364     		str	r3, [r0, #68]
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3536              		.loc 1 2133 0
 3537 00ae 80F84020 		strb	r2, [r0, #64]
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3538              		.loc 1 2135 0
 3539 00b2 0124     		movs	r4, #1
 3540 00b4 13E0     		b	.L292
 3541              	.LVL275:
 3542              	.L302:
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3543              		.loc 1 2141 0
 3544 00b6 2A68     		ldr	r2, [r5]
 3545 00b8 5368     		ldr	r3, [r2, #4]
 3546 00ba 23F40043 		bic	r3, r3, #32768
 3547 00be 5360     		str	r3, [r2, #4]
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3548              		.loc 1 2144 0
 3549 00c0 0023     		movs	r3, #0
 3550 00c2 85F84030 		strb	r3, [r5, #64]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3551              		.loc 1 2150 0
 3552 00c6 4FF40041 		mov	r1, #32768
 3553 00ca 2846     		mov	r0, r5
 3554              	.LVL276:
 3555 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
 3556              	.LVL277:
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3557              		.loc 1 2153 0
 3558 00d0 2A68     		ldr	r2, [r5]
 3559 00d2 1368     		ldr	r3, [r2]
 3560 00d4 43F48043 		orr	r3, r3, #16384
 3561 00d8 1360     		str	r3, [r2]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3562              		.loc 1 2170 0
 3563 00da 00E0     		b	.L292
 3564              	.LVL278:
 3565              	.L297:
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3566              		.loc 1 2174 0
 3567 00dc 0224     		movs	r4, #2
 3568              	.LVL279:
 3569              	.L292:
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3570              		.loc 1 2176 0
 3571 00de 2046     		mov	r0, r4
 3572 00e0 38BD     		pop	{r3, r4, r5, pc}
 3573              	.LVL280:
 3574              	.L298:
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3575              		.loc 1 2095 0
 3576 00e2 0224     		movs	r4, #2
ARM GAS  /tmp/cc1AMB4O.s 			page 190


 3577 00e4 FBE7     		b	.L292
 3578              	.L304:
 3579 00e6 00BF     		.align	2
 3580              	.L303:
 3581 00e8 0000FFFF 		.word	-65536
 3582 00ec 00000000 		.word	I2C_Slave_ISR_DMA
 3583 00f0 00000000 		.word	I2C_DMASlaveTransmitCplt
 3584 00f4 00000000 		.word	I2C_DMAError
 3585              		.cfi_endproc
 3586              	.LFE155:
 3588              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3589              		.align	1
 3590              		.global	HAL_I2C_Slave_Receive_DMA
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv5-sp-d16
 3596              	HAL_I2C_Slave_Receive_DMA:
 3597              	.LFB156:
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3598              		.loc 1 2187 0
 3599              		.cfi_startproc
 3600              		@ args = 0, pretend = 0, frame = 0
 3601              		@ frame_needed = 0, uses_anonymous_args = 0
 3602              	.LVL281:
 3603 0000 38B5     		push	{r3, r4, r5, lr}
 3604              	.LCFI58:
 3605              		.cfi_def_cfa_offset 16
 3606              		.cfi_offset 3, -16
 3607              		.cfi_offset 4, -12
 3608              		.cfi_offset 5, -8
 3609              		.cfi_offset 14, -4
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3610              		.loc 1 2190 0
 3611 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3612 0006 DBB2     		uxtb	r3, r3
 3613 0008 202B     		cmp	r3, #32
 3614 000a 68D1     		bne	.L311
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3615              		.loc 1 2192 0
 3616 000c B2FA82F3 		clz	r3, r2
 3617 0010 5B09     		lsrs	r3, r3, #5
 3618 0012 0029     		cmp	r1, #0
 3619 0014 08BF     		it	eq
 3620 0016 0123     		moveq	r3, #1
 3621 0018 002B     		cmp	r3, #0
 3622 001a 3AD1     		bne	.L315
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3623              		.loc 1 2198 0
 3624 001c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3625 0020 012B     		cmp	r3, #1
 3626 0022 5FD0     		beq	.L312
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3627              		.loc 1 2198 0 is_stmt 0 discriminator 2
 3628 0024 0123     		movs	r3, #1
 3629 0026 80F84030 		strb	r3, [r0, #64]
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
ARM GAS  /tmp/cc1AMB4O.s 			page 191


 3630              		.loc 1 2200 0 is_stmt 1 discriminator 2
 3631 002a 2223     		movs	r3, #34
 3632 002c 80F84130 		strb	r3, [r0, #65]
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3633              		.loc 1 2201 0 discriminator 2
 3634 0030 2023     		movs	r3, #32
 3635 0032 80F84230 		strb	r3, [r0, #66]
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3636              		.loc 1 2202 0 discriminator 2
 3637 0036 0023     		movs	r3, #0
 3638 0038 4364     		str	r3, [r0, #68]
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3639              		.loc 1 2205 0 discriminator 2
 3640 003a 4162     		str	r1, [r0, #36]
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3641              		.loc 1 2206 0 discriminator 2
 3642 003c 4285     		strh	r2, [r0, #42]	@ movhi
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3643              		.loc 1 2207 0 discriminator 2
 3644 003e 438D     		ldrh	r3, [r0, #42]
 3645 0040 0385     		strh	r3, [r0, #40]	@ movhi
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3646              		.loc 1 2208 0 discriminator 2
 3647 0042 294B     		ldr	r3, .L317
 3648 0044 C362     		str	r3, [r0, #44]
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3649              		.loc 1 2209 0 discriminator 2
 3650 0046 294B     		ldr	r3, .L317+4
 3651 0048 4363     		str	r3, [r0, #52]
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3652              		.loc 1 2211 0 discriminator 2
 3653 004a C36B     		ldr	r3, [r0, #60]
 3654 004c 33B3     		cbz	r3, .L308
 3655 004e 0A46     		mov	r2, r1
 3656              	.LVL282:
 3657 0050 0546     		mov	r5, r0
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3658              		.loc 1 2214 0
 3659 0052 2749     		ldr	r1, .L317+8
 3660              	.LVL283:
 3661 0054 D963     		str	r1, [r3, #60]
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3662              		.loc 1 2217 0
 3663 0056 C36B     		ldr	r3, [r0, #60]
 3664 0058 2649     		ldr	r1, .L317+12
 3665 005a D964     		str	r1, [r3, #76]
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3666              		.loc 1 2220 0
 3667 005c C16B     		ldr	r1, [r0, #60]
 3668 005e 0023     		movs	r3, #0
 3669 0060 0B64     		str	r3, [r1, #64]
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3670              		.loc 1 2221 0
 3671 0062 C16B     		ldr	r1, [r0, #60]
 3672 0064 0B65     		str	r3, [r1, #80]
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3673              		.loc 1 2224 0
ARM GAS  /tmp/cc1AMB4O.s 			page 192


 3674 0066 0168     		ldr	r1, [r0]
 3675 0068 038D     		ldrh	r3, [r0, #40]
 3676 006a 2431     		adds	r1, r1, #36
 3677 006c C06B     		ldr	r0, [r0, #60]
 3678              	.LVL284:
 3679 006e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3680              	.LVL285:
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3681              		.loc 1 2241 0
 3682 0072 0446     		mov	r4, r0
 3683 0074 00B3     		cbz	r0, .L316
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3684              		.loc 1 2261 0
 3685 0076 2823     		movs	r3, #40
 3686 0078 85F84130 		strb	r3, [r5, #65]
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3687              		.loc 1 2262 0
 3688 007c 0022     		movs	r2, #0
 3689 007e 85F84220 		strb	r2, [r5, #66]
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3690              		.loc 1 2265 0
 3691 0082 6B6C     		ldr	r3, [r5, #68]
 3692 0084 43F01003 		orr	r3, r3, #16
 3693 0088 6B64     		str	r3, [r5, #68]
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3694              		.loc 1 2268 0
 3695 008a 85F84020 		strb	r2, [r5, #64]
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3696              		.loc 1 2270 0
 3697 008e 0124     		movs	r4, #1
 3698 0090 26E0     		b	.L306
 3699              	.LVL286:
 3700              	.L315:
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3701              		.loc 1 2194 0
 3702 0092 4FF40073 		mov	r3, #512
 3703 0096 4364     		str	r3, [r0, #68]
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3704              		.loc 1 2195 0
 3705 0098 0124     		movs	r4, #1
 3706 009a 21E0     		b	.L306
 3707              	.L308:
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3708              		.loc 1 2229 0
 3709 009c 2823     		movs	r3, #40
 3710 009e 80F84130 		strb	r3, [r0, #65]
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3711              		.loc 1 2230 0
 3712 00a2 0022     		movs	r2, #0
 3713              	.LVL287:
 3714 00a4 80F84220 		strb	r2, [r0, #66]
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3715              		.loc 1 2233 0
 3716 00a8 436C     		ldr	r3, [r0, #68]
 3717 00aa 43F08003 		orr	r3, r3, #128
 3718 00ae 4364     		str	r3, [r0, #68]
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 193


 3719              		.loc 1 2236 0
 3720 00b0 80F84020 		strb	r2, [r0, #64]
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3721              		.loc 1 2238 0
 3722 00b4 0124     		movs	r4, #1
 3723 00b6 13E0     		b	.L306
 3724              	.LVL288:
 3725              	.L316:
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3726              		.loc 1 2244 0
 3727 00b8 2A68     		ldr	r2, [r5]
 3728 00ba 5368     		ldr	r3, [r2, #4]
 3729 00bc 23F40043 		bic	r3, r3, #32768
 3730 00c0 5360     		str	r3, [r2, #4]
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3731              		.loc 1 2247 0
 3732 00c2 0023     		movs	r3, #0
 3733 00c4 85F84030 		strb	r3, [r5, #64]
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3734              		.loc 1 2253 0
 3735 00c8 4FF40041 		mov	r1, #32768
 3736 00cc 2846     		mov	r0, r5
 3737              	.LVL289:
 3738 00ce FFF7FEFF 		bl	I2C_Enable_IRQ
 3739              	.LVL290:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3740              		.loc 1 2256 0
 3741 00d2 2A68     		ldr	r2, [r5]
 3742 00d4 1368     		ldr	r3, [r2]
 3743 00d6 43F40043 		orr	r3, r3, #32768
 3744 00da 1360     		str	r3, [r2]
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3745              		.loc 1 2273 0
 3746 00dc 00E0     		b	.L306
 3747              	.LVL291:
 3748              	.L311:
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 3749              		.loc 1 2277 0
 3750 00de 0224     		movs	r4, #2
 3751              	.LVL292:
 3752              	.L306:
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 3753              		.loc 1 2279 0
 3754 00e0 2046     		mov	r0, r4
 3755 00e2 38BD     		pop	{r3, r4, r5, pc}
 3756              	.LVL293:
 3757              	.L312:
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3758              		.loc 1 2198 0
 3759 00e4 0224     		movs	r4, #2
 3760 00e6 FBE7     		b	.L306
 3761              	.L318:
 3762              		.align	2
 3763              	.L317:
 3764 00e8 0000FFFF 		.word	-65536
 3765 00ec 00000000 		.word	I2C_Slave_ISR_DMA
 3766 00f0 00000000 		.word	I2C_DMASlaveReceiveCplt
ARM GAS  /tmp/cc1AMB4O.s 			page 194


 3767 00f4 00000000 		.word	I2C_DMAError
 3768              		.cfi_endproc
 3769              	.LFE156:
 3771              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3772              		.align	1
 3773              		.global	HAL_I2C_Mem_Write
 3774              		.syntax unified
 3775              		.thumb
 3776              		.thumb_func
 3777              		.fpu fpv5-sp-d16
 3779              	HAL_I2C_Mem_Write:
 3780              	.LFB157:
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 3781              		.loc 1 2295 0
 3782              		.cfi_startproc
 3783              		@ args = 12, pretend = 0, frame = 0
 3784              		@ frame_needed = 0, uses_anonymous_args = 0
 3785              	.LVL294:
 3786 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3787              	.LCFI59:
 3788              		.cfi_def_cfa_offset 32
 3789              		.cfi_offset 4, -32
 3790              		.cfi_offset 5, -28
 3791              		.cfi_offset 6, -24
 3792              		.cfi_offset 7, -20
 3793              		.cfi_offset 8, -16
 3794              		.cfi_offset 9, -12
 3795              		.cfi_offset 10, -8
 3796              		.cfi_offset 14, -4
 3797 0004 82B0     		sub	sp, sp, #8
 3798              	.LCFI60:
 3799              		.cfi_def_cfa_offset 40
 3800 0006 BDF82C60 		ldrh	r6, [sp, #44]
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 3801              		.loc 1 2301 0
 3802 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 3803 000e EDB2     		uxtb	r5, r5
 3804 0010 202D     		cmp	r5, #32
 3805 0012 40F0BF80 		bne	.L328
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3806              		.loc 1 2303 0
 3807 0016 B6FA86F5 		clz	r5, r6
 3808 001a 6D09     		lsrs	r5, r5, #5
 3809 001c 0A9C     		ldr	r4, [sp, #40]
 3810 001e 002C     		cmp	r4, #0
 3811 0020 08BF     		it	eq
 3812 0022 0125     		moveq	r5, #1
 3813 0024 D5B9     		cbnz	r5, .L335
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3814              		.loc 1 2310 0
 3815 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3816 002a 012C     		cmp	r4, #1
 3817 002c 00F0B780 		beq	.L329
 3818 0030 9846     		mov	r8, r3
 3819 0032 9146     		mov	r9, r2
 3820 0034 0D46     		mov	r5, r1
 3821 0036 0446     		mov	r4, r0
ARM GAS  /tmp/cc1AMB4O.s 			page 195


2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3822              		.loc 1 2310 0 is_stmt 0 discriminator 2
 3823 0038 4FF0010A 		mov	r10, #1
 3824 003c 80F840A0 		strb	r10, [r0, #64]
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3825              		.loc 1 2313 0 is_stmt 1 discriminator 2
 3826 0040 FFF7FEFF 		bl	HAL_GetTick
 3827              	.LVL295:
 3828 0044 0746     		mov	r7, r0
 3829              	.LVL296:
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3830              		.loc 1 2315 0 discriminator 2
 3831 0046 0090     		str	r0, [sp]
 3832 0048 1923     		movs	r3, #25
 3833 004a 5246     		mov	r2, r10
 3834 004c 4FF40041 		mov	r1, #32768
 3835 0050 2046     		mov	r0, r4
 3836              	.LVL297:
 3837 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3838              	.LVL298:
 3839 0056 30B1     		cbz	r0, .L336
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3840              		.loc 1 2317 0
 3841 0058 0123     		movs	r3, #1
 3842 005a 9CE0     		b	.L320
 3843              	.LVL299:
 3844              	.L335:
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 3845              		.loc 1 2305 0
 3846 005c 4FF40073 		mov	r3, #512
 3847              	.LVL300:
 3848 0060 4364     		str	r3, [r0, #68]
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3849              		.loc 1 2306 0
 3850 0062 0123     		movs	r3, #1
 3851 0064 97E0     		b	.L320
 3852              	.LVL301:
 3853              	.L336:
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3854              		.loc 1 2320 0
 3855 0066 2123     		movs	r3, #33
 3856 0068 84F84130 		strb	r3, [r4, #65]
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3857              		.loc 1 2321 0
 3858 006c 4023     		movs	r3, #64
 3859 006e 84F84230 		strb	r3, [r4, #66]
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3860              		.loc 1 2322 0
 3861 0072 0023     		movs	r3, #0
 3862 0074 6364     		str	r3, [r4, #68]
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3863              		.loc 1 2325 0
 3864 0076 0A9A     		ldr	r2, [sp, #40]
 3865 0078 6262     		str	r2, [r4, #36]
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3866              		.loc 1 2326 0
 3867 007a 6685     		strh	r6, [r4, #42]	@ movhi
ARM GAS  /tmp/cc1AMB4O.s 			page 196


2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3868              		.loc 1 2327 0
 3869 007c 6363     		str	r3, [r4, #52]
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3870              		.loc 1 2330 0
 3871 007e 0197     		str	r7, [sp, #4]
 3872 0080 0C9B     		ldr	r3, [sp, #48]
 3873 0082 0093     		str	r3, [sp]
 3874 0084 4346     		mov	r3, r8
 3875 0086 4A46     		mov	r2, r9
 3876 0088 2946     		mov	r1, r5
 3877 008a 2046     		mov	r0, r4
 3878 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3879              	.LVL302:
 3880 0090 70B9     		cbnz	r0, .L337
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 3881              		.loc 1 2338 0
 3882 0092 638D     		ldrh	r3, [r4, #42]
 3883 0094 9BB2     		uxth	r3, r3
 3884 0096 FF2B     		cmp	r3, #255
 3885 0098 0FD9     		bls	.L323
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3886              		.loc 1 2340 0
 3887 009a FF22     		movs	r2, #255
 3888 009c 2285     		strh	r2, [r4, #40]	@ movhi
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3889              		.loc 1 2341 0
 3890 009e 0023     		movs	r3, #0
 3891 00a0 0093     		str	r3, [sp]
 3892 00a2 4FF08073 		mov	r3, #16777216
 3893 00a6 2946     		mov	r1, r5
 3894 00a8 2046     		mov	r0, r4
 3895 00aa FFF7FEFF 		bl	I2C_TransferConfig
 3896              	.LVL303:
 3897 00ae 21E0     		b	.L327
 3898              	.L337:
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 3899              		.loc 1 2333 0
 3900 00b0 0023     		movs	r3, #0
 3901 00b2 84F84030 		strb	r3, [r4, #64]
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3902              		.loc 1 2334 0
 3903 00b6 5346     		mov	r3, r10
 3904 00b8 6DE0     		b	.L320
 3905              	.L323:
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3906              		.loc 1 2345 0
 3907 00ba 628D     		ldrh	r2, [r4, #42]
 3908 00bc 92B2     		uxth	r2, r2
 3909 00be 2285     		strh	r2, [r4, #40]	@ movhi
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 3910              		.loc 1 2346 0
 3911 00c0 0023     		movs	r3, #0
 3912 00c2 0093     		str	r3, [sp]
 3913 00c4 4FF00073 		mov	r3, #33554432
 3914 00c8 D2B2     		uxtb	r2, r2
 3915 00ca 2946     		mov	r1, r5
ARM GAS  /tmp/cc1AMB4O.s 			page 197


 3916 00cc 2046     		mov	r0, r4
 3917 00ce FFF7FEFF 		bl	I2C_TransferConfig
 3918              	.LVL304:
 3919 00d2 0FE0     		b	.L327
 3920              	.L326:
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3921              		.loc 1 2381 0
 3922 00d4 628D     		ldrh	r2, [r4, #42]
 3923 00d6 92B2     		uxth	r2, r2
 3924 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3925              		.loc 1 2382 0
 3926 00da 0023     		movs	r3, #0
 3927 00dc 0093     		str	r3, [sp]
 3928 00de 4FF00073 		mov	r3, #33554432
 3929 00e2 D2B2     		uxtb	r2, r2
 3930 00e4 2946     		mov	r1, r5
 3931 00e6 2046     		mov	r0, r4
 3932 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 3933              	.LVL305:
 3934              	.L325:
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3935              		.loc 1 2386 0
 3936 00ec 638D     		ldrh	r3, [r4, #42]
 3937 00ee 9BB2     		uxth	r3, r3
 3938 00f0 002B     		cmp	r3, #0
 3939 00f2 32D0     		beq	.L338
 3940              	.L327:
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3941              		.loc 1 2352 0
 3942 00f4 3A46     		mov	r2, r7
 3943 00f6 0C99     		ldr	r1, [sp, #48]
 3944 00f8 2046     		mov	r0, r4
 3945 00fa FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3946              	.LVL306:
 3947 00fe 0028     		cmp	r0, #0
 3948 0100 4FD1     		bne	.L331
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3949              		.loc 1 2358 0
 3950 0102 626A     		ldr	r2, [r4, #36]
 3951 0104 2368     		ldr	r3, [r4]
 3952 0106 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3953 0108 9A62     		str	r2, [r3, #40]
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3954              		.loc 1 2361 0
 3955 010a 636A     		ldr	r3, [r4, #36]
 3956 010c 0133     		adds	r3, r3, #1
 3957 010e 6362     		str	r3, [r4, #36]
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 3958              		.loc 1 2363 0
 3959 0110 638D     		ldrh	r3, [r4, #42]
 3960 0112 013B     		subs	r3, r3, #1
 3961 0114 9BB2     		uxth	r3, r3
 3962 0116 6385     		strh	r3, [r4, #42]	@ movhi
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 3963              		.loc 1 2364 0
 3964 0118 238D     		ldrh	r3, [r4, #40]
ARM GAS  /tmp/cc1AMB4O.s 			page 198


 3965 011a 013B     		subs	r3, r3, #1
 3966 011c 9BB2     		uxth	r3, r3
 3967 011e 2385     		strh	r3, [r4, #40]	@ movhi
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3968              		.loc 1 2366 0
 3969 0120 628D     		ldrh	r2, [r4, #42]
 3970 0122 92B2     		uxth	r2, r2
 3971 0124 002A     		cmp	r2, #0
 3972 0126 E1D0     		beq	.L325
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 3973              		.loc 1 2366 0 is_stmt 0 discriminator 1
 3974 0128 002B     		cmp	r3, #0
 3975 012a DFD1     		bne	.L325
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3976              		.loc 1 2369 0 is_stmt 1
 3977 012c 0097     		str	r7, [sp]
 3978 012e 0C9B     		ldr	r3, [sp, #48]
 3979 0130 0022     		movs	r2, #0
 3980 0132 8021     		movs	r1, #128
 3981 0134 2046     		mov	r0, r4
 3982 0136 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3983              	.LVL307:
 3984 013a A0BB     		cbnz	r0, .L332
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 3985              		.loc 1 2374 0
 3986 013c 638D     		ldrh	r3, [r4, #42]
 3987 013e 9BB2     		uxth	r3, r3
 3988 0140 FF2B     		cmp	r3, #255
 3989 0142 C7D9     		bls	.L326
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3990              		.loc 1 2376 0
 3991 0144 FF22     		movs	r2, #255
 3992 0146 2285     		strh	r2, [r4, #40]	@ movhi
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 3993              		.loc 1 2377 0
 3994 0148 0023     		movs	r3, #0
 3995 014a 0093     		str	r3, [sp]
 3996 014c 4FF08073 		mov	r3, #16777216
 3997 0150 2946     		mov	r1, r5
 3998 0152 2046     		mov	r0, r4
 3999 0154 FFF7FEFF 		bl	I2C_TransferConfig
 4000              	.LVL308:
 4001 0158 C8E7     		b	.L325
 4002              	.L338:
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4003              		.loc 1 2390 0
 4004 015a 3A46     		mov	r2, r7
 4005 015c 0C99     		ldr	r1, [sp, #48]
 4006 015e 2046     		mov	r0, r4
 4007 0160 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4008              	.LVL309:
 4009 0164 0346     		mov	r3, r0
 4010 0166 00BB     		cbnz	r0, .L333
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4011              		.loc 1 2396 0
 4012 0168 2268     		ldr	r2, [r4]
 4013 016a 2021     		movs	r1, #32
ARM GAS  /tmp/cc1AMB4O.s 			page 199


 4014 016c D161     		str	r1, [r2, #28]
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4015              		.loc 1 2399 0
 4016 016e 2068     		ldr	r0, [r4]
 4017 0170 4268     		ldr	r2, [r0, #4]
 4018 0172 22F0FF72 		bic	r2, r2, #33423360
 4019 0176 22F48B32 		bic	r2, r2, #71168
 4020 017a 22F4FF72 		bic	r2, r2, #510
 4021 017e 22F00102 		bic	r2, r2, #1
 4022 0182 4260     		str	r2, [r0, #4]
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4023              		.loc 1 2401 0
 4024 0184 84F84110 		strb	r1, [r4, #65]
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4025              		.loc 1 2402 0
 4026 0188 0022     		movs	r2, #0
 4027 018a 84F84220 		strb	r2, [r4, #66]
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4028              		.loc 1 2405 0
 4029 018e 84F84020 		strb	r2, [r4, #64]
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4030              		.loc 1 2407 0
 4031 0192 00E0     		b	.L320
 4032              	.LVL310:
 4033              	.L328:
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4034              		.loc 1 2411 0
 4035 0194 0223     		movs	r3, #2
 4036              	.LVL311:
 4037              	.L320:
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4038              		.loc 1 2413 0
 4039 0196 1846     		mov	r0, r3
 4040 0198 02B0     		add	sp, sp, #8
 4041              	.LCFI61:
 4042              		.cfi_remember_state
 4043              		.cfi_def_cfa_offset 32
 4044              		@ sp needed
 4045 019a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4046              	.LVL312:
 4047              	.L329:
 4048              	.LCFI62:
 4049              		.cfi_restore_state
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4050              		.loc 1 2310 0
 4051 019e 0223     		movs	r3, #2
 4052              	.LVL313:
 4053 01a0 F9E7     		b	.L320
 4054              	.LVL314:
 4055              	.L331:
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4056              		.loc 1 2354 0
 4057 01a2 0123     		movs	r3, #1
 4058 01a4 F7E7     		b	.L320
 4059              	.L332:
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4060              		.loc 1 2371 0
ARM GAS  /tmp/cc1AMB4O.s 			page 200


 4061 01a6 0123     		movs	r3, #1
 4062 01a8 F5E7     		b	.L320
 4063              	.L333:
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4064              		.loc 1 2392 0
 4065 01aa 0123     		movs	r3, #1
 4066 01ac F3E7     		b	.L320
 4067              		.cfi_endproc
 4068              	.LFE157:
 4070              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4071              		.align	1
 4072              		.global	HAL_I2C_Mem_Read
 4073              		.syntax unified
 4074              		.thumb
 4075              		.thumb_func
 4076              		.fpu fpv5-sp-d16
 4078              	HAL_I2C_Mem_Read:
 4079              	.LFB158:
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4080              		.loc 1 2430 0
 4081              		.cfi_startproc
 4082              		@ args = 12, pretend = 0, frame = 0
 4083              		@ frame_needed = 0, uses_anonymous_args = 0
 4084              	.LVL315:
 4085 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4086              	.LCFI63:
 4087              		.cfi_def_cfa_offset 32
 4088              		.cfi_offset 4, -32
 4089              		.cfi_offset 5, -28
 4090              		.cfi_offset 6, -24
 4091              		.cfi_offset 7, -20
 4092              		.cfi_offset 8, -16
 4093              		.cfi_offset 9, -12
 4094              		.cfi_offset 10, -8
 4095              		.cfi_offset 14, -4
 4096 0004 82B0     		sub	sp, sp, #8
 4097              	.LCFI64:
 4098              		.cfi_def_cfa_offset 40
 4099 0006 BDF82C60 		ldrh	r6, [sp, #44]
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4100              		.loc 1 2436 0
 4101 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 4102 000e EDB2     		uxtb	r5, r5
 4103 0010 202D     		cmp	r5, #32
 4104 0012 40F0C180 		bne	.L348
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4105              		.loc 1 2438 0
 4106 0016 B6FA86F5 		clz	r5, r6
 4107 001a 6D09     		lsrs	r5, r5, #5
 4108 001c 0A9C     		ldr	r4, [sp, #40]
 4109 001e 002C     		cmp	r4, #0
 4110 0020 08BF     		it	eq
 4111 0022 0125     		moveq	r5, #1
 4112 0024 D5B9     		cbnz	r5, .L355
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4113              		.loc 1 2445 0
 4114 0026 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
ARM GAS  /tmp/cc1AMB4O.s 			page 201


 4115 002a 012C     		cmp	r4, #1
 4116 002c 00F0B980 		beq	.L349
 4117 0030 9846     		mov	r8, r3
 4118 0032 9146     		mov	r9, r2
 4119 0034 0D46     		mov	r5, r1
 4120 0036 0446     		mov	r4, r0
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4121              		.loc 1 2445 0 is_stmt 0 discriminator 2
 4122 0038 4FF0010A 		mov	r10, #1
 4123 003c 80F840A0 		strb	r10, [r0, #64]
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4124              		.loc 1 2448 0 is_stmt 1 discriminator 2
 4125 0040 FFF7FEFF 		bl	HAL_GetTick
 4126              	.LVL316:
 4127 0044 0746     		mov	r7, r0
 4128              	.LVL317:
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4129              		.loc 1 2450 0 discriminator 2
 4130 0046 0090     		str	r0, [sp]
 4131 0048 1923     		movs	r3, #25
 4132 004a 5246     		mov	r2, r10
 4133 004c 4FF40041 		mov	r1, #32768
 4134 0050 2046     		mov	r0, r4
 4135              	.LVL318:
 4136 0052 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4137              	.LVL319:
 4138 0056 30B1     		cbz	r0, .L356
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4139              		.loc 1 2452 0
 4140 0058 0123     		movs	r3, #1
 4141 005a 9EE0     		b	.L340
 4142              	.LVL320:
 4143              	.L355:
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4144              		.loc 1 2440 0
 4145 005c 4FF40073 		mov	r3, #512
 4146              	.LVL321:
 4147 0060 4364     		str	r3, [r0, #68]
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4148              		.loc 1 2441 0
 4149 0062 0123     		movs	r3, #1
 4150 0064 99E0     		b	.L340
 4151              	.LVL322:
 4152              	.L356:
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4153              		.loc 1 2455 0
 4154 0066 2223     		movs	r3, #34
 4155 0068 84F84130 		strb	r3, [r4, #65]
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4156              		.loc 1 2456 0
 4157 006c 4023     		movs	r3, #64
 4158 006e 84F84230 		strb	r3, [r4, #66]
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4159              		.loc 1 2457 0
 4160 0072 0023     		movs	r3, #0
 4161 0074 6364     		str	r3, [r4, #68]
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount = Size;
ARM GAS  /tmp/cc1AMB4O.s 			page 202


 4162              		.loc 1 2460 0
 4163 0076 0A9A     		ldr	r2, [sp, #40]
 4164 0078 6262     		str	r2, [r4, #36]
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4165              		.loc 1 2461 0
 4166 007a 6685     		strh	r6, [r4, #42]	@ movhi
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4167              		.loc 1 2462 0
 4168 007c 6363     		str	r3, [r4, #52]
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4169              		.loc 1 2465 0
 4170 007e 0197     		str	r7, [sp, #4]
 4171 0080 0C9B     		ldr	r3, [sp, #48]
 4172 0082 0093     		str	r3, [sp]
 4173 0084 4346     		mov	r3, r8
 4174 0086 4A46     		mov	r2, r9
 4175 0088 2946     		mov	r1, r5
 4176 008a 2046     		mov	r0, r4
 4177 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 4178              	.LVL323:
 4179 0090 70B9     		cbnz	r0, .L357
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4180              		.loc 1 2474 0
 4181 0092 638D     		ldrh	r3, [r4, #42]
 4182 0094 9BB2     		uxth	r3, r3
 4183 0096 FF2B     		cmp	r3, #255
 4184 0098 0FD9     		bls	.L343
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4185              		.loc 1 2476 0
 4186 009a FF22     		movs	r2, #255
 4187 009c 2285     		strh	r2, [r4, #40]	@ movhi
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4188              		.loc 1 2477 0
 4189 009e 454B     		ldr	r3, .L359
 4190 00a0 0093     		str	r3, [sp]
 4191 00a2 4FF08073 		mov	r3, #16777216
 4192 00a6 2946     		mov	r1, r5
 4193 00a8 2046     		mov	r0, r4
 4194 00aa FFF7FEFF 		bl	I2C_TransferConfig
 4195              	.LVL324:
 4196 00ae 21E0     		b	.L347
 4197              	.L357:
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4198              		.loc 1 2468 0
 4199 00b0 0023     		movs	r3, #0
 4200 00b2 84F84030 		strb	r3, [r4, #64]
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4201              		.loc 1 2469 0
 4202 00b6 5346     		mov	r3, r10
 4203 00b8 6FE0     		b	.L340
 4204              	.L343:
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4205              		.loc 1 2481 0
 4206 00ba 628D     		ldrh	r2, [r4, #42]
 4207 00bc 92B2     		uxth	r2, r2
 4208 00be 2285     		strh	r2, [r4, #40]	@ movhi
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
ARM GAS  /tmp/cc1AMB4O.s 			page 203


 4209              		.loc 1 2482 0
 4210 00c0 3C4B     		ldr	r3, .L359
 4211 00c2 0093     		str	r3, [sp]
 4212 00c4 4FF00073 		mov	r3, #33554432
 4213 00c8 D2B2     		uxtb	r2, r2
 4214 00ca 2946     		mov	r1, r5
 4215 00cc 2046     		mov	r0, r4
 4216 00ce FFF7FEFF 		bl	I2C_TransferConfig
 4217              	.LVL325:
 4218 00d2 0FE0     		b	.L347
 4219              	.L346:
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4220              		.loc 1 2517 0
 4221 00d4 628D     		ldrh	r2, [r4, #42]
 4222 00d6 92B2     		uxth	r2, r2
 4223 00d8 2285     		strh	r2, [r4, #40]	@ movhi
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4224              		.loc 1 2518 0
 4225 00da 0023     		movs	r3, #0
 4226 00dc 0093     		str	r3, [sp]
 4227 00de 4FF00073 		mov	r3, #33554432
 4228 00e2 D2B2     		uxtb	r2, r2
 4229 00e4 2946     		mov	r1, r5
 4230 00e6 2046     		mov	r0, r4
 4231 00e8 FFF7FEFF 		bl	I2C_TransferConfig
 4232              	.LVL326:
 4233              	.L345:
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4234              		.loc 1 2521 0
 4235 00ec 638D     		ldrh	r3, [r4, #42]
 4236 00ee 9BB2     		uxth	r3, r3
 4237 00f0 002B     		cmp	r3, #0
 4238 00f2 34D0     		beq	.L358
 4239              	.L347:
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4240              		.loc 1 2488 0
 4241 00f4 0097     		str	r7, [sp]
 4242 00f6 0C9B     		ldr	r3, [sp, #48]
 4243 00f8 0022     		movs	r2, #0
 4244 00fa 0421     		movs	r1, #4
 4245 00fc 2046     		mov	r0, r4
 4246 00fe FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4247              	.LVL327:
 4248 0102 0028     		cmp	r0, #0
 4249 0104 4FD1     		bne	.L351
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4250              		.loc 1 2494 0
 4251 0106 2368     		ldr	r3, [r4]
 4252 0108 5A6A     		ldr	r2, [r3, #36]
 4253 010a 636A     		ldr	r3, [r4, #36]
 4254 010c 1A70     		strb	r2, [r3]
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4255              		.loc 1 2497 0
 4256 010e 636A     		ldr	r3, [r4, #36]
 4257 0110 0133     		adds	r3, r3, #1
 4258 0112 6362     		str	r3, [r4, #36]
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
ARM GAS  /tmp/cc1AMB4O.s 			page 204


 4259              		.loc 1 2499 0
 4260 0114 238D     		ldrh	r3, [r4, #40]
 4261 0116 013B     		subs	r3, r3, #1
 4262 0118 9BB2     		uxth	r3, r3
 4263 011a 2385     		strh	r3, [r4, #40]	@ movhi
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4264              		.loc 1 2500 0
 4265 011c 628D     		ldrh	r2, [r4, #42]
 4266 011e 013A     		subs	r2, r2, #1
 4267 0120 92B2     		uxth	r2, r2
 4268 0122 6285     		strh	r2, [r4, #42]	@ movhi
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4269              		.loc 1 2502 0
 4270 0124 628D     		ldrh	r2, [r4, #42]
 4271 0126 92B2     		uxth	r2, r2
 4272 0128 002A     		cmp	r2, #0
 4273 012a DFD0     		beq	.L345
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 4274              		.loc 1 2502 0 is_stmt 0 discriminator 1
 4275 012c 002B     		cmp	r3, #0
 4276 012e DDD1     		bne	.L345
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4277              		.loc 1 2505 0 is_stmt 1
 4278 0130 0097     		str	r7, [sp]
 4279 0132 0C9B     		ldr	r3, [sp, #48]
 4280 0134 0022     		movs	r2, #0
 4281 0136 8021     		movs	r1, #128
 4282 0138 2046     		mov	r0, r4
 4283 013a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4284              	.LVL328:
 4285 013e A0BB     		cbnz	r0, .L352
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 4286              		.loc 1 2510 0
 4287 0140 638D     		ldrh	r3, [r4, #42]
 4288 0142 9BB2     		uxth	r3, r3
 4289 0144 FF2B     		cmp	r3, #255
 4290 0146 C5D9     		bls	.L346
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4291              		.loc 1 2512 0
 4292 0148 FF22     		movs	r2, #255
 4293 014a 2285     		strh	r2, [r4, #40]	@ movhi
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4294              		.loc 1 2513 0
 4295 014c 0023     		movs	r3, #0
 4296 014e 0093     		str	r3, [sp]
 4297 0150 4FF08073 		mov	r3, #16777216
 4298 0154 2946     		mov	r1, r5
 4299 0156 2046     		mov	r0, r4
 4300 0158 FFF7FEFF 		bl	I2C_TransferConfig
 4301              	.LVL329:
 4302 015c C6E7     		b	.L345
 4303              	.L358:
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4304              		.loc 1 2525 0
 4305 015e 3A46     		mov	r2, r7
 4306 0160 0C99     		ldr	r1, [sp, #48]
 4307 0162 2046     		mov	r0, r4
ARM GAS  /tmp/cc1AMB4O.s 			page 205


 4308 0164 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4309              	.LVL330:
 4310 0168 0346     		mov	r3, r0
 4311 016a 00BB     		cbnz	r0, .L353
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4312              		.loc 1 2531 0
 4313 016c 2268     		ldr	r2, [r4]
 4314 016e 2021     		movs	r1, #32
 4315 0170 D161     		str	r1, [r2, #28]
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4316              		.loc 1 2534 0
 4317 0172 2068     		ldr	r0, [r4]
 4318 0174 4268     		ldr	r2, [r0, #4]
 4319 0176 22F0FF72 		bic	r2, r2, #33423360
 4320 017a 22F48B32 		bic	r2, r2, #71168
 4321 017e 22F4FF72 		bic	r2, r2, #510
 4322 0182 22F00102 		bic	r2, r2, #1
 4323 0186 4260     		str	r2, [r0, #4]
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4324              		.loc 1 2536 0
 4325 0188 84F84110 		strb	r1, [r4, #65]
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4326              		.loc 1 2537 0
 4327 018c 0022     		movs	r2, #0
 4328 018e 84F84220 		strb	r2, [r4, #66]
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4329              		.loc 1 2540 0
 4330 0192 84F84020 		strb	r2, [r4, #64]
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4331              		.loc 1 2542 0
 4332 0196 00E0     		b	.L340
 4333              	.LVL331:
 4334              	.L348:
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4335              		.loc 1 2546 0
 4336 0198 0223     		movs	r3, #2
 4337              	.LVL332:
 4338              	.L340:
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4339              		.loc 1 2548 0
 4340 019a 1846     		mov	r0, r3
 4341 019c 02B0     		add	sp, sp, #8
 4342              	.LCFI65:
 4343              		.cfi_remember_state
 4344              		.cfi_def_cfa_offset 32
 4345              		@ sp needed
 4346 019e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4347              	.LVL333:
 4348              	.L349:
 4349              	.LCFI66:
 4350              		.cfi_restore_state
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4351              		.loc 1 2445 0
 4352 01a2 0223     		movs	r3, #2
 4353              	.LVL334:
 4354 01a4 F9E7     		b	.L340
 4355              	.LVL335:
ARM GAS  /tmp/cc1AMB4O.s 			page 206


 4356              	.L351:
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 4357              		.loc 1 2490 0
 4358 01a6 0123     		movs	r3, #1
 4359 01a8 F7E7     		b	.L340
 4360              	.L352:
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 4361              		.loc 1 2507 0
 4362 01aa 0123     		movs	r3, #1
 4363 01ac F5E7     		b	.L340
 4364              	.L353:
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4365              		.loc 1 2527 0
 4366 01ae 0123     		movs	r3, #1
 4367 01b0 F3E7     		b	.L340
 4368              	.L360:
 4369 01b2 00BF     		.align	2
 4370              	.L359:
 4371 01b4 00240080 		.word	-2147474432
 4372              		.cfi_endproc
 4373              	.LFE158:
 4375              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4376              		.align	1
 4377              		.global	HAL_I2C_Mem_Write_IT
 4378              		.syntax unified
 4379              		.thumb
 4380              		.thumb_func
 4381              		.fpu fpv5-sp-d16
 4383              	HAL_I2C_Mem_Write_IT:
 4384              	.LFB159:
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4385              		.loc 1 2563 0
 4386              		.cfi_startproc
 4387              		@ args = 8, pretend = 0, frame = 0
 4388              		@ frame_needed = 0, uses_anonymous_args = 0
 4389              	.LVL336:
 4390 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4391              	.LCFI67:
 4392              		.cfi_def_cfa_offset 24
 4393              		.cfi_offset 4, -24
 4394              		.cfi_offset 5, -20
 4395              		.cfi_offset 6, -16
 4396              		.cfi_offset 7, -12
 4397              		.cfi_offset 8, -8
 4398              		.cfi_offset 14, -4
 4399 0004 82B0     		sub	sp, sp, #8
 4400              	.LCFI68:
 4401              		.cfi_def_cfa_offset 32
 4402 0006 BDF82460 		ldrh	r6, [sp, #36]
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4403              		.loc 1 2570 0
 4404 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4405 000e E4B2     		uxtb	r4, r4
 4406 0010 202C     		cmp	r4, #32
 4407 0012 5BD1     		bne	.L367
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4408              		.loc 1 2572 0
ARM GAS  /tmp/cc1AMB4O.s 			page 207


 4409 0014 B6FA86F4 		clz	r4, r6
 4410 0018 6409     		lsrs	r4, r4, #5
 4411 001a 089D     		ldr	r5, [sp, #32]
 4412 001c 002D     		cmp	r5, #0
 4413 001e 08BF     		it	eq
 4414 0020 0124     		moveq	r4, #1
 4415 0022 002C     		cmp	r4, #0
 4416 0024 38D1     		bne	.L371
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4417              		.loc 1 2578 0
 4418 0026 0468     		ldr	r4, [r0]
 4419 0028 A469     		ldr	r4, [r4, #24]
 4420 002a 14F4004F 		tst	r4, #32768
 4421 002e 52D1     		bne	.L368
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4422              		.loc 1 2584 0
 4423 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4424 0034 012C     		cmp	r4, #1
 4425 0036 50D0     		beq	.L369
 4426 0038 1F46     		mov	r7, r3
 4427 003a 1446     		mov	r4, r2
 4428 003c 8846     		mov	r8, r1
 4429 003e 0546     		mov	r5, r0
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4430              		.loc 1 2584 0 is_stmt 0 discriminator 2
 4431 0040 0123     		movs	r3, #1
 4432              	.LVL337:
 4433 0042 80F84030 		strb	r3, [r0, #64]
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4434              		.loc 1 2587 0 is_stmt 1 discriminator 2
 4435 0046 FFF7FEFF 		bl	HAL_GetTick
 4436              	.LVL338:
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4437              		.loc 1 2589 0 discriminator 2
 4438 004a 2123     		movs	r3, #33
 4439 004c 85F84130 		strb	r3, [r5, #65]
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4440              		.loc 1 2590 0 discriminator 2
 4441 0050 4023     		movs	r3, #64
 4442 0052 85F84230 		strb	r3, [r5, #66]
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4443              		.loc 1 2591 0 discriminator 2
 4444 0056 0023     		movs	r3, #0
 4445 0058 6B64     		str	r3, [r5, #68]
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4446              		.loc 1 2594 0 discriminator 2
 4447 005a 089B     		ldr	r3, [sp, #32]
 4448 005c 6B62     		str	r3, [r5, #36]
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4449              		.loc 1 2595 0 discriminator 2
 4450 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4451              		.loc 1 2596 0 discriminator 2
 4452 0060 1F4B     		ldr	r3, .L372
 4453 0062 EB62     		str	r3, [r5, #44]
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4454              		.loc 1 2597 0 discriminator 2
ARM GAS  /tmp/cc1AMB4O.s 			page 208


 4455 0064 1F4B     		ldr	r3, .L372+4
 4456 0066 6B63     		str	r3, [r5, #52]
2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4457              		.loc 1 2599 0 discriminator 2
 4458 0068 6B8D     		ldrh	r3, [r5, #42]
 4459 006a 9BB2     		uxth	r3, r3
 4460 006c FF2B     		cmp	r3, #255
 4461 006e 18D9     		bls	.L364
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4462              		.loc 1 2601 0
 4463 0070 FF23     		movs	r3, #255
 4464 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4465              	.LVL339:
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4466              		.loc 1 2602 0
 4467 0074 4FF08076 		mov	r6, #16777216
 4468              	.LVL340:
 4469              	.L365:
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4470              		.loc 1 2611 0
 4471 0078 0190     		str	r0, [sp, #4]
 4472 007a 1923     		movs	r3, #25
 4473 007c 0093     		str	r3, [sp]
 4474 007e 3B46     		mov	r3, r7
 4475 0080 2246     		mov	r2, r4
 4476 0082 4146     		mov	r1, r8
 4477 0084 2846     		mov	r0, r5
 4478              	.LVL341:
 4479 0086 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4480              	.LVL342:
 4481 008a 0446     		mov	r4, r0
 4482 008c 70B1     		cbz	r0, .L366
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4483              		.loc 1 2614 0
 4484 008e 0023     		movs	r3, #0
 4485 0090 85F84030 		strb	r3, [r5, #64]
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4486              		.loc 1 2615 0
 4487 0094 0124     		movs	r4, #1
 4488 0096 1AE0     		b	.L362
 4489              	.LVL343:
 4490              	.L371:
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4491              		.loc 1 2574 0
 4492 0098 4FF40073 		mov	r3, #512
 4493              	.LVL344:
 4494 009c 4364     		str	r3, [r0, #68]
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4495              		.loc 1 2575 0
 4496 009e 0124     		movs	r4, #1
 4497 00a0 15E0     		b	.L362
 4498              	.LVL345:
 4499              	.L364:
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4500              		.loc 1 2606 0
 4501 00a2 6B8D     		ldrh	r3, [r5, #42]
 4502 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
ARM GAS  /tmp/cc1AMB4O.s 			page 209


 4503              	.LVL346:
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4504              		.loc 1 2607 0
 4505 00a6 4FF00076 		mov	r6, #33554432
 4506 00aa E5E7     		b	.L365
 4507              	.LVL347:
 4508              	.L366:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4509              		.loc 1 2619 0
 4510 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4511 00b0 0027     		movs	r7, #0
 4512 00b2 0097     		str	r7, [sp]
 4513 00b4 3346     		mov	r3, r6
 4514 00b6 4146     		mov	r1, r8
 4515 00b8 2846     		mov	r0, r5
 4516 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4517              	.LVL348:
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4518              		.loc 1 2622 0
 4519 00be 85F84070 		strb	r7, [r5, #64]
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4520              		.loc 1 2631 0
 4521 00c2 0121     		movs	r1, #1
 4522 00c4 2846     		mov	r0, r5
 4523 00c6 FFF7FEFF 		bl	I2C_Enable_IRQ
 4524              	.LVL349:
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4525              		.loc 1 2633 0
 4526 00ca 00E0     		b	.L362
 4527              	.LVL350:
 4528              	.L367:
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4529              		.loc 1 2637 0
 4530 00cc 0224     		movs	r4, #2
 4531              	.LVL351:
 4532              	.L362:
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4533              		.loc 1 2639 0
 4534 00ce 2046     		mov	r0, r4
 4535 00d0 02B0     		add	sp, sp, #8
 4536              	.LCFI69:
 4537              		.cfi_remember_state
 4538              		.cfi_def_cfa_offset 24
 4539              		@ sp needed
 4540 00d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4541              	.LVL352:
 4542              	.L368:
 4543              	.LCFI70:
 4544              		.cfi_restore_state
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4545              		.loc 1 2580 0
 4546 00d6 0224     		movs	r4, #2
 4547 00d8 F9E7     		b	.L362
 4548              	.L369:
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4549              		.loc 1 2584 0
 4550 00da 0224     		movs	r4, #2
ARM GAS  /tmp/cc1AMB4O.s 			page 210


 4551 00dc F7E7     		b	.L362
 4552              	.L373:
 4553 00de 00BF     		.align	2
 4554              	.L372:
 4555 00e0 0000FFFF 		.word	-65536
 4556 00e4 00000000 		.word	I2C_Master_ISR_IT
 4557              		.cfi_endproc
 4558              	.LFE159:
 4560              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4561              		.align	1
 4562              		.global	HAL_I2C_Mem_Read_IT
 4563              		.syntax unified
 4564              		.thumb
 4565              		.thumb_func
 4566              		.fpu fpv5-sp-d16
 4568              	HAL_I2C_Mem_Read_IT:
 4569              	.LFB160:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4570              		.loc 1 2655 0
 4571              		.cfi_startproc
 4572              		@ args = 8, pretend = 0, frame = 0
 4573              		@ frame_needed = 0, uses_anonymous_args = 0
 4574              	.LVL353:
 4575 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4576              	.LCFI71:
 4577              		.cfi_def_cfa_offset 24
 4578              		.cfi_offset 4, -24
 4579              		.cfi_offset 5, -20
 4580              		.cfi_offset 6, -16
 4581              		.cfi_offset 7, -12
 4582              		.cfi_offset 8, -8
 4583              		.cfi_offset 14, -4
 4584 0004 82B0     		sub	sp, sp, #8
 4585              	.LCFI72:
 4586              		.cfi_def_cfa_offset 32
 4587 0006 BDF82460 		ldrh	r6, [sp, #36]
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4588              		.loc 1 2662 0
 4589 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4590 000e E4B2     		uxtb	r4, r4
 4591 0010 202C     		cmp	r4, #32
 4592 0012 5CD1     		bne	.L380
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4593              		.loc 1 2664 0
 4594 0014 B6FA86F4 		clz	r4, r6
 4595 0018 6409     		lsrs	r4, r4, #5
 4596 001a 089D     		ldr	r5, [sp, #32]
 4597 001c 002D     		cmp	r5, #0
 4598 001e 08BF     		it	eq
 4599 0020 0124     		moveq	r4, #1
 4600 0022 002C     		cmp	r4, #0
 4601 0024 38D1     		bne	.L384
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4602              		.loc 1 2670 0
 4603 0026 0468     		ldr	r4, [r0]
 4604 0028 A469     		ldr	r4, [r4, #24]
 4605 002a 14F4004F 		tst	r4, #32768
ARM GAS  /tmp/cc1AMB4O.s 			page 211


 4606 002e 53D1     		bne	.L381
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4607              		.loc 1 2676 0
 4608 0030 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4609 0034 012C     		cmp	r4, #1
 4610 0036 51D0     		beq	.L382
 4611 0038 1F46     		mov	r7, r3
 4612 003a 1446     		mov	r4, r2
 4613 003c 8846     		mov	r8, r1
 4614 003e 0546     		mov	r5, r0
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4615              		.loc 1 2676 0 is_stmt 0 discriminator 2
 4616 0040 0123     		movs	r3, #1
 4617              	.LVL354:
 4618 0042 80F84030 		strb	r3, [r0, #64]
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4619              		.loc 1 2679 0 is_stmt 1 discriminator 2
 4620 0046 FFF7FEFF 		bl	HAL_GetTick
 4621              	.LVL355:
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4622              		.loc 1 2681 0 discriminator 2
 4623 004a 2223     		movs	r3, #34
 4624 004c 85F84130 		strb	r3, [r5, #65]
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4625              		.loc 1 2682 0 discriminator 2
 4626 0050 4023     		movs	r3, #64
 4627 0052 85F84230 		strb	r3, [r5, #66]
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4628              		.loc 1 2683 0 discriminator 2
 4629 0056 0023     		movs	r3, #0
 4630 0058 6B64     		str	r3, [r5, #68]
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4631              		.loc 1 2686 0 discriminator 2
 4632 005a 089B     		ldr	r3, [sp, #32]
 4633 005c 6B62     		str	r3, [r5, #36]
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4634              		.loc 1 2687 0 discriminator 2
 4635 005e 6E85     		strh	r6, [r5, #42]	@ movhi
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4636              		.loc 1 2688 0 discriminator 2
 4637 0060 1F4B     		ldr	r3, .L385
 4638 0062 EB62     		str	r3, [r5, #44]
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4639              		.loc 1 2689 0 discriminator 2
 4640 0064 1F4B     		ldr	r3, .L385+4
 4641 0066 6B63     		str	r3, [r5, #52]
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4642              		.loc 1 2691 0 discriminator 2
 4643 0068 6B8D     		ldrh	r3, [r5, #42]
 4644 006a 9BB2     		uxth	r3, r3
 4645 006c FF2B     		cmp	r3, #255
 4646 006e 18D9     		bls	.L377
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4647              		.loc 1 2693 0
 4648 0070 FF23     		movs	r3, #255
 4649 0072 2B85     		strh	r3, [r5, #40]	@ movhi
 4650              	.LVL356:
ARM GAS  /tmp/cc1AMB4O.s 			page 212


2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4651              		.loc 1 2694 0
 4652 0074 4FF08076 		mov	r6, #16777216
 4653              	.LVL357:
 4654              	.L378:
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4655              		.loc 1 2703 0
 4656 0078 0190     		str	r0, [sp, #4]
 4657 007a 1923     		movs	r3, #25
 4658 007c 0093     		str	r3, [sp]
 4659 007e 3B46     		mov	r3, r7
 4660 0080 2246     		mov	r2, r4
 4661 0082 4146     		mov	r1, r8
 4662 0084 2846     		mov	r0, r5
 4663              	.LVL358:
 4664 0086 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4665              	.LVL359:
 4666 008a 0446     		mov	r4, r0
 4667 008c 70B1     		cbz	r0, .L379
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4668              		.loc 1 2706 0
 4669 008e 0023     		movs	r3, #0
 4670 0090 85F84030 		strb	r3, [r5, #64]
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4671              		.loc 1 2707 0
 4672 0094 0124     		movs	r4, #1
 4673 0096 1BE0     		b	.L375
 4674              	.LVL360:
 4675              	.L384:
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4676              		.loc 1 2666 0
 4677 0098 4FF40073 		mov	r3, #512
 4678              	.LVL361:
 4679 009c 4364     		str	r3, [r0, #68]
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4680              		.loc 1 2667 0
 4681 009e 0124     		movs	r4, #1
 4682 00a0 16E0     		b	.L375
 4683              	.LVL362:
 4684              	.L377:
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4685              		.loc 1 2698 0
 4686 00a2 6B8D     		ldrh	r3, [r5, #42]
 4687 00a4 2B85     		strh	r3, [r5, #40]	@ movhi
 4688              	.LVL363:
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4689              		.loc 1 2699 0
 4690 00a6 4FF00076 		mov	r6, #33554432
 4691 00aa E5E7     		b	.L378
 4692              	.LVL364:
 4693              	.L379:
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4694              		.loc 1 2711 0
 4695 00ac 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4696 00b0 0D4B     		ldr	r3, .L385+8
 4697 00b2 0093     		str	r3, [sp]
 4698 00b4 3346     		mov	r3, r6
ARM GAS  /tmp/cc1AMB4O.s 			page 213


 4699 00b6 4146     		mov	r1, r8
 4700 00b8 2846     		mov	r0, r5
 4701 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4702              	.LVL365:
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4703              		.loc 1 2714 0
 4704 00be 0023     		movs	r3, #0
 4705 00c0 85F84030 		strb	r3, [r5, #64]
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4706              		.loc 1 2723 0
 4707 00c4 0221     		movs	r1, #2
 4708 00c6 2846     		mov	r0, r5
 4709 00c8 FFF7FEFF 		bl	I2C_Enable_IRQ
 4710              	.LVL366:
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4711              		.loc 1 2725 0
 4712 00cc 00E0     		b	.L375
 4713              	.LVL367:
 4714              	.L380:
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4715              		.loc 1 2729 0
 4716 00ce 0224     		movs	r4, #2
 4717              	.LVL368:
 4718              	.L375:
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** /**
 4719              		.loc 1 2731 0
 4720 00d0 2046     		mov	r0, r4
 4721 00d2 02B0     		add	sp, sp, #8
 4722              	.LCFI73:
 4723              		.cfi_remember_state
 4724              		.cfi_def_cfa_offset 24
 4725              		@ sp needed
 4726 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4727              	.LVL369:
 4728              	.L381:
 4729              	.LCFI74:
 4730              		.cfi_restore_state
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4731              		.loc 1 2672 0
 4732 00d8 0224     		movs	r4, #2
 4733 00da F9E7     		b	.L375
 4734              	.L382:
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4735              		.loc 1 2676 0
 4736 00dc 0224     		movs	r4, #2
 4737 00de F7E7     		b	.L375
 4738              	.L386:
 4739              		.align	2
 4740              	.L385:
 4741 00e0 0000FFFF 		.word	-65536
 4742 00e4 00000000 		.word	I2C_Master_ISR_IT
 4743 00e8 00240080 		.word	-2147474432
 4744              		.cfi_endproc
 4745              	.LFE160:
 4747              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4748              		.align	1
 4749              		.global	HAL_I2C_Mem_Write_DMA
ARM GAS  /tmp/cc1AMB4O.s 			page 214


 4750              		.syntax unified
 4751              		.thumb
 4752              		.thumb_func
 4753              		.fpu fpv5-sp-d16
 4755              	HAL_I2C_Mem_Write_DMA:
 4756              	.LFB161:
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 4757              		.loc 1 2746 0
 4758              		.cfi_startproc
 4759              		@ args = 8, pretend = 0, frame = 0
 4760              		@ frame_needed = 0, uses_anonymous_args = 0
 4761              	.LVL370:
 4762 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4763              	.LCFI75:
 4764              		.cfi_def_cfa_offset 28
 4765              		.cfi_offset 4, -28
 4766              		.cfi_offset 5, -24
 4767              		.cfi_offset 6, -20
 4768              		.cfi_offset 7, -16
 4769              		.cfi_offset 8, -12
 4770              		.cfi_offset 9, -8
 4771              		.cfi_offset 14, -4
 4772 0004 83B0     		sub	sp, sp, #12
 4773              	.LCFI76:
 4774              		.cfi_def_cfa_offset 40
 4775 0006 BDF82C50 		ldrh	r5, [sp, #44]
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 4776              		.loc 1 2754 0
 4777 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4778 000e E4B2     		uxtb	r4, r4
 4779 0010 202C     		cmp	r4, #32
 4780 0012 40F09A80 		bne	.L396
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4781              		.loc 1 2756 0
 4782 0016 B5FA85F4 		clz	r4, r5
 4783 001a 6409     		lsrs	r4, r4, #5
 4784 001c 0A9E     		ldr	r6, [sp, #40]
 4785 001e 002E     		cmp	r6, #0
 4786 0020 08BF     		it	eq
 4787 0022 0124     		moveq	r4, #1
 4788 0024 002C     		cmp	r4, #0
 4789 0026 59D1     		bne	.L401
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4790              		.loc 1 2762 0
 4791 0028 0468     		ldr	r4, [r0]
 4792 002a A469     		ldr	r4, [r4, #24]
 4793 002c 14F4004F 		tst	r4, #32768
 4794 0030 40F09080 		bne	.L397
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4795              		.loc 1 2768 0
 4796 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4797 0038 012C     		cmp	r4, #1
 4798 003a 00F08D80 		beq	.L398
 4799 003e 1F46     		mov	r7, r3
 4800 0040 1646     		mov	r6, r2
 4801 0042 8846     		mov	r8, r1
 4802 0044 0446     		mov	r4, r0
ARM GAS  /tmp/cc1AMB4O.s 			page 215


2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4803              		.loc 1 2768 0 is_stmt 0 discriminator 2
 4804 0046 0123     		movs	r3, #1
 4805              	.LVL371:
 4806 0048 80F84030 		strb	r3, [r0, #64]
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4807              		.loc 1 2771 0 is_stmt 1 discriminator 2
 4808 004c FFF7FEFF 		bl	HAL_GetTick
 4809              	.LVL372:
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4810              		.loc 1 2773 0 discriminator 2
 4811 0050 2123     		movs	r3, #33
 4812 0052 84F84130 		strb	r3, [r4, #65]
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4813              		.loc 1 2774 0 discriminator 2
 4814 0056 4023     		movs	r3, #64
 4815 0058 84F84230 		strb	r3, [r4, #66]
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4816              		.loc 1 2775 0 discriminator 2
 4817 005c 0023     		movs	r3, #0
 4818 005e 6364     		str	r3, [r4, #68]
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4819              		.loc 1 2778 0 discriminator 2
 4820 0060 0A9B     		ldr	r3, [sp, #40]
 4821 0062 6362     		str	r3, [r4, #36]
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4822              		.loc 1 2779 0 discriminator 2
 4823 0064 6585     		strh	r5, [r4, #42]	@ movhi
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4824              		.loc 1 2780 0 discriminator 2
 4825 0066 3D4B     		ldr	r3, .L404
 4826 0068 E362     		str	r3, [r4, #44]
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4827              		.loc 1 2781 0 discriminator 2
 4828 006a 3D4B     		ldr	r3, .L404+4
 4829 006c 6363     		str	r3, [r4, #52]
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4830              		.loc 1 2783 0 discriminator 2
 4831 006e 638D     		ldrh	r3, [r4, #42]
 4832 0070 9BB2     		uxth	r3, r3
 4833 0072 FF2B     		cmp	r3, #255
 4834 0074 37D9     		bls	.L390
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4835              		.loc 1 2785 0
 4836 0076 FF23     		movs	r3, #255
 4837 0078 2385     		strh	r3, [r4, #40]	@ movhi
 4838              	.LVL373:
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4839              		.loc 1 2786 0
 4840 007a 4FF08079 		mov	r9, #16777216
 4841              	.LVL374:
 4842              	.L391:
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4843              		.loc 1 2795 0
 4844 007e 0190     		str	r0, [sp, #4]
 4845 0080 1923     		movs	r3, #25
 4846 0082 0093     		str	r3, [sp]
ARM GAS  /tmp/cc1AMB4O.s 			page 216


 4847 0084 3B46     		mov	r3, r7
 4848 0086 3246     		mov	r2, r6
 4849 0088 4146     		mov	r1, r8
 4850 008a 2046     		mov	r0, r4
 4851              	.LVL375:
 4852 008c FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4853              	.LVL376:
 4854 0090 0028     		cmp	r0, #0
 4855 0092 2DD1     		bne	.L402
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4856              		.loc 1 2803 0
 4857 0094 A36B     		ldr	r3, [r4, #56]
 4858 0096 002B     		cmp	r3, #0
 4859 0098 2FD0     		beq	.L393
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4860              		.loc 1 2806 0
 4861 009a 324A     		ldr	r2, .L404+8
 4862 009c DA63     		str	r2, [r3, #60]
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4863              		.loc 1 2809 0
 4864 009e A36B     		ldr	r3, [r4, #56]
 4865 00a0 314A     		ldr	r2, .L404+12
 4866 00a2 DA64     		str	r2, [r3, #76]
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4867              		.loc 1 2812 0
 4868 00a4 A26B     		ldr	r2, [r4, #56]
 4869 00a6 0023     		movs	r3, #0
 4870 00a8 1364     		str	r3, [r2, #64]
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4871              		.loc 1 2813 0
 4872 00aa A26B     		ldr	r2, [r4, #56]
 4873 00ac 1365     		str	r3, [r2, #80]
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4874              		.loc 1 2816 0
 4875 00ae 2268     		ldr	r2, [r4]
 4876 00b0 238D     		ldrh	r3, [r4, #40]
 4877 00b2 2832     		adds	r2, r2, #40
 4878 00b4 0A99     		ldr	r1, [sp, #40]
 4879 00b6 A06B     		ldr	r0, [r4, #56]
 4880 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4881              	.LVL377:
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 4882              		.loc 1 2833 0
 4883 00bc 0546     		mov	r5, r0
 4884 00be 50B3     		cbz	r0, .L403
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4885              		.loc 1 2857 0
 4886 00c0 2023     		movs	r3, #32
 4887 00c2 84F84130 		strb	r3, [r4, #65]
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4888              		.loc 1 2858 0
 4889 00c6 0022     		movs	r2, #0
 4890 00c8 84F84220 		strb	r2, [r4, #66]
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4891              		.loc 1 2861 0
 4892 00cc 636C     		ldr	r3, [r4, #68]
 4893 00ce 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/cc1AMB4O.s 			page 217


 4894 00d2 6364     		str	r3, [r4, #68]
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4895              		.loc 1 2864 0
 4896 00d4 84F84020 		strb	r2, [r4, #64]
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4897              		.loc 1 2866 0
 4898 00d8 0125     		movs	r5, #1
 4899 00da 37E0     		b	.L388
 4900              	.LVL378:
 4901              	.L401:
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 4902              		.loc 1 2758 0
 4903 00dc 4FF40073 		mov	r3, #512
 4904              	.LVL379:
 4905 00e0 4364     		str	r3, [r0, #68]
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4906              		.loc 1 2759 0
 4907 00e2 0125     		movs	r5, #1
 4908 00e4 32E0     		b	.L388
 4909              	.LVL380:
 4910              	.L390:
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4911              		.loc 1 2790 0
 4912 00e6 638D     		ldrh	r3, [r4, #42]
 4913 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 4914              	.LVL381:
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4915              		.loc 1 2791 0
 4916 00ea 4FF00079 		mov	r9, #33554432
 4917 00ee C6E7     		b	.L391
 4918              	.LVL382:
 4919              	.L402:
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 4920              		.loc 1 2798 0
 4921 00f0 0023     		movs	r3, #0
 4922 00f2 84F84030 		strb	r3, [r4, #64]
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4923              		.loc 1 2799 0
 4924 00f6 0125     		movs	r5, #1
 4925 00f8 28E0     		b	.L388
 4926              	.L393:
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4927              		.loc 1 2821 0
 4928 00fa 2023     		movs	r3, #32
 4929 00fc 84F84130 		strb	r3, [r4, #65]
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4930              		.loc 1 2822 0
 4931 0100 0022     		movs	r2, #0
 4932 0102 84F84220 		strb	r2, [r4, #66]
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4933              		.loc 1 2825 0
 4934 0106 636C     		ldr	r3, [r4, #68]
 4935 0108 43F08003 		orr	r3, r3, #128
 4936 010c 6364     		str	r3, [r4, #68]
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4937              		.loc 1 2828 0
 4938 010e 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/cc1AMB4O.s 			page 218


2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4939              		.loc 1 2830 0
 4940 0112 0125     		movs	r5, #1
 4941 0114 1AE0     		b	.L388
 4942              	.LVL383:
 4943              	.L403:
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4944              		.loc 1 2837 0
 4945 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4946 011a 0026     		movs	r6, #0
 4947 011c 0096     		str	r6, [sp]
 4948 011e 4B46     		mov	r3, r9
 4949 0120 4146     		mov	r1, r8
 4950 0122 2046     		mov	r0, r4
 4951              	.LVL384:
 4952 0124 FFF7FEFF 		bl	I2C_TransferConfig
 4953              	.LVL385:
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4954              		.loc 1 2840 0
 4955 0128 638D     		ldrh	r3, [r4, #42]
 4956 012a 228D     		ldrh	r2, [r4, #40]
 4957 012c 9B1A     		subs	r3, r3, r2
 4958 012e 9BB2     		uxth	r3, r3
 4959 0130 6385     		strh	r3, [r4, #42]	@ movhi
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4960              		.loc 1 2843 0
 4961 0132 84F84060 		strb	r6, [r4, #64]
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4962              		.loc 1 2849 0
 4963 0136 1021     		movs	r1, #16
 4964 0138 2046     		mov	r0, r4
 4965 013a FFF7FEFF 		bl	I2C_Enable_IRQ
 4966              	.LVL386:
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4967              		.loc 1 2852 0
 4968 013e 2268     		ldr	r2, [r4]
 4969 0140 1368     		ldr	r3, [r2]
 4970 0142 43F48043 		orr	r3, r3, #16384
 4971 0146 1360     		str	r3, [r2]
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4972              		.loc 1 2869 0
 4973 0148 00E0     		b	.L388
 4974              	.LVL387:
 4975              	.L396:
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 4976              		.loc 1 2873 0
 4977 014a 0225     		movs	r5, #2
 4978              	.LVL388:
 4979              	.L388:
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4980              		.loc 1 2875 0
 4981 014c 2846     		mov	r0, r5
 4982 014e 03B0     		add	sp, sp, #12
 4983              	.LCFI77:
 4984              		.cfi_remember_state
 4985              		.cfi_def_cfa_offset 28
 4986              		@ sp needed
ARM GAS  /tmp/cc1AMB4O.s 			page 219


 4987 0150 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4988              	.LVL389:
 4989              	.L397:
 4990              	.LCFI78:
 4991              		.cfi_restore_state
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 4992              		.loc 1 2764 0
 4993 0154 0225     		movs	r5, #2
 4994 0156 F9E7     		b	.L388
 4995              	.L398:
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 4996              		.loc 1 2768 0
 4997 0158 0225     		movs	r5, #2
 4998 015a F7E7     		b	.L388
 4999              	.L405:
 5000              		.align	2
 5001              	.L404:
 5002 015c 0000FFFF 		.word	-65536
 5003 0160 00000000 		.word	I2C_Master_ISR_DMA
 5004 0164 00000000 		.word	I2C_DMAMasterTransmitCplt
 5005 0168 00000000 		.word	I2C_DMAError
 5006              		.cfi_endproc
 5007              	.LFE161:
 5009              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 5010              		.align	1
 5011              		.global	HAL_I2C_Mem_Read_DMA
 5012              		.syntax unified
 5013              		.thumb
 5014              		.thumb_func
 5015              		.fpu fpv5-sp-d16
 5017              	HAL_I2C_Mem_Read_DMA:
 5018              	.LFB162:
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5019              		.loc 1 2891 0
 5020              		.cfi_startproc
 5021              		@ args = 8, pretend = 0, frame = 0
 5022              		@ frame_needed = 0, uses_anonymous_args = 0
 5023              	.LVL390:
 5024 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5025              	.LCFI79:
 5026              		.cfi_def_cfa_offset 28
 5027              		.cfi_offset 4, -28
 5028              		.cfi_offset 5, -24
 5029              		.cfi_offset 6, -20
 5030              		.cfi_offset 7, -16
 5031              		.cfi_offset 8, -12
 5032              		.cfi_offset 9, -8
 5033              		.cfi_offset 14, -4
 5034 0004 83B0     		sub	sp, sp, #12
 5035              	.LCFI80:
 5036              		.cfi_def_cfa_offset 40
 5037 0006 BDF82C50 		ldrh	r5, [sp, #44]
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5038              		.loc 1 2899 0
 5039 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5040 000e E4B2     		uxtb	r4, r4
 5041 0010 202C     		cmp	r4, #32
ARM GAS  /tmp/cc1AMB4O.s 			page 220


 5042 0012 40F09B80 		bne	.L415
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5043              		.loc 1 2901 0
 5044 0016 B5FA85F4 		clz	r4, r5
 5045 001a 6409     		lsrs	r4, r4, #5
 5046 001c 0A9E     		ldr	r6, [sp, #40]
 5047 001e 002E     		cmp	r6, #0
 5048 0020 08BF     		it	eq
 5049 0022 0124     		moveq	r4, #1
 5050 0024 002C     		cmp	r4, #0
 5051 0026 59D1     		bne	.L420
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5052              		.loc 1 2907 0
 5053 0028 0468     		ldr	r4, [r0]
 5054 002a A469     		ldr	r4, [r4, #24]
 5055 002c 14F4004F 		tst	r4, #32768
 5056 0030 40F09180 		bne	.L416
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5057              		.loc 1 2913 0
 5058 0034 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5059 0038 012C     		cmp	r4, #1
 5060 003a 00F08E80 		beq	.L417
 5061 003e 1F46     		mov	r7, r3
 5062 0040 1646     		mov	r6, r2
 5063 0042 8846     		mov	r8, r1
 5064 0044 0446     		mov	r4, r0
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5065              		.loc 1 2913 0 is_stmt 0 discriminator 2
 5066 0046 0123     		movs	r3, #1
 5067              	.LVL391:
 5068 0048 80F84030 		strb	r3, [r0, #64]
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5069              		.loc 1 2916 0 is_stmt 1 discriminator 2
 5070 004c FFF7FEFF 		bl	HAL_GetTick
 5071              	.LVL392:
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5072              		.loc 1 2918 0 discriminator 2
 5073 0050 2223     		movs	r3, #34
 5074 0052 84F84130 		strb	r3, [r4, #65]
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5075              		.loc 1 2919 0 discriminator 2
 5076 0056 4023     		movs	r3, #64
 5077 0058 84F84230 		strb	r3, [r4, #66]
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5078              		.loc 1 2920 0 discriminator 2
 5079 005c 0023     		movs	r3, #0
 5080 005e 6364     		str	r3, [r4, #68]
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5081              		.loc 1 2923 0 discriminator 2
 5082 0060 0A9B     		ldr	r3, [sp, #40]
 5083 0062 6362     		str	r3, [r4, #36]
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5084              		.loc 1 2924 0 discriminator 2
 5085 0064 6585     		strh	r5, [r4, #42]	@ movhi
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5086              		.loc 1 2925 0 discriminator 2
 5087 0066 3E4B     		ldr	r3, .L423
ARM GAS  /tmp/cc1AMB4O.s 			page 221


 5088 0068 E362     		str	r3, [r4, #44]
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5089              		.loc 1 2926 0 discriminator 2
 5090 006a 3E4B     		ldr	r3, .L423+4
 5091 006c 6363     		str	r3, [r4, #52]
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5092              		.loc 1 2928 0 discriminator 2
 5093 006e 638D     		ldrh	r3, [r4, #42]
 5094 0070 9BB2     		uxth	r3, r3
 5095 0072 FF2B     		cmp	r3, #255
 5096 0074 37D9     		bls	.L409
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5097              		.loc 1 2930 0
 5098 0076 FF23     		movs	r3, #255
 5099 0078 2385     		strh	r3, [r4, #40]	@ movhi
 5100              	.LVL393:
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5101              		.loc 1 2931 0
 5102 007a 4FF08079 		mov	r9, #16777216
 5103              	.LVL394:
 5104              	.L410:
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5105              		.loc 1 2940 0
 5106 007e 0190     		str	r0, [sp, #4]
 5107 0080 1923     		movs	r3, #25
 5108 0082 0093     		str	r3, [sp]
 5109 0084 3B46     		mov	r3, r7
 5110 0086 3246     		mov	r2, r6
 5111 0088 4146     		mov	r1, r8
 5112 008a 2046     		mov	r0, r4
 5113              	.LVL395:
 5114 008c FFF7FEFF 		bl	I2C_RequestMemoryRead
 5115              	.LVL396:
 5116 0090 0028     		cmp	r0, #0
 5117 0092 2DD1     		bne	.L421
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5118              		.loc 1 2947 0
 5119 0094 E36B     		ldr	r3, [r4, #60]
 5120 0096 002B     		cmp	r3, #0
 5121 0098 2FD0     		beq	.L412
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5122              		.loc 1 2950 0
 5123 009a 334A     		ldr	r2, .L423+8
 5124 009c DA63     		str	r2, [r3, #60]
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5125              		.loc 1 2953 0
 5126 009e E36B     		ldr	r3, [r4, #60]
 5127 00a0 324A     		ldr	r2, .L423+12
 5128 00a2 DA64     		str	r2, [r3, #76]
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5129              		.loc 1 2956 0
 5130 00a4 E26B     		ldr	r2, [r4, #60]
 5131 00a6 0023     		movs	r3, #0
 5132 00a8 1364     		str	r3, [r2, #64]
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5133              		.loc 1 2957 0
 5134 00aa E26B     		ldr	r2, [r4, #60]
ARM GAS  /tmp/cc1AMB4O.s 			page 222


 5135 00ac 1365     		str	r3, [r2, #80]
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5136              		.loc 1 2960 0
 5137 00ae 2168     		ldr	r1, [r4]
 5138 00b0 238D     		ldrh	r3, [r4, #40]
 5139 00b2 0A9A     		ldr	r2, [sp, #40]
 5140 00b4 2431     		adds	r1, r1, #36
 5141 00b6 E06B     		ldr	r0, [r4, #60]
 5142 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5143              	.LVL397:
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5144              		.loc 1 2977 0
 5145 00bc 0546     		mov	r5, r0
 5146 00be 50B3     		cbz	r0, .L422
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5147              		.loc 1 3000 0
 5148 00c0 2023     		movs	r3, #32
 5149 00c2 84F84130 		strb	r3, [r4, #65]
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5150              		.loc 1 3001 0
 5151 00c6 0022     		movs	r2, #0
 5152 00c8 84F84220 		strb	r2, [r4, #66]
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5153              		.loc 1 3004 0
 5154 00cc 636C     		ldr	r3, [r4, #68]
 5155 00ce 43F01003 		orr	r3, r3, #16
 5156 00d2 6364     		str	r3, [r4, #68]
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5157              		.loc 1 3007 0
 5158 00d4 84F84020 		strb	r2, [r4, #64]
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5159              		.loc 1 3009 0
 5160 00d8 0125     		movs	r5, #1
 5161 00da 38E0     		b	.L407
 5162              	.LVL398:
 5163              	.L420:
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 5164              		.loc 1 2903 0
 5165 00dc 4FF40073 		mov	r3, #512
 5166              	.LVL399:
 5167 00e0 4364     		str	r3, [r0, #68]
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5168              		.loc 1 2904 0
 5169 00e2 0125     		movs	r5, #1
 5170 00e4 33E0     		b	.L407
 5171              	.LVL400:
 5172              	.L409:
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5173              		.loc 1 2935 0
 5174 00e6 638D     		ldrh	r3, [r4, #42]
 5175 00e8 2385     		strh	r3, [r4, #40]	@ movhi
 5176              	.LVL401:
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5177              		.loc 1 2936 0
 5178 00ea 4FF00079 		mov	r9, #33554432
 5179 00ee C6E7     		b	.L410
 5180              	.LVL402:
ARM GAS  /tmp/cc1AMB4O.s 			page 223


 5181              	.L421:
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return HAL_ERROR;
 5182              		.loc 1 2943 0
 5183 00f0 0023     		movs	r3, #0
 5184 00f2 84F84030 		strb	r3, [r4, #64]
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5185              		.loc 1 2944 0
 5186 00f6 0125     		movs	r5, #1
 5187 00f8 29E0     		b	.L407
 5188              	.L412:
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5189              		.loc 1 2965 0
 5190 00fa 2023     		movs	r3, #32
 5191 00fc 84F84130 		strb	r3, [r4, #65]
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5192              		.loc 1 2966 0
 5193 0100 0022     		movs	r2, #0
 5194 0102 84F84220 		strb	r2, [r4, #66]
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5195              		.loc 1 2969 0
 5196 0106 636C     		ldr	r3, [r4, #68]
 5197 0108 43F08003 		orr	r3, r3, #128
 5198 010c 6364     		str	r3, [r4, #68]
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5199              		.loc 1 2972 0
 5200 010e 84F84020 		strb	r2, [r4, #64]
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5201              		.loc 1 2974 0
 5202 0112 0125     		movs	r5, #1
 5203 0114 1BE0     		b	.L407
 5204              	.LVL403:
 5205              	.L422:
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5206              		.loc 1 2980 0
 5207 0116 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5208 011a 154B     		ldr	r3, .L423+16
 5209 011c 0093     		str	r3, [sp]
 5210 011e 4B46     		mov	r3, r9
 5211 0120 4146     		mov	r1, r8
 5212 0122 2046     		mov	r0, r4
 5213              	.LVL404:
 5214 0124 FFF7FEFF 		bl	I2C_TransferConfig
 5215              	.LVL405:
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5216              		.loc 1 2983 0
 5217 0128 638D     		ldrh	r3, [r4, #42]
 5218 012a 228D     		ldrh	r2, [r4, #40]
 5219 012c 9B1A     		subs	r3, r3, r2
 5220 012e 9BB2     		uxth	r3, r3
 5221 0130 6385     		strh	r3, [r4, #42]	@ movhi
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5222              		.loc 1 2986 0
 5223 0132 0023     		movs	r3, #0
 5224 0134 84F84030 		strb	r3, [r4, #64]
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5225              		.loc 1 2992 0
 5226 0138 1021     		movs	r1, #16
ARM GAS  /tmp/cc1AMB4O.s 			page 224


 5227 013a 2046     		mov	r0, r4
 5228 013c FFF7FEFF 		bl	I2C_Enable_IRQ
 5229              	.LVL406:
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5230              		.loc 1 2995 0
 5231 0140 2268     		ldr	r2, [r4]
 5232 0142 1368     		ldr	r3, [r2]
 5233 0144 43F40043 		orr	r3, r3, #32768
 5234 0148 1360     		str	r3, [r2]
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5235              		.loc 1 3012 0
 5236 014a 00E0     		b	.L407
 5237              	.LVL407:
 5238              	.L415:
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5239              		.loc 1 3016 0
 5240 014c 0225     		movs	r5, #2
 5241              	.LVL408:
 5242              	.L407:
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5243              		.loc 1 3018 0
 5244 014e 2846     		mov	r0, r5
 5245 0150 03B0     		add	sp, sp, #12
 5246              	.LCFI81:
 5247              		.cfi_remember_state
 5248              		.cfi_def_cfa_offset 28
 5249              		@ sp needed
 5250 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5251              	.LVL409:
 5252              	.L416:
 5253              	.LCFI82:
 5254              		.cfi_restore_state
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5255              		.loc 1 2909 0
 5256 0156 0225     		movs	r5, #2
 5257 0158 F9E7     		b	.L407
 5258              	.L417:
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5259              		.loc 1 2913 0
 5260 015a 0225     		movs	r5, #2
 5261 015c F7E7     		b	.L407
 5262              	.L424:
 5263 015e 00BF     		.align	2
 5264              	.L423:
 5265 0160 0000FFFF 		.word	-65536
 5266 0164 00000000 		.word	I2C_Master_ISR_DMA
 5267 0168 00000000 		.word	I2C_DMAMasterReceiveCplt
 5268 016c 00000000 		.word	I2C_DMAError
 5269 0170 00240080 		.word	-2147474432
 5270              		.cfi_endproc
 5271              	.LFE162:
 5273              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5274              		.align	1
 5275              		.global	HAL_I2C_IsDeviceReady
 5276              		.syntax unified
 5277              		.thumb
 5278              		.thumb_func
ARM GAS  /tmp/cc1AMB4O.s 			page 225


 5279              		.fpu fpv5-sp-d16
 5281              	HAL_I2C_IsDeviceReady:
 5282              	.LFB163:
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tickstart;
 5283              		.loc 1 3032 0
 5284              		.cfi_startproc
 5285              		@ args = 0, pretend = 0, frame = 8
 5286              		@ frame_needed = 0, uses_anonymous_args = 0
 5287              	.LVL410:
 5288 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5289              	.LCFI83:
 5290              		.cfi_def_cfa_offset 28
 5291              		.cfi_offset 4, -28
 5292              		.cfi_offset 5, -24
 5293              		.cfi_offset 6, -20
 5294              		.cfi_offset 7, -16
 5295              		.cfi_offset 8, -12
 5296              		.cfi_offset 9, -8
 5297              		.cfi_offset 14, -4
 5298 0004 85B0     		sub	sp, sp, #20
 5299              	.LCFI84:
 5300              		.cfi_def_cfa_offset 48
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5301              		.loc 1 3035 0
 5302 0006 0024     		movs	r4, #0
 5303 0008 0394     		str	r4, [sp, #12]
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5304              		.loc 1 3040 0
 5305 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5306 000e E4B2     		uxtb	r4, r4
 5307 0010 202C     		cmp	r4, #32
 5308 0012 40F09B80 		bne	.L436
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5309              		.loc 1 3042 0
 5310 0016 0468     		ldr	r4, [r0]
 5311 0018 A469     		ldr	r4, [r4, #24]
 5312 001a 14F4004F 		tst	r4, #32768
 5313 001e 40F09A80 		bne	.L437
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5314              		.loc 1 3048 0
 5315 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5316 0026 012C     		cmp	r4, #1
 5317 0028 00F09780 		beq	.L438
 5318 002c 1E46     		mov	r6, r3
 5319 002e 9146     		mov	r9, r2
 5320 0030 8846     		mov	r8, r1
 5321 0032 0546     		mov	r5, r0
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5322              		.loc 1 3048 0 is_stmt 0 discriminator 2
 5323 0034 0123     		movs	r3, #1
 5324              	.LVL411:
 5325 0036 80F84030 		strb	r3, [r0, #64]
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5326              		.loc 1 3050 0 is_stmt 1 discriminator 2
 5327 003a 2423     		movs	r3, #36
 5328 003c 80F84130 		strb	r3, [r0, #65]
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 226


 5329              		.loc 1 3051 0 discriminator 2
 5330 0040 0023     		movs	r3, #0
 5331 0042 4364     		str	r3, [r0, #68]
 5332              	.LVL412:
 5333              	.L435:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5334              		.loc 1 3056 0
 5335 0044 EB68     		ldr	r3, [r5, #12]
 5336 0046 012B     		cmp	r3, #1
 5337 0048 10D0     		beq	.L443
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5338              		.loc 1 3056 0 is_stmt 0 discriminator 2
 5339 004a C8F30903 		ubfx	r3, r8, #0, #10
 5340 004e 43F42053 		orr	r3, r3, #10240
 5341              	.L428:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5342              		.loc 1 3056 0 discriminator 4
 5343 0052 2A68     		ldr	r2, [r5]
 5344 0054 5360     		str	r3, [r2, #4]
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5345              		.loc 1 3060 0 is_stmt 1 discriminator 4
 5346 0056 FFF7FEFF 		bl	HAL_GetTick
 5347              	.LVL413:
 5348 005a 0746     		mov	r7, r0
 5349              	.LVL414:
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5350              		.loc 1 3062 0 discriminator 4
 5351 005c 2A68     		ldr	r2, [r5]
 5352 005e 9369     		ldr	r3, [r2, #24]
 5353 0060 C3F34013 		ubfx	r3, r3, #5, #1
 5354              	.LVL415:
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5355              		.loc 1 3063 0 discriminator 4
 5356 0064 9469     		ldr	r4, [r2, #24]
 5357 0066 C4F30014 		ubfx	r4, r4, #4, #1
 5358              	.LVL416:
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5359              		.loc 1 3065 0 discriminator 4
 5360 006a 0BE0     		b	.L429
 5361              	.LVL417:
 5362              	.L443:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5363              		.loc 1 3056 0 discriminator 1
 5364 006c C8F30902 		ubfx	r2, r8, #0, #10
 5365 0070 3E4B     		ldr	r3, .L447
 5366 0072 1343     		orrs	r3, r3, r2
 5367 0074 EDE7     		b	.L428
 5368              	.LVL418:
 5369              	.L430:
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5370              		.loc 1 3084 0
 5371 0076 2A68     		ldr	r2, [r5]
 5372 0078 9369     		ldr	r3, [r2, #24]
 5373 007a C3F34013 		ubfx	r3, r3, #5, #1
 5374              	.LVL419:
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5375              		.loc 1 3085 0
ARM GAS  /tmp/cc1AMB4O.s 			page 227


 5376 007e 9469     		ldr	r4, [r2, #24]
 5377              	.LVL420:
 5378 0080 C4F30014 		ubfx	r4, r4, #4, #1
 5379              	.LVL421:
 5380              	.L429:
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5381              		.loc 1 3065 0
 5382 0084 2343     		orrs	r3, r3, r4
 5383              	.LVL422:
 5384 0086 15D1     		bne	.L444
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5385              		.loc 1 3067 0
 5386 0088 B6F1FF3F 		cmp	r6, #-1
 5387 008c F3D0     		beq	.L430
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5388              		.loc 1 3069 0
 5389 008e FFF7FEFF 		bl	HAL_GetTick
 5390              	.LVL423:
 5391 0092 C01B     		subs	r0, r0, r7
 5392 0094 B042     		cmp	r0, r6
 5393 0096 01D8     		bhi	.L431
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 5394              		.loc 1 3069 0 is_stmt 0 discriminator 1
 5395 0098 002E     		cmp	r6, #0
 5396 009a ECD1     		bne	.L430
 5397              	.L431:
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5398              		.loc 1 3072 0 is_stmt 1
 5399 009c 2023     		movs	r3, #32
 5400 009e 85F84130 		strb	r3, [r5, #65]
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5401              		.loc 1 3075 0
 5402 00a2 6B6C     		ldr	r3, [r5, #68]
 5403 00a4 43F02003 		orr	r3, r3, #32
 5404 00a8 6B64     		str	r3, [r5, #68]
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5405              		.loc 1 3078 0
 5406 00aa 0023     		movs	r3, #0
 5407 00ac 85F84030 		strb	r3, [r5, #64]
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 5408              		.loc 1 3080 0
 5409 00b0 0123     		movs	r3, #1
 5410 00b2 4CE0     		b	.L426
 5411              	.L444:
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5412              		.loc 1 3089 0
 5413 00b4 2B68     		ldr	r3, [r5]
 5414 00b6 9B69     		ldr	r3, [r3, #24]
 5415 00b8 13F0100F 		tst	r3, #16
 5416 00bc 23D0     		beq	.L445
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5417              		.loc 1 3111 0
 5418 00be 0097     		str	r7, [sp]
 5419 00c0 3346     		mov	r3, r6
 5420 00c2 0022     		movs	r2, #0
 5421 00c4 2021     		movs	r1, #32
 5422 00c6 2846     		mov	r0, r5
ARM GAS  /tmp/cc1AMB4O.s 			page 228


 5423 00c8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5424              	.LVL424:
 5425 00cc 0028     		cmp	r0, #0
 5426 00ce 48D1     		bne	.L440
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5427              		.loc 1 3117 0
 5428 00d0 2B68     		ldr	r3, [r5]
 5429 00d2 1022     		movs	r2, #16
 5430 00d4 DA61     		str	r2, [r3, #28]
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5431              		.loc 1 3120 0
 5432 00d6 2B68     		ldr	r3, [r5]
 5433 00d8 2022     		movs	r2, #32
 5434 00da DA61     		str	r2, [r3, #28]
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5435              		.loc 1 3124 0
 5436 00dc 039B     		ldr	r3, [sp, #12]
 5437 00de 4B45     		cmp	r3, r9
 5438 00e0 23D0     		beq	.L446
 5439              	.L434:
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
 5440              		.loc 1 3140 0
 5441 00e2 039B     		ldr	r3, [sp, #12]
 5442 00e4 0133     		adds	r3, r3, #1
 5443 00e6 0393     		str	r3, [sp, #12]
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5444              		.loc 1 3141 0
 5445 00e8 039B     		ldr	r3, [sp, #12]
 5446 00ea 4B45     		cmp	r3, r9
 5447 00ec AAD3     		bcc	.L435
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5448              		.loc 1 3144 0
 5449 00ee 2023     		movs	r3, #32
 5450 00f0 85F84130 		strb	r3, [r5, #65]
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5451              		.loc 1 3147 0
 5452 00f4 6B6C     		ldr	r3, [r5, #68]
 5453 00f6 43F02003 		orr	r3, r3, #32
 5454 00fa 6B64     		str	r3, [r5, #68]
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5455              		.loc 1 3150 0
 5456 00fc 0023     		movs	r3, #0
 5457 00fe 85F84030 		strb	r3, [r5, #64]
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5458              		.loc 1 3152 0
 5459 0102 0123     		movs	r3, #1
 5460 0104 23E0     		b	.L426
 5461              	.L445:
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5462              		.loc 1 3092 0
 5463 0106 0097     		str	r7, [sp]
 5464 0108 3346     		mov	r3, r6
 5465 010a 0022     		movs	r2, #0
 5466 010c 2021     		movs	r1, #32
 5467 010e 2846     		mov	r0, r5
 5468 0110 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5469              	.LVL425:
ARM GAS  /tmp/cc1AMB4O.s 			page 229


 5470 0114 0346     		mov	r3, r0
 5471 0116 10BB     		cbnz	r0, .L439
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5472              		.loc 1 3098 0
 5473 0118 2968     		ldr	r1, [r5]
 5474 011a 2022     		movs	r2, #32
 5475 011c CA61     		str	r2, [r1, #28]
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5476              		.loc 1 3101 0
 5477 011e 85F84120 		strb	r2, [r5, #65]
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5478              		.loc 1 3104 0
 5479 0122 0022     		movs	r2, #0
 5480 0124 85F84020 		strb	r2, [r5, #64]
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5481              		.loc 1 3106 0
 5482 0128 11E0     		b	.L426
 5483              	.L446:
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5484              		.loc 1 3127 0
 5485 012a 2A68     		ldr	r2, [r5]
 5486 012c 5368     		ldr	r3, [r2, #4]
 5487 012e 43F48043 		orr	r3, r3, #16384
 5488 0132 5360     		str	r3, [r2, #4]
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 5489              		.loc 1 3130 0
 5490 0134 0097     		str	r7, [sp]
 5491 0136 3346     		mov	r3, r6
 5492 0138 0022     		movs	r2, #0
 5493 013a 2021     		movs	r1, #32
 5494 013c 2846     		mov	r0, r5
 5495 013e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5496              	.LVL426:
 5497 0142 80B9     		cbnz	r0, .L441
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5498              		.loc 1 3136 0
 5499 0144 2B68     		ldr	r3, [r5]
 5500 0146 2022     		movs	r2, #32
 5501 0148 DA61     		str	r2, [r3, #28]
 5502 014a CAE7     		b	.L434
 5503              	.LVL427:
 5504              	.L436:
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5505              		.loc 1 3156 0
 5506 014c 0223     		movs	r3, #2
 5507              	.LVL428:
 5508              	.L426:
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5509              		.loc 1 3158 0
 5510 014e 1846     		mov	r0, r3
 5511 0150 05B0     		add	sp, sp, #20
 5512              	.LCFI85:
 5513              		.cfi_remember_state
 5514              		.cfi_def_cfa_offset 28
 5515              		@ sp needed
 5516 0152 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5517              	.LVL429:
ARM GAS  /tmp/cc1AMB4O.s 			page 230


 5518              	.L437:
 5519              	.LCFI86:
 5520              		.cfi_restore_state
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5521              		.loc 1 3044 0
 5522 0156 0223     		movs	r3, #2
 5523              	.LVL430:
 5524 0158 F9E7     		b	.L426
 5525              	.LVL431:
 5526              	.L438:
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5527              		.loc 1 3048 0
 5528 015a 0223     		movs	r3, #2
 5529              	.LVL432:
 5530 015c F7E7     		b	.L426
 5531              	.LVL433:
 5532              	.L439:
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5533              		.loc 1 3094 0
 5534 015e 0123     		movs	r3, #1
 5535 0160 F5E7     		b	.L426
 5536              	.L440:
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5537              		.loc 1 3113 0
 5538 0162 0123     		movs	r3, #1
 5539 0164 F3E7     		b	.L426
 5540              	.L441:
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 5541              		.loc 1 3132 0
 5542 0166 0123     		movs	r3, #1
 5543 0168 F1E7     		b	.L426
 5544              	.L448:
 5545 016a 00BF     		.align	2
 5546              	.L447:
 5547 016c 00200002 		.word	33562624
 5548              		.cfi_endproc
 5549              	.LFE163:
 5551              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5552              		.align	1
 5553              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5554              		.syntax unified
 5555              		.thumb
 5556              		.thumb_func
 5557              		.fpu fpv5-sp-d16
 5559              	HAL_I2C_Master_Seq_Transmit_IT:
 5560              	.LFB164:
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5561              		.loc 1 3174 0
 5562              		.cfi_startproc
 5563              		@ args = 4, pretend = 0, frame = 0
 5564              		@ frame_needed = 0, uses_anonymous_args = 0
 5565              	.LVL434:
 5566 0000 70B5     		push	{r4, r5, r6, lr}
 5567              	.LCFI87:
 5568              		.cfi_def_cfa_offset 16
 5569              		.cfi_offset 4, -16
 5570              		.cfi_offset 5, -12
ARM GAS  /tmp/cc1AMB4O.s 			page 231


 5571              		.cfi_offset 6, -8
 5572              		.cfi_offset 14, -4
 5573 0002 82B0     		sub	sp, sp, #8
 5574              	.LCFI88:
 5575              		.cfi_def_cfa_offset 24
 5576              	.LVL435:
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5577              		.loc 1 3181 0
 5578 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5579 0008 E4B2     		uxtb	r4, r4
 5580 000a 202C     		cmp	r4, #32
 5581 000c 49D1     		bne	.L455
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5582              		.loc 1 3184 0
 5583 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5584 0012 012C     		cmp	r4, #1
 5585 0014 48D0     		beq	.L456
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5586              		.loc 1 3184 0 is_stmt 0 discriminator 2
 5587 0016 0124     		movs	r4, #1
 5588 0018 80F84040 		strb	r4, [r0, #64]
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5589              		.loc 1 3186 0 is_stmt 1 discriminator 2
 5590 001c 2124     		movs	r4, #33
 5591 001e 80F84140 		strb	r4, [r0, #65]
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5592              		.loc 1 3187 0 discriminator 2
 5593 0022 1024     		movs	r4, #16
 5594 0024 80F84240 		strb	r4, [r0, #66]
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5595              		.loc 1 3188 0 discriminator 2
 5596 0028 0024     		movs	r4, #0
 5597 002a 4464     		str	r4, [r0, #68]
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5598              		.loc 1 3191 0 discriminator 2
 5599 002c 4262     		str	r2, [r0, #36]
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5600              		.loc 1 3192 0 discriminator 2
 5601 002e 4385     		strh	r3, [r0, #42]	@ movhi
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5602              		.loc 1 3193 0 discriminator 2
 5603 0030 069B     		ldr	r3, [sp, #24]
 5604              	.LVL436:
 5605 0032 C362     		str	r3, [r0, #44]
 5606              	.LVL437:
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5607              		.loc 1 3194 0 discriminator 2
 5608 0034 1D4B     		ldr	r3, .L460
 5609 0036 4363     		str	r3, [r0, #52]
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5610              		.loc 1 3197 0 discriminator 2
 5611 0038 438D     		ldrh	r3, [r0, #42]
 5612 003a 9BB2     		uxth	r3, r3
 5613 003c FF2B     		cmp	r3, #255
 5614 003e 28D9     		bls	.L451
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5615              		.loc 1 3199 0
ARM GAS  /tmp/cc1AMB4O.s 			page 232


 5616 0040 FF23     		movs	r3, #255
 5617 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5618              	.LVL438:
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5619              		.loc 1 3200 0
 5620 0044 4FF08076 		mov	r6, #16777216
 5621              	.LVL439:
 5622              	.L452:
 5623 0048 0D46     		mov	r5, r1
 5624 004a 0446     		mov	r4, r0
 5625              	.LVL440:
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5626              		.loc 1 3210 0
 5627 004c 036B     		ldr	r3, [r0, #48]
 5628 004e 112B     		cmp	r3, #17
 5629 0050 05D1     		bne	.L453
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5630              		.loc 1 3210 0 is_stmt 0 discriminator 1
 5631 0052 069B     		ldr	r3, [sp, #24]
 5632 0054 B3F52A4F 		cmp	r3, #43520
 5633 0058 18BF     		it	ne
 5634 005a AA2B     		cmpne	r3, #170
 5635 005c 1DD1     		bne	.L457
 5636              	.L453:
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5637              		.loc 1 3217 0 is_stmt 1
 5638 005e 2046     		mov	r0, r4
 5639              	.LVL441:
 5640 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5641              	.LVL442:
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5642              		.loc 1 3220 0
 5643 0064 638D     		ldrh	r3, [r4, #42]
 5644 0066 9BB2     		uxth	r3, r3
 5645 0068 FF2B     		cmp	r3, #255
 5646 006a 18D8     		bhi	.L458
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5647              		.loc 1 3222 0
 5648 006c E66A     		ldr	r6, [r4, #44]
 5649              	.LVL443:
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5650              		.loc 1 3176 0
 5651 006e 104B     		ldr	r3, .L460+4
 5652              	.L454:
 5653              	.LVL444:
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5654              		.loc 1 3227 0
 5655 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5656 0074 0093     		str	r3, [sp]
 5657 0076 3346     		mov	r3, r6
 5658              	.LVL445:
 5659 0078 2946     		mov	r1, r5
 5660 007a 2046     		mov	r0, r4
 5661 007c FFF7FEFF 		bl	I2C_TransferConfig
 5662              	.LVL446:
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5663              		.loc 1 3230 0
ARM GAS  /tmp/cc1AMB4O.s 			page 233


 5664 0080 0025     		movs	r5, #0
 5665 0082 84F84050 		strb	r5, [r4, #64]
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5666              		.loc 1 3235 0
 5667 0086 0121     		movs	r1, #1
 5668 0088 2046     		mov	r0, r4
 5669 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 5670              	.LVL447:
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5671              		.loc 1 3237 0
 5672 008e 2846     		mov	r0, r5
 5673 0090 08E0     		b	.L450
 5674              	.LVL448:
 5675              	.L451:
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5676              		.loc 1 3204 0
 5677 0092 438D     		ldrh	r3, [r0, #42]
 5678 0094 0385     		strh	r3, [r0, #40]	@ movhi
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5679              		.loc 1 3205 0
 5680 0096 C66A     		ldr	r6, [r0, #44]
 5681              	.LVL449:
 5682 0098 D6E7     		b	.L452
 5683              	.L457:
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5684              		.loc 1 3212 0
 5685 009a 0023     		movs	r3, #0
 5686 009c E8E7     		b	.L454
 5687              	.LVL450:
 5688              	.L458:
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5689              		.loc 1 3176 0
 5690 009e 044B     		ldr	r3, .L460+4
 5691 00a0 E6E7     		b	.L454
 5692              	.LVL451:
 5693              	.L455:
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5694              		.loc 1 3241 0
 5695 00a2 0220     		movs	r0, #2
 5696              	.LVL452:
 5697              	.L450:
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5698              		.loc 1 3243 0
 5699 00a4 02B0     		add	sp, sp, #8
 5700              	.LCFI89:
 5701              		.cfi_remember_state
 5702              		.cfi_def_cfa_offset 16
 5703              		@ sp needed
 5704 00a6 70BD     		pop	{r4, r5, r6, pc}
 5705              	.LVL453:
 5706              	.L456:
 5707              	.LCFI90:
 5708              		.cfi_restore_state
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5709              		.loc 1 3184 0
 5710 00a8 0220     		movs	r0, #2
 5711              	.LVL454:
ARM GAS  /tmp/cc1AMB4O.s 			page 234


 5712 00aa FBE7     		b	.L450
 5713              	.L461:
 5714              		.align	2
 5715              	.L460:
 5716 00ac 00000000 		.word	I2C_Master_ISR_IT
 5717 00b0 00200080 		.word	-2147475456
 5718              		.cfi_endproc
 5719              	.LFE164:
 5721              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5722              		.align	1
 5723              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5724              		.syntax unified
 5725              		.thumb
 5726              		.thumb_func
 5727              		.fpu fpv5-sp-d16
 5729              	HAL_I2C_Master_Seq_Transmit_DMA:
 5730              	.LFB165:
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 5731              		.loc 1 3259 0
 5732              		.cfi_startproc
 5733              		@ args = 4, pretend = 0, frame = 0
 5734              		@ frame_needed = 0, uses_anonymous_args = 0
 5735              	.LVL455:
 5736 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5737              	.LCFI91:
 5738              		.cfi_def_cfa_offset 24
 5739              		.cfi_offset 4, -24
 5740              		.cfi_offset 5, -20
 5741              		.cfi_offset 6, -16
 5742              		.cfi_offset 7, -12
 5743              		.cfi_offset 8, -8
 5744              		.cfi_offset 14, -4
 5745 0004 82B0     		sub	sp, sp, #8
 5746              	.LCFI92:
 5747              		.cfi_def_cfa_offset 32
 5748              	.LVL456:
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 5749              		.loc 1 3267 0
 5750 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5751 000a E4B2     		uxtb	r4, r4
 5752 000c 202C     		cmp	r4, #32
 5753 000e 40F09C80 		bne	.L472
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5754              		.loc 1 3270 0
 5755 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5756 0016 012C     		cmp	r4, #1
 5757 0018 00F09C80 		beq	.L473
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5758              		.loc 1 3270 0 is_stmt 0 discriminator 2
 5759 001c 0124     		movs	r4, #1
 5760 001e 80F84040 		strb	r4, [r0, #64]
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5761              		.loc 1 3272 0 is_stmt 1 discriminator 2
 5762 0022 2124     		movs	r4, #33
 5763 0024 80F84140 		strb	r4, [r0, #65]
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5764              		.loc 1 3273 0 discriminator 2
ARM GAS  /tmp/cc1AMB4O.s 			page 235


 5765 0028 1024     		movs	r4, #16
 5766 002a 80F84240 		strb	r4, [r0, #66]
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5767              		.loc 1 3274 0 discriminator 2
 5768 002e 0024     		movs	r4, #0
 5769 0030 4464     		str	r4, [r0, #68]
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5770              		.loc 1 3277 0 discriminator 2
 5771 0032 4262     		str	r2, [r0, #36]
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5772              		.loc 1 3278 0 discriminator 2
 5773 0034 4385     		strh	r3, [r0, #42]	@ movhi
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5774              		.loc 1 3279 0 discriminator 2
 5775 0036 089B     		ldr	r3, [sp, #32]
 5776              	.LVL457:
 5777 0038 C362     		str	r3, [r0, #44]
 5778              	.LVL458:
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5779              		.loc 1 3280 0 discriminator 2
 5780 003a 474B     		ldr	r3, .L479
 5781 003c 4363     		str	r3, [r0, #52]
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5782              		.loc 1 3283 0 discriminator 2
 5783 003e 438D     		ldrh	r3, [r0, #42]
 5784 0040 9BB2     		uxth	r3, r3
 5785 0042 FF2B     		cmp	r3, #255
 5786 0044 3ED9     		bls	.L464
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5787              		.loc 1 3285 0
 5788 0046 FF23     		movs	r3, #255
 5789 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5790              	.LVL459:
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5791              		.loc 1 3286 0
 5792 004a 4FF08077 		mov	r7, #16777216
 5793              	.LVL460:
 5794              	.L465:
 5795 004e 1546     		mov	r5, r2
 5796 0050 8846     		mov	r8, r1
 5797 0052 0446     		mov	r4, r0
 5798              	.LVL461:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5799              		.loc 1 3296 0
 5800 0054 036B     		ldr	r3, [r0, #48]
 5801 0056 112B     		cmp	r3, #17
 5802 0058 05D1     		bne	.L466
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5803              		.loc 1 3296 0 is_stmt 0 discriminator 1
 5804 005a 089B     		ldr	r3, [sp, #32]
 5805 005c B3F52A4F 		cmp	r3, #43520
 5806 0060 18BF     		it	ne
 5807 0062 AA2B     		cmpne	r3, #170
 5808 0064 32D1     		bne	.L474
 5809              	.L466:
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5810              		.loc 1 3303 0 is_stmt 1
ARM GAS  /tmp/cc1AMB4O.s 			page 236


 5811 0066 2046     		mov	r0, r4
 5812              	.LVL462:
 5813 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5814              	.LVL463:
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5815              		.loc 1 3306 0
 5816 006c 638D     		ldrh	r3, [r4, #42]
 5817 006e 9BB2     		uxth	r3, r3
 5818 0070 FF2B     		cmp	r3, #255
 5819 0072 2DD8     		bhi	.L475
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5820              		.loc 1 3308 0
 5821 0074 E76A     		ldr	r7, [r4, #44]
 5822              	.LVL464:
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5823              		.loc 1 3261 0
 5824 0076 394E     		ldr	r6, .L479+4
 5825              	.L467:
 5826              	.LVL465:
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 5827              		.loc 1 3312 0
 5828 0078 228D     		ldrh	r2, [r4, #40]
 5829 007a 002A     		cmp	r2, #0
 5830 007c 52D0     		beq	.L468
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5831              		.loc 1 3314 0
 5832 007e A36B     		ldr	r3, [r4, #56]
 5833 0080 43B3     		cbz	r3, .L469
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5834              		.loc 1 3317 0
 5835 0082 374A     		ldr	r2, .L479+8
 5836 0084 DA63     		str	r2, [r3, #60]
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5837              		.loc 1 3320 0
 5838 0086 A36B     		ldr	r3, [r4, #56]
 5839 0088 364A     		ldr	r2, .L479+12
 5840 008a DA64     		str	r2, [r3, #76]
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5841              		.loc 1 3323 0
 5842 008c A26B     		ldr	r2, [r4, #56]
 5843 008e 0023     		movs	r3, #0
 5844 0090 1364     		str	r3, [r2, #64]
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5845              		.loc 1 3324 0
 5846 0092 A26B     		ldr	r2, [r4, #56]
 5847 0094 1365     		str	r3, [r2, #80]
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5848              		.loc 1 3327 0
 5849 0096 2268     		ldr	r2, [r4]
 5850 0098 238D     		ldrh	r3, [r4, #40]
 5851 009a 2832     		adds	r2, r2, #40
 5852 009c 2946     		mov	r1, r5
 5853 009e A06B     		ldr	r0, [r4, #56]
 5854 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5855              	.LVL466:
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 5856              		.loc 1 3344 0
ARM GAS  /tmp/cc1AMB4O.s 			page 237


 5857 00a4 0546     		mov	r5, r0
 5858              	.LVL467:
 5859 00a6 18B3     		cbz	r0, .L478
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5860              		.loc 1 3367 0
 5861 00a8 2023     		movs	r3, #32
 5862 00aa 84F84130 		strb	r3, [r4, #65]
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5863              		.loc 1 3368 0
 5864 00ae 0022     		movs	r2, #0
 5865 00b0 84F84220 		strb	r2, [r4, #66]
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5866              		.loc 1 3371 0
 5867 00b4 636C     		ldr	r3, [r4, #68]
 5868 00b6 43F01003 		orr	r3, r3, #16
 5869 00ba 6364     		str	r3, [r4, #68]
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5870              		.loc 1 3374 0
 5871 00bc 84F84020 		strb	r2, [r4, #64]
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5872              		.loc 1 3376 0
 5873 00c0 0125     		movs	r5, #1
 5874 00c2 43E0     		b	.L463
 5875              	.LVL468:
 5876              	.L464:
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5877              		.loc 1 3290 0
 5878 00c4 438D     		ldrh	r3, [r0, #42]
 5879 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5880              		.loc 1 3291 0
 5881 00c8 C76A     		ldr	r7, [r0, #44]
 5882              	.LVL469:
 5883 00ca C0E7     		b	.L465
 5884              	.L474:
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5885              		.loc 1 3298 0
 5886 00cc 0026     		movs	r6, #0
 5887 00ce D3E7     		b	.L467
 5888              	.LVL470:
 5889              	.L475:
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5890              		.loc 1 3261 0
 5891 00d0 224E     		ldr	r6, .L479+4
 5892 00d2 D1E7     		b	.L467
 5893              	.LVL471:
 5894              	.L469:
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5895              		.loc 1 3332 0
 5896 00d4 2023     		movs	r3, #32
 5897 00d6 84F84130 		strb	r3, [r4, #65]
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5898              		.loc 1 3333 0
 5899 00da 0022     		movs	r2, #0
 5900 00dc 84F84220 		strb	r2, [r4, #66]
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5901              		.loc 1 3336 0
ARM GAS  /tmp/cc1AMB4O.s 			page 238


 5902 00e0 636C     		ldr	r3, [r4, #68]
 5903 00e2 43F08003 		orr	r3, r3, #128
 5904 00e6 6364     		str	r3, [r4, #68]
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5905              		.loc 1 3339 0
 5906 00e8 84F84020 		strb	r2, [r4, #64]
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5907              		.loc 1 3341 0
 5908 00ec 0125     		movs	r5, #1
 5909              	.LVL472:
 5910 00ee 2DE0     		b	.L463
 5911              	.LVL473:
 5912              	.L478:
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5913              		.loc 1 3347 0
 5914 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5915 00f4 0096     		str	r6, [sp]
 5916 00f6 3B46     		mov	r3, r7
 5917 00f8 4146     		mov	r1, r8
 5918 00fa 2046     		mov	r0, r4
 5919              	.LVL474:
 5920 00fc FFF7FEFF 		bl	I2C_TransferConfig
 5921              	.LVL475:
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5922              		.loc 1 3350 0
 5923 0100 638D     		ldrh	r3, [r4, #42]
 5924 0102 228D     		ldrh	r2, [r4, #40]
 5925 0104 9B1A     		subs	r3, r3, r2
 5926 0106 9BB2     		uxth	r3, r3
 5927 0108 6385     		strh	r3, [r4, #42]	@ movhi
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5928              		.loc 1 3353 0
 5929 010a 0023     		movs	r3, #0
 5930 010c 84F84030 		strb	r3, [r4, #64]
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5931              		.loc 1 3359 0
 5932 0110 1021     		movs	r1, #16
 5933 0112 2046     		mov	r0, r4
 5934 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 5935              	.LVL476:
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 5936              		.loc 1 3362 0
 5937 0118 2268     		ldr	r2, [r4]
 5938 011a 1368     		ldr	r3, [r2]
 5939 011c 43F48043 		orr	r3, r3, #16384
 5940 0120 1360     		str	r3, [r2]
 5941 0122 13E0     		b	.L463
 5942              	.LVL477:
 5943              	.L468:
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5944              		.loc 1 3382 0
 5945 0124 104B     		ldr	r3, .L479+16
 5946 0126 6363     		str	r3, [r4, #52]
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5947              		.loc 1 3386 0
 5948 0128 0C4B     		ldr	r3, .L479+4
 5949 012a 0093     		str	r3, [sp]
ARM GAS  /tmp/cc1AMB4O.s 			page 239


 5950 012c 4FF00073 		mov	r3, #33554432
 5951 0130 D2B2     		uxtb	r2, r2
 5952 0132 4146     		mov	r1, r8
 5953 0134 2046     		mov	r0, r4
 5954 0136 FFF7FEFF 		bl	I2C_TransferConfig
 5955              	.LVL478:
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5956              		.loc 1 3389 0
 5957 013a 0025     		movs	r5, #0
 5958              	.LVL479:
 5959 013c 84F84050 		strb	r5, [r4, #64]
3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 5960              		.loc 1 3397 0
 5961 0140 0121     		movs	r1, #1
 5962 0142 2046     		mov	r0, r4
 5963 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 5964              	.LVL480:
 5965 0148 00E0     		b	.L463
 5966              	.LVL481:
 5967              	.L472:
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 5968              		.loc 1 3404 0
 5969 014a 0225     		movs	r5, #2
 5970              	.LVL482:
 5971              	.L463:
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5972              		.loc 1 3406 0
 5973 014c 2846     		mov	r0, r5
 5974 014e 02B0     		add	sp, sp, #8
 5975              	.LCFI93:
 5976              		.cfi_remember_state
 5977              		.cfi_def_cfa_offset 24
 5978              		@ sp needed
 5979 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5980              	.LVL483:
 5981              	.L473:
 5982              	.LCFI94:
 5983              		.cfi_restore_state
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 5984              		.loc 1 3270 0
 5985 0154 0225     		movs	r5, #2
 5986 0156 F9E7     		b	.L463
 5987              	.L480:
 5988              		.align	2
 5989              	.L479:
 5990 0158 00000000 		.word	I2C_Master_ISR_DMA
 5991 015c 00200080 		.word	-2147475456
 5992 0160 00000000 		.word	I2C_DMAMasterTransmitCplt
 5993 0164 00000000 		.word	I2C_DMAError
 5994 0168 00000000 		.word	I2C_Master_ISR_IT
 5995              		.cfi_endproc
 5996              	.LFE165:
 5998              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5999              		.align	1
 6000              		.global	HAL_I2C_Master_Seq_Receive_IT
 6001              		.syntax unified
 6002              		.thumb
ARM GAS  /tmp/cc1AMB4O.s 			page 240


 6003              		.thumb_func
 6004              		.fpu fpv5-sp-d16
 6006              	HAL_I2C_Master_Seq_Receive_IT:
 6007              	.LFB166:
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6008              		.loc 1 3422 0
 6009              		.cfi_startproc
 6010              		@ args = 4, pretend = 0, frame = 0
 6011              		@ frame_needed = 0, uses_anonymous_args = 0
 6012              	.LVL484:
 6013 0000 70B5     		push	{r4, r5, r6, lr}
 6014              	.LCFI95:
 6015              		.cfi_def_cfa_offset 16
 6016              		.cfi_offset 4, -16
 6017              		.cfi_offset 5, -12
 6018              		.cfi_offset 6, -8
 6019              		.cfi_offset 14, -4
 6020 0002 82B0     		sub	sp, sp, #8
 6021              	.LCFI96:
 6022              		.cfi_def_cfa_offset 24
 6023              	.LVL485:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6024              		.loc 1 3429 0
 6025 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6026 0008 E4B2     		uxtb	r4, r4
 6027 000a 202C     		cmp	r4, #32
 6028 000c 49D1     		bne	.L487
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6029              		.loc 1 3432 0
 6030 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6031 0012 012C     		cmp	r4, #1
 6032 0014 48D0     		beq	.L488
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6033              		.loc 1 3432 0 is_stmt 0 discriminator 2
 6034 0016 0124     		movs	r4, #1
 6035 0018 80F84040 		strb	r4, [r0, #64]
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6036              		.loc 1 3434 0 is_stmt 1 discriminator 2
 6037 001c 2224     		movs	r4, #34
 6038 001e 80F84140 		strb	r4, [r0, #65]
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6039              		.loc 1 3435 0 discriminator 2
 6040 0022 1024     		movs	r4, #16
 6041 0024 80F84240 		strb	r4, [r0, #66]
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6042              		.loc 1 3436 0 discriminator 2
 6043 0028 0024     		movs	r4, #0
 6044 002a 4464     		str	r4, [r0, #68]
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6045              		.loc 1 3439 0 discriminator 2
 6046 002c 4262     		str	r2, [r0, #36]
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6047              		.loc 1 3440 0 discriminator 2
 6048 002e 4385     		strh	r3, [r0, #42]	@ movhi
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6049              		.loc 1 3441 0 discriminator 2
 6050 0030 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/cc1AMB4O.s 			page 241


 6051              	.LVL486:
 6052 0032 C362     		str	r3, [r0, #44]
 6053              	.LVL487:
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6054              		.loc 1 3442 0 discriminator 2
 6055 0034 1D4B     		ldr	r3, .L492
 6056 0036 4363     		str	r3, [r0, #52]
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6057              		.loc 1 3445 0 discriminator 2
 6058 0038 438D     		ldrh	r3, [r0, #42]
 6059 003a 9BB2     		uxth	r3, r3
 6060 003c FF2B     		cmp	r3, #255
 6061 003e 28D9     		bls	.L483
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6062              		.loc 1 3447 0
 6063 0040 FF23     		movs	r3, #255
 6064 0042 0385     		strh	r3, [r0, #40]	@ movhi
 6065              	.LVL488:
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6066              		.loc 1 3448 0
 6067 0044 4FF08076 		mov	r6, #16777216
 6068              	.LVL489:
 6069              	.L484:
 6070 0048 0D46     		mov	r5, r1
 6071 004a 0446     		mov	r4, r0
 6072              	.LVL490:
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6073              		.loc 1 3458 0
 6074 004c 036B     		ldr	r3, [r0, #48]
 6075 004e 122B     		cmp	r3, #18
 6076 0050 05D1     		bne	.L485
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6077              		.loc 1 3458 0 is_stmt 0 discriminator 1
 6078 0052 069B     		ldr	r3, [sp, #24]
 6079 0054 B3F52A4F 		cmp	r3, #43520
 6080 0058 18BF     		it	ne
 6081 005a AA2B     		cmpne	r3, #170
 6082 005c 1DD1     		bne	.L489
 6083              	.L485:
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6084              		.loc 1 3465 0 is_stmt 1
 6085 005e 2046     		mov	r0, r4
 6086              	.LVL491:
 6087 0060 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6088              	.LVL492:
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6089              		.loc 1 3468 0
 6090 0064 638D     		ldrh	r3, [r4, #42]
 6091 0066 9BB2     		uxth	r3, r3
 6092 0068 FF2B     		cmp	r3, #255
 6093 006a 18D8     		bhi	.L490
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6094              		.loc 1 3470 0
 6095 006c E66A     		ldr	r6, [r4, #44]
 6096              	.LVL493:
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6097              		.loc 1 3424 0
ARM GAS  /tmp/cc1AMB4O.s 			page 242


 6098 006e 104B     		ldr	r3, .L492+4
 6099              	.L486:
 6100              	.LVL494:
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6101              		.loc 1 3475 0
 6102 0070 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6103 0074 0093     		str	r3, [sp]
 6104 0076 3346     		mov	r3, r6
 6105              	.LVL495:
 6106 0078 2946     		mov	r1, r5
 6107 007a 2046     		mov	r0, r4
 6108 007c FFF7FEFF 		bl	I2C_TransferConfig
 6109              	.LVL496:
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6110              		.loc 1 3478 0
 6111 0080 0025     		movs	r5, #0
 6112 0082 84F84050 		strb	r5, [r4, #64]
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6113              		.loc 1 3483 0
 6114 0086 0221     		movs	r1, #2
 6115 0088 2046     		mov	r0, r4
 6116 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6117              	.LVL497:
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6118              		.loc 1 3485 0
 6119 008e 2846     		mov	r0, r5
 6120 0090 08E0     		b	.L482
 6121              	.LVL498:
 6122              	.L483:
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6123              		.loc 1 3452 0
 6124 0092 438D     		ldrh	r3, [r0, #42]
 6125 0094 0385     		strh	r3, [r0, #40]	@ movhi
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6126              		.loc 1 3453 0
 6127 0096 C66A     		ldr	r6, [r0, #44]
 6128              	.LVL499:
 6129 0098 D6E7     		b	.L484
 6130              	.L489:
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6131              		.loc 1 3460 0
 6132 009a 0023     		movs	r3, #0
 6133 009c E8E7     		b	.L486
 6134              	.LVL500:
 6135              	.L490:
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6136              		.loc 1 3424 0
 6137 009e 044B     		ldr	r3, .L492+4
 6138 00a0 E6E7     		b	.L486
 6139              	.LVL501:
 6140              	.L487:
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6141              		.loc 1 3489 0
 6142 00a2 0220     		movs	r0, #2
 6143              	.LVL502:
 6144              	.L482:
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 243


 6145              		.loc 1 3491 0
 6146 00a4 02B0     		add	sp, sp, #8
 6147              	.LCFI97:
 6148              		.cfi_remember_state
 6149              		.cfi_def_cfa_offset 16
 6150              		@ sp needed
 6151 00a6 70BD     		pop	{r4, r5, r6, pc}
 6152              	.LVL503:
 6153              	.L488:
 6154              	.LCFI98:
 6155              		.cfi_restore_state
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6156              		.loc 1 3432 0
 6157 00a8 0220     		movs	r0, #2
 6158              	.LVL504:
 6159 00aa FBE7     		b	.L482
 6160              	.L493:
 6161              		.align	2
 6162              	.L492:
 6163 00ac 00000000 		.word	I2C_Master_ISR_IT
 6164 00b0 00240080 		.word	-2147474432
 6165              		.cfi_endproc
 6166              	.LFE166:
 6168              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 6169              		.align	1
 6170              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6171              		.syntax unified
 6172              		.thumb
 6173              		.thumb_func
 6174              		.fpu fpv5-sp-d16
 6176              	HAL_I2C_Master_Seq_Receive_DMA:
 6177              	.LFB167:
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t xfermode;
 6178              		.loc 1 3507 0
 6179              		.cfi_startproc
 6180              		@ args = 4, pretend = 0, frame = 0
 6181              		@ frame_needed = 0, uses_anonymous_args = 0
 6182              	.LVL505:
 6183 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6184              	.LCFI99:
 6185              		.cfi_def_cfa_offset 24
 6186              		.cfi_offset 4, -24
 6187              		.cfi_offset 5, -20
 6188              		.cfi_offset 6, -16
 6189              		.cfi_offset 7, -12
 6190              		.cfi_offset 8, -8
 6191              		.cfi_offset 14, -4
 6192 0004 82B0     		sub	sp, sp, #8
 6193              	.LCFI100:
 6194              		.cfi_def_cfa_offset 32
 6195              	.LVL506:
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6196              		.loc 1 3515 0
 6197 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6198 000a E4B2     		uxtb	r4, r4
 6199 000c 202C     		cmp	r4, #32
 6200 000e 40F09C80 		bne	.L504
ARM GAS  /tmp/cc1AMB4O.s 			page 244


3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6201              		.loc 1 3518 0
 6202 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6203 0016 012C     		cmp	r4, #1
 6204 0018 00F09C80 		beq	.L505
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6205              		.loc 1 3518 0 is_stmt 0 discriminator 2
 6206 001c 0124     		movs	r4, #1
 6207 001e 80F84040 		strb	r4, [r0, #64]
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6208              		.loc 1 3520 0 is_stmt 1 discriminator 2
 6209 0022 2224     		movs	r4, #34
 6210 0024 80F84140 		strb	r4, [r0, #65]
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6211              		.loc 1 3521 0 discriminator 2
 6212 0028 1024     		movs	r4, #16
 6213 002a 80F84240 		strb	r4, [r0, #66]
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6214              		.loc 1 3522 0 discriminator 2
 6215 002e 0024     		movs	r4, #0
 6216 0030 4464     		str	r4, [r0, #68]
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6217              		.loc 1 3525 0 discriminator 2
 6218 0032 4262     		str	r2, [r0, #36]
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6219              		.loc 1 3526 0 discriminator 2
 6220 0034 4385     		strh	r3, [r0, #42]	@ movhi
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6221              		.loc 1 3527 0 discriminator 2
 6222 0036 089B     		ldr	r3, [sp, #32]
 6223              	.LVL507:
 6224 0038 C362     		str	r3, [r0, #44]
 6225              	.LVL508:
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6226              		.loc 1 3528 0 discriminator 2
 6227 003a 474B     		ldr	r3, .L511
 6228 003c 4363     		str	r3, [r0, #52]
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6229              		.loc 1 3531 0 discriminator 2
 6230 003e 438D     		ldrh	r3, [r0, #42]
 6231 0040 9BB2     		uxth	r3, r3
 6232 0042 FF2B     		cmp	r3, #255
 6233 0044 3ED9     		bls	.L496
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6234              		.loc 1 3533 0
 6235 0046 FF23     		movs	r3, #255
 6236 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6237              	.LVL509:
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6238              		.loc 1 3534 0
 6239 004a 4FF08077 		mov	r7, #16777216
 6240              	.LVL510:
 6241              	.L497:
 6242 004e 1546     		mov	r5, r2
 6243 0050 8846     		mov	r8, r1
 6244 0052 0446     		mov	r4, r0
 6245              	.LVL511:
ARM GAS  /tmp/cc1AMB4O.s 			page 245


3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6246              		.loc 1 3544 0
 6247 0054 036B     		ldr	r3, [r0, #48]
 6248 0056 122B     		cmp	r3, #18
 6249 0058 05D1     		bne	.L498
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6250              		.loc 1 3544 0 is_stmt 0 discriminator 1
 6251 005a 089B     		ldr	r3, [sp, #32]
 6252 005c B3F52A4F 		cmp	r3, #43520
 6253 0060 18BF     		it	ne
 6254 0062 AA2B     		cmpne	r3, #170
 6255 0064 32D1     		bne	.L506
 6256              	.L498:
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6257              		.loc 1 3551 0 is_stmt 1
 6258 0066 2046     		mov	r0, r4
 6259              	.LVL512:
 6260 0068 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6261              	.LVL513:
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6262              		.loc 1 3554 0
 6263 006c 638D     		ldrh	r3, [r4, #42]
 6264 006e 9BB2     		uxth	r3, r3
 6265 0070 FF2B     		cmp	r3, #255
 6266 0072 2DD8     		bhi	.L507
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6267              		.loc 1 3556 0
 6268 0074 E76A     		ldr	r7, [r4, #44]
 6269              	.LVL514:
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6270              		.loc 1 3509 0
 6271 0076 394E     		ldr	r6, .L511+4
 6272              	.L499:
 6273              	.LVL515:
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6274              		.loc 1 3560 0
 6275 0078 228D     		ldrh	r2, [r4, #40]
 6276 007a 002A     		cmp	r2, #0
 6277 007c 52D0     		beq	.L500
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6278              		.loc 1 3562 0
 6279 007e E36B     		ldr	r3, [r4, #60]
 6280 0080 43B3     		cbz	r3, .L501
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6281              		.loc 1 3565 0
 6282 0082 374A     		ldr	r2, .L511+8
 6283 0084 DA63     		str	r2, [r3, #60]
3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6284              		.loc 1 3568 0
 6285 0086 E36B     		ldr	r3, [r4, #60]
 6286 0088 364A     		ldr	r2, .L511+12
 6287 008a DA64     		str	r2, [r3, #76]
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6288              		.loc 1 3571 0
 6289 008c E26B     		ldr	r2, [r4, #60]
 6290 008e 0023     		movs	r3, #0
 6291 0090 1364     		str	r3, [r2, #64]
ARM GAS  /tmp/cc1AMB4O.s 			page 246


3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6292              		.loc 1 3572 0
 6293 0092 E26B     		ldr	r2, [r4, #60]
 6294 0094 1365     		str	r3, [r2, #80]
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6295              		.loc 1 3575 0
 6296 0096 2168     		ldr	r1, [r4]
 6297 0098 238D     		ldrh	r3, [r4, #40]
 6298 009a 2A46     		mov	r2, r5
 6299 009c 2431     		adds	r1, r1, #36
 6300 009e E06B     		ldr	r0, [r4, #60]
 6301 00a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6302              	.LVL516:
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6303              		.loc 1 3592 0
 6304 00a4 0546     		mov	r5, r0
 6305              	.LVL517:
 6306 00a6 18B3     		cbz	r0, .L510
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6307              		.loc 1 3615 0
 6308 00a8 2023     		movs	r3, #32
 6309 00aa 84F84130 		strb	r3, [r4, #65]
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6310              		.loc 1 3616 0
 6311 00ae 0022     		movs	r2, #0
 6312 00b0 84F84220 		strb	r2, [r4, #66]
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6313              		.loc 1 3619 0
 6314 00b4 636C     		ldr	r3, [r4, #68]
 6315 00b6 43F01003 		orr	r3, r3, #16
 6316 00ba 6364     		str	r3, [r4, #68]
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6317              		.loc 1 3622 0
 6318 00bc 84F84020 		strb	r2, [r4, #64]
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6319              		.loc 1 3624 0
 6320 00c0 0125     		movs	r5, #1
 6321 00c2 43E0     		b	.L495
 6322              	.LVL518:
 6323              	.L496:
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6324              		.loc 1 3538 0
 6325 00c4 438D     		ldrh	r3, [r0, #42]
 6326 00c6 0385     		strh	r3, [r0, #40]	@ movhi
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6327              		.loc 1 3539 0
 6328 00c8 C76A     		ldr	r7, [r0, #44]
 6329              	.LVL519:
 6330 00ca C0E7     		b	.L497
 6331              	.L506:
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6332              		.loc 1 3546 0
 6333 00cc 0026     		movs	r6, #0
 6334 00ce D3E7     		b	.L499
 6335              	.LVL520:
 6336              	.L507:
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
ARM GAS  /tmp/cc1AMB4O.s 			page 247


 6337              		.loc 1 3509 0
 6338 00d0 224E     		ldr	r6, .L511+4
 6339 00d2 D1E7     		b	.L499
 6340              	.LVL521:
 6341              	.L501:
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6342              		.loc 1 3580 0
 6343 00d4 2023     		movs	r3, #32
 6344 00d6 84F84130 		strb	r3, [r4, #65]
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6345              		.loc 1 3581 0
 6346 00da 0022     		movs	r2, #0
 6347 00dc 84F84220 		strb	r2, [r4, #66]
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6348              		.loc 1 3584 0
 6349 00e0 636C     		ldr	r3, [r4, #68]
 6350 00e2 43F08003 		orr	r3, r3, #128
 6351 00e6 6364     		str	r3, [r4, #68]
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6352              		.loc 1 3587 0
 6353 00e8 84F84020 		strb	r2, [r4, #64]
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6354              		.loc 1 3589 0
 6355 00ec 0125     		movs	r5, #1
 6356              	.LVL522:
 6357 00ee 2DE0     		b	.L495
 6358              	.LVL523:
 6359              	.L510:
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6360              		.loc 1 3595 0
 6361 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6362 00f4 0096     		str	r6, [sp]
 6363 00f6 3B46     		mov	r3, r7
 6364 00f8 4146     		mov	r1, r8
 6365 00fa 2046     		mov	r0, r4
 6366              	.LVL524:
 6367 00fc FFF7FEFF 		bl	I2C_TransferConfig
 6368              	.LVL525:
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6369              		.loc 1 3598 0
 6370 0100 638D     		ldrh	r3, [r4, #42]
 6371 0102 228D     		ldrh	r2, [r4, #40]
 6372 0104 9B1A     		subs	r3, r3, r2
 6373 0106 9BB2     		uxth	r3, r3
 6374 0108 6385     		strh	r3, [r4, #42]	@ movhi
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6375              		.loc 1 3601 0
 6376 010a 0023     		movs	r3, #0
 6377 010c 84F84030 		strb	r3, [r4, #64]
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6378              		.loc 1 3607 0
 6379 0110 1021     		movs	r1, #16
 6380 0112 2046     		mov	r0, r4
 6381 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 6382              	.LVL526:
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 6383              		.loc 1 3610 0
ARM GAS  /tmp/cc1AMB4O.s 			page 248


 6384 0118 2268     		ldr	r2, [r4]
 6385 011a 1368     		ldr	r3, [r2]
 6386 011c 43F40043 		orr	r3, r3, #32768
 6387 0120 1360     		str	r3, [r2]
 6388 0122 13E0     		b	.L495
 6389              	.LVL527:
 6390              	.L500:
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6391              		.loc 1 3630 0
 6392 0124 104B     		ldr	r3, .L511+16
 6393 0126 6363     		str	r3, [r4, #52]
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6394              		.loc 1 3634 0
 6395 0128 0C4B     		ldr	r3, .L511+4
 6396 012a 0093     		str	r3, [sp]
 6397 012c 4FF00073 		mov	r3, #33554432
 6398 0130 D2B2     		uxtb	r2, r2
 6399 0132 4146     		mov	r1, r8
 6400 0134 2046     		mov	r0, r4
 6401 0136 FFF7FEFF 		bl	I2C_TransferConfig
 6402              	.LVL528:
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6403              		.loc 1 3637 0
 6404 013a 0025     		movs	r5, #0
 6405              	.LVL529:
 6406 013c 84F84050 		strb	r5, [r4, #64]
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6407              		.loc 1 3645 0
 6408 0140 0121     		movs	r1, #1
 6409 0142 2046     		mov	r0, r4
 6410 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 6411              	.LVL530:
 6412 0148 00E0     		b	.L495
 6413              	.LVL531:
 6414              	.L504:
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6415              		.loc 1 3652 0
 6416 014a 0225     		movs	r5, #2
 6417              	.LVL532:
 6418              	.L495:
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6419              		.loc 1 3654 0
 6420 014c 2846     		mov	r0, r5
 6421 014e 02B0     		add	sp, sp, #8
 6422              	.LCFI101:
 6423              		.cfi_remember_state
 6424              		.cfi_def_cfa_offset 24
 6425              		@ sp needed
 6426 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6427              	.LVL533:
 6428              	.L505:
 6429              	.LCFI102:
 6430              		.cfi_restore_state
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6431              		.loc 1 3518 0
 6432 0154 0225     		movs	r5, #2
 6433 0156 F9E7     		b	.L495
ARM GAS  /tmp/cc1AMB4O.s 			page 249


 6434              	.L512:
 6435              		.align	2
 6436              	.L511:
 6437 0158 00000000 		.word	I2C_Master_ISR_DMA
 6438 015c 00240080 		.word	-2147474432
 6439 0160 00000000 		.word	I2C_DMAMasterReceiveCplt
 6440 0164 00000000 		.word	I2C_DMAError
 6441 0168 00000000 		.word	I2C_Master_ISR_IT
 6442              		.cfi_endproc
 6443              	.LFE167:
 6445              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6446              		.align	1
 6447              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6448              		.syntax unified
 6449              		.thumb
 6450              		.thumb_func
 6451              		.fpu fpv5-sp-d16
 6453              	HAL_I2C_Slave_Seq_Transmit_IT:
 6454              	.LFB168:
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6455              		.loc 1 3668 0
 6456              		.cfi_startproc
 6457              		@ args = 0, pretend = 0, frame = 0
 6458              		@ frame_needed = 0, uses_anonymous_args = 0
 6459              	.LVL534:
 6460 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6461              	.LCFI103:
 6462              		.cfi_def_cfa_offset 24
 6463              		.cfi_offset 3, -24
 6464              		.cfi_offset 4, -20
 6465              		.cfi_offset 5, -16
 6466              		.cfi_offset 6, -12
 6467              		.cfi_offset 7, -8
 6468              		.cfi_offset 14, -4
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6469              		.loc 1 3672 0
 6470 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6471 0006 04F02804 		and	r4, r4, #40
 6472 000a 282C     		cmp	r4, #40
 6473 000c 01D0     		beq	.L521
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6474              		.loc 1 3748 0
 6475 000e 0120     		movs	r0, #1
 6476              	.LVL535:
 6477              	.L514:
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6478              		.loc 1 3750 0
 6479 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6480              	.LVL536:
 6481              	.L521:
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6482              		.loc 1 3674 0
 6483 0012 B2FA82F4 		clz	r4, r2
 6484 0016 6409     		lsrs	r4, r4, #5
 6485 0018 0029     		cmp	r1, #0
 6486 001a 08BF     		it	eq
 6487 001c 0124     		moveq	r4, #1
ARM GAS  /tmp/cc1AMB4O.s 			page 250


 6488 001e 24B1     		cbz	r4, .L515
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6489              		.loc 1 3676 0
 6490 0020 4FF40073 		mov	r3, #512
 6491              	.LVL537:
 6492 0024 4364     		str	r3, [r0, #68]
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6493              		.loc 1 3677 0
 6494 0026 0120     		movs	r0, #1
 6495              	.LVL538:
 6496 0028 F2E7     		b	.L514
 6497              	.LVL539:
 6498              	.L515:
 6499 002a 1F46     		mov	r7, r3
 6500 002c 1646     		mov	r6, r2
 6501 002e 0C46     		mov	r4, r1
 6502 0030 0546     		mov	r5, r0
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6503              		.loc 1 3681 0
 6504 0032 48F20101 		movw	r1, #32769
 6505              	.LVL540:
 6506 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 6507              	.LVL541:
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6508              		.loc 1 3684 0
 6509 003a 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6510 003e 012B     		cmp	r3, #1
 6511 0040 47D0     		beq	.L519
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6512              		.loc 1 3684 0 is_stmt 0 discriminator 2
 6513 0042 0123     		movs	r3, #1
 6514 0044 85F84030 		strb	r3, [r5, #64]
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6515              		.loc 1 3688 0 is_stmt 1 discriminator 2
 6516 0048 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6517 004c DBB2     		uxtb	r3, r3
 6518 004e 2A2B     		cmp	r3, #42
 6519 0050 24D0     		beq	.L522
 6520              	.L516:
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6521              		.loc 1 3714 0
 6522 0052 2923     		movs	r3, #41
 6523 0054 85F84130 		strb	r3, [r5, #65]
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6524              		.loc 1 3715 0
 6525 0058 2023     		movs	r3, #32
 6526 005a 85F84230 		strb	r3, [r5, #66]
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6527              		.loc 1 3716 0
 6528 005e 0023     		movs	r3, #0
 6529 0060 6B64     		str	r3, [r5, #68]
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6530              		.loc 1 3719 0
 6531 0062 2A68     		ldr	r2, [r5]
 6532 0064 5368     		ldr	r3, [r2, #4]
 6533 0066 23F40043 		bic	r3, r3, #32768
 6534 006a 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc1AMB4O.s 			page 251


3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6535              		.loc 1 3722 0
 6536 006c 6C62     		str	r4, [r5, #36]
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6537              		.loc 1 3723 0
 6538 006e 6E85     		strh	r6, [r5, #42]	@ movhi
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6539              		.loc 1 3724 0
 6540 0070 6B8D     		ldrh	r3, [r5, #42]
 6541 0072 2B85     		strh	r3, [r5, #40]	@ movhi
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6542              		.loc 1 3725 0
 6543 0074 EF62     		str	r7, [r5, #44]
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6544              		.loc 1 3726 0
 6545 0076 184B     		ldr	r3, .L523
 6546 0078 6B63     		str	r3, [r5, #52]
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6547              		.loc 1 3728 0
 6548 007a 2B68     		ldr	r3, [r5]
 6549 007c 9A69     		ldr	r2, [r3, #24]
 6550 007e 12F4803F 		tst	r2, #65536
 6551 0082 01D0     		beq	.L517
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6552              		.loc 1 3732 0
 6553 0084 0822     		movs	r2, #8
 6554 0086 DA61     		str	r2, [r3, #28]
 6555              	.L517:
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6556              		.loc 1 3736 0
 6557 0088 0024     		movs	r4, #0
 6558              	.LVL542:
 6559 008a 85F84040 		strb	r4, [r5, #64]
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6560              		.loc 1 3742 0
 6561 008e 48F20101 		movw	r1, #32769
 6562 0092 2846     		mov	r0, r5
 6563 0094 FFF7FEFF 		bl	I2C_Enable_IRQ
 6564              	.LVL543:
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6565              		.loc 1 3744 0
 6566 0098 2046     		mov	r0, r4
 6567 009a B9E7     		b	.L514
 6568              	.LVL544:
 6569              	.L522:
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6570              		.loc 1 3691 0
 6571 009c 0221     		movs	r1, #2
 6572 009e 2846     		mov	r0, r5
 6573 00a0 FFF7FEFF 		bl	I2C_Disable_IRQ
 6574              	.LVL545:
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6575              		.loc 1 3694 0
 6576 00a4 2B68     		ldr	r3, [r5]
 6577 00a6 1A68     		ldr	r2, [r3]
 6578 00a8 12F4004F 		tst	r2, #32768
 6579 00ac D1D0     		beq	.L516
ARM GAS  /tmp/cc1AMB4O.s 			page 252


3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6580              		.loc 1 3696 0
 6581 00ae 1A68     		ldr	r2, [r3]
 6582 00b0 22F40042 		bic	r2, r2, #32768
 6583 00b4 1A60     		str	r2, [r3]
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6584              		.loc 1 3698 0
 6585 00b6 EB6B     		ldr	r3, [r5, #60]
 6586 00b8 002B     		cmp	r3, #0
 6587 00ba CAD0     		beq	.L516
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6588              		.loc 1 3702 0
 6589 00bc 074A     		ldr	r2, .L523+4
 6590 00be 1A65     		str	r2, [r3, #80]
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6591              		.loc 1 3705 0
 6592 00c0 E86B     		ldr	r0, [r5, #60]
 6593 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6594              	.LVL546:
 6595 00c6 0028     		cmp	r0, #0
 6596 00c8 C3D0     		beq	.L516
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6597              		.loc 1 3708 0
 6598 00ca E86B     		ldr	r0, [r5, #60]
 6599 00cc 036D     		ldr	r3, [r0, #80]
 6600 00ce 9847     		blx	r3
 6601              	.LVL547:
 6602 00d0 BFE7     		b	.L516
 6603              	.L519:
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6604              		.loc 1 3684 0
 6605 00d2 0220     		movs	r0, #2
 6606 00d4 9CE7     		b	.L514
 6607              	.L524:
 6608 00d6 00BF     		.align	2
 6609              	.L523:
 6610 00d8 00000000 		.word	I2C_Slave_ISR_IT
 6611 00dc 00000000 		.word	I2C_DMAAbort
 6612              		.cfi_endproc
 6613              	.LFE168:
 6615              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6616              		.align	1
 6617              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6618              		.syntax unified
 6619              		.thumb
 6620              		.thumb_func
 6621              		.fpu fpv5-sp-d16
 6623              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6624              	.LFB169:
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6625              		.loc 1 3764 0
 6626              		.cfi_startproc
 6627              		@ args = 0, pretend = 0, frame = 0
 6628              		@ frame_needed = 0, uses_anonymous_args = 0
 6629              	.LVL548:
 6630 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6631              	.LCFI104:
ARM GAS  /tmp/cc1AMB4O.s 			page 253


 6632              		.cfi_def_cfa_offset 24
 6633              		.cfi_offset 3, -24
 6634              		.cfi_offset 4, -20
 6635              		.cfi_offset 5, -16
 6636              		.cfi_offset 6, -12
 6637              		.cfi_offset 7, -8
 6638              		.cfi_offset 14, -4
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6639              		.loc 1 3770 0
 6640 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 6641 0006 05F02805 		and	r5, r5, #40
 6642 000a 282D     		cmp	r5, #40
 6643 000c 02D0     		beq	.L539
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6644              		.loc 1 3928 0
 6645 000e 0125     		movs	r5, #1
 6646              	.LVL549:
 6647              	.L526:
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6648              		.loc 1 3930 0
 6649 0010 2846     		mov	r0, r5
 6650 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6651              	.LVL550:
 6652              	.L539:
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6653              		.loc 1 3772 0
 6654 0014 B2FA82F4 		clz	r4, r2
 6655 0018 6409     		lsrs	r4, r4, #5
 6656 001a 0029     		cmp	r1, #0
 6657 001c 08BF     		it	eq
 6658 001e 0124     		moveq	r4, #1
 6659 0020 002C     		cmp	r4, #0
 6660 0022 5ED1     		bne	.L540
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6661              		.loc 1 3779 0
 6662 0024 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6663 0028 012C     		cmp	r4, #1
 6664 002a 00F0B180 		beq	.L536
 6665 002e 1F46     		mov	r7, r3
 6666 0030 1646     		mov	r6, r2
 6667 0032 0D46     		mov	r5, r1
 6668 0034 0446     		mov	r4, r0
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6669              		.loc 1 3779 0 is_stmt 0 discriminator 2
 6670 0036 0123     		movs	r3, #1
 6671              	.LVL551:
 6672 0038 80F84030 		strb	r3, [r0, #64]
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6673              		.loc 1 3782 0 is_stmt 1 discriminator 2
 6674 003c 48F20101 		movw	r1, #32769
 6675              	.LVL552:
 6676 0040 FFF7FEFF 		bl	I2C_Disable_IRQ
 6677              	.LVL553:
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6678              		.loc 1 3786 0 discriminator 2
 6679 0044 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6680 0048 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc1AMB4O.s 			page 254


 6681 004a 2A2B     		cmp	r3, #42
 6682 004c 4ED0     		beq	.L541
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6683              		.loc 1 3811 0
 6684 004e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6685 0052 DBB2     		uxtb	r3, r3
 6686 0054 292B     		cmp	r3, #41
 6687 0056 65D0     		beq	.L542
 6688              	.L529:
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6689              		.loc 1 3838 0
 6690 0058 2923     		movs	r3, #41
 6691 005a 84F84130 		strb	r3, [r4, #65]
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6692              		.loc 1 3839 0
 6693 005e 2023     		movs	r3, #32
 6694 0060 84F84230 		strb	r3, [r4, #66]
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6695              		.loc 1 3840 0
 6696 0064 0023     		movs	r3, #0
 6697 0066 6364     		str	r3, [r4, #68]
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6698              		.loc 1 3843 0
 6699 0068 2268     		ldr	r2, [r4]
 6700 006a 5368     		ldr	r3, [r2, #4]
 6701 006c 23F40043 		bic	r3, r3, #32768
 6702 0070 5360     		str	r3, [r2, #4]
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6703              		.loc 1 3846 0
 6704 0072 6562     		str	r5, [r4, #36]
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6705              		.loc 1 3847 0
 6706 0074 6685     		strh	r6, [r4, #42]	@ movhi
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6707              		.loc 1 3848 0
 6708 0076 638D     		ldrh	r3, [r4, #42]
 6709 0078 2385     		strh	r3, [r4, #40]	@ movhi
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6710              		.loc 1 3849 0
 6711 007a E762     		str	r7, [r4, #44]
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6712              		.loc 1 3850 0
 6713 007c 454B     		ldr	r3, .L544
 6714 007e 6363     		str	r3, [r4, #52]
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6715              		.loc 1 3852 0
 6716 0080 A36B     		ldr	r3, [r4, #56]
 6717 0082 002B     		cmp	r3, #0
 6718 0084 65D0     		beq	.L530
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6719              		.loc 1 3855 0
 6720 0086 444A     		ldr	r2, .L544+4
 6721 0088 DA63     		str	r2, [r3, #60]
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6722              		.loc 1 3858 0
 6723 008a A36B     		ldr	r3, [r4, #56]
 6724 008c 434A     		ldr	r2, .L544+8
ARM GAS  /tmp/cc1AMB4O.s 			page 255


 6725 008e DA64     		str	r2, [r3, #76]
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6726              		.loc 1 3861 0
 6727 0090 A26B     		ldr	r2, [r4, #56]
 6728 0092 0023     		movs	r3, #0
 6729 0094 1364     		str	r3, [r2, #64]
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6730              		.loc 1 3862 0
 6731 0096 A26B     		ldr	r2, [r4, #56]
 6732 0098 1365     		str	r3, [r2, #80]
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6733              		.loc 1 3865 0
 6734 009a 2268     		ldr	r2, [r4]
 6735 009c 238D     		ldrh	r3, [r4, #40]
 6736 009e 2832     		adds	r2, r2, #40
 6737 00a0 2946     		mov	r1, r5
 6738 00a2 A06B     		ldr	r0, [r4, #56]
 6739 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6740              	.LVL554:
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6741              		.loc 1 3882 0
 6742 00a8 0546     		mov	r5, r0
 6743              	.LVL555:
 6744 00aa 0028     		cmp	r0, #0
 6745 00ac 5FD1     		bne	.L543
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6746              		.loc 1 3885 0
 6747 00ae 638D     		ldrh	r3, [r4, #42]
 6748 00b0 228D     		ldrh	r2, [r4, #40]
 6749 00b2 9B1A     		subs	r3, r3, r2
 6750 00b4 9BB2     		uxth	r3, r3
 6751 00b6 6385     		strh	r3, [r4, #42]	@ movhi
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6752              		.loc 1 3888 0
 6753 00b8 0023     		movs	r3, #0
 6754 00ba 2385     		strh	r3, [r4, #40]	@ movhi
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6755              		.loc 1 3905 0
 6756 00bc 2368     		ldr	r3, [r4]
 6757 00be 9A69     		ldr	r2, [r3, #24]
 6758 00c0 12F4803F 		tst	r2, #65536
 6759 00c4 61D1     		bne	.L533
 6760              	.L534:
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6761              		.loc 1 3913 0
 6762 00c6 0023     		movs	r3, #0
 6763 00c8 84F84030 		strb	r3, [r4, #64]
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6764              		.loc 1 3919 0
 6765 00cc 4FF40041 		mov	r1, #32768
 6766 00d0 2046     		mov	r0, r4
 6767              	.LVL556:
 6768 00d2 FFF7FEFF 		bl	I2C_Enable_IRQ
 6769              	.LVL557:
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6770              		.loc 1 3922 0
 6771 00d6 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc1AMB4O.s 			page 256


 6772 00d8 1368     		ldr	r3, [r2]
 6773 00da 43F48043 		orr	r3, r3, #16384
 6774 00de 1360     		str	r3, [r2]
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6775              		.loc 1 3924 0
 6776 00e0 96E7     		b	.L526
 6777              	.LVL558:
 6778              	.L540:
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6779              		.loc 1 3774 0
 6780 00e2 4FF40073 		mov	r3, #512
 6781              	.LVL559:
 6782 00e6 4364     		str	r3, [r0, #68]
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6783              		.loc 1 3775 0
 6784 00e8 0125     		movs	r5, #1
 6785 00ea 91E7     		b	.L526
 6786              	.LVL560:
 6787              	.L541:
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6788              		.loc 1 3789 0
 6789 00ec 0221     		movs	r1, #2
 6790 00ee 2046     		mov	r0, r4
 6791 00f0 FFF7FEFF 		bl	I2C_Disable_IRQ
 6792              	.LVL561:
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6793              		.loc 1 3791 0
 6794 00f4 2368     		ldr	r3, [r4]
 6795 00f6 1A68     		ldr	r2, [r3]
 6796 00f8 12F4004F 		tst	r2, #32768
 6797 00fc ACD0     		beq	.L529
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6798              		.loc 1 3794 0
 6799 00fe E26B     		ldr	r2, [r4, #60]
 6800 0100 002A     		cmp	r2, #0
 6801 0102 A9D0     		beq	.L529
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6802              		.loc 1 3796 0
 6803 0104 1A68     		ldr	r2, [r3]
 6804 0106 22F40042 		bic	r2, r2, #32768
 6805 010a 1A60     		str	r2, [r3]
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6806              		.loc 1 3800 0
 6807 010c E36B     		ldr	r3, [r4, #60]
 6808 010e 244A     		ldr	r2, .L544+12
 6809 0110 1A65     		str	r2, [r3, #80]
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6810              		.loc 1 3803 0
 6811 0112 E06B     		ldr	r0, [r4, #60]
 6812 0114 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6813              	.LVL562:
 6814 0118 0028     		cmp	r0, #0
 6815 011a 9DD0     		beq	.L529
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6816              		.loc 1 3806 0
 6817 011c E06B     		ldr	r0, [r4, #60]
 6818 011e 036D     		ldr	r3, [r0, #80]
ARM GAS  /tmp/cc1AMB4O.s 			page 257


 6819 0120 9847     		blx	r3
 6820              	.LVL563:
 6821 0122 99E7     		b	.L529
 6822              	.L542:
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 6823              		.loc 1 3813 0
 6824 0124 2368     		ldr	r3, [r4]
 6825 0126 1A68     		ldr	r2, [r3]
 6826 0128 12F4804F 		tst	r2, #16384
 6827 012c 94D0     		beq	.L529
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6828              		.loc 1 3815 0
 6829 012e 1A68     		ldr	r2, [r3]
 6830 0130 22F48042 		bic	r2, r2, #16384
 6831 0134 1A60     		str	r2, [r3]
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 6832              		.loc 1 3818 0
 6833 0136 A36B     		ldr	r3, [r4, #56]
 6834 0138 002B     		cmp	r3, #0
 6835 013a 8DD0     		beq	.L529
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6836              		.loc 1 3822 0
 6837 013c 184A     		ldr	r2, .L544+12
 6838 013e 1A65     		str	r2, [r3, #80]
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 6839              		.loc 1 3825 0
 6840 0140 A06B     		ldr	r0, [r4, #56]
 6841 0142 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6842              	.LVL564:
 6843 0146 0028     		cmp	r0, #0
 6844 0148 86D0     		beq	.L529
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 6845              		.loc 1 3828 0
 6846 014a A06B     		ldr	r0, [r4, #56]
 6847 014c 036D     		ldr	r3, [r0, #80]
 6848 014e 9847     		blx	r3
 6849              	.LVL565:
 6850 0150 82E7     		b	.L529
 6851              	.L530:
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6852              		.loc 1 3870 0
 6853 0152 2823     		movs	r3, #40
 6854 0154 84F84130 		strb	r3, [r4, #65]
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6855              		.loc 1 3871 0
 6856 0158 0022     		movs	r2, #0
 6857 015a 84F84220 		strb	r2, [r4, #66]
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6858              		.loc 1 3874 0
 6859 015e 636C     		ldr	r3, [r4, #68]
 6860 0160 43F08003 		orr	r3, r3, #128
 6861 0164 6364     		str	r3, [r4, #68]
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6862              		.loc 1 3877 0
 6863 0166 84F84020 		strb	r2, [r4, #64]
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6864              		.loc 1 3879 0
ARM GAS  /tmp/cc1AMB4O.s 			page 258


 6865 016a 0125     		movs	r5, #1
 6866              	.LVL566:
 6867 016c 50E7     		b	.L526
 6868              	.LVL567:
 6869              	.L543:
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6870              		.loc 1 3893 0
 6871 016e 2823     		movs	r3, #40
 6872 0170 84F84130 		strb	r3, [r4, #65]
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6873              		.loc 1 3894 0
 6874 0174 0022     		movs	r2, #0
 6875 0176 84F84220 		strb	r2, [r4, #66]
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6876              		.loc 1 3897 0
 6877 017a 636C     		ldr	r3, [r4, #68]
 6878 017c 43F01003 		orr	r3, r3, #16
 6879 0180 6364     		str	r3, [r4, #68]
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6880              		.loc 1 3900 0
 6881 0182 84F84020 		strb	r2, [r4, #64]
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6882              		.loc 1 3902 0
 6883 0186 0125     		movs	r5, #1
 6884 0188 42E7     		b	.L526
 6885              	.L533:
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6886              		.loc 1 3909 0
 6887 018a 0822     		movs	r2, #8
 6888 018c DA61     		str	r2, [r3, #28]
 6889 018e 9AE7     		b	.L534
 6890              	.LVL568:
 6891              	.L536:
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6892              		.loc 1 3779 0
 6893 0190 0225     		movs	r5, #2
 6894 0192 3DE7     		b	.L526
 6895              	.L545:
 6896              		.align	2
 6897              	.L544:
 6898 0194 00000000 		.word	I2C_Slave_ISR_DMA
 6899 0198 00000000 		.word	I2C_DMASlaveTransmitCplt
 6900 019c 00000000 		.word	I2C_DMAError
 6901 01a0 00000000 		.word	I2C_DMAAbort
 6902              		.cfi_endproc
 6903              	.LFE169:
 6905              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6906              		.align	1
 6907              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6908              		.syntax unified
 6909              		.thumb
 6910              		.thumb_func
 6911              		.fpu fpv5-sp-d16
 6913              	HAL_I2C_Slave_Seq_Receive_IT:
 6914              	.LFB170:
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Check the parameters */
 6915              		.loc 1 3944 0
ARM GAS  /tmp/cc1AMB4O.s 			page 259


 6916              		.cfi_startproc
 6917              		@ args = 0, pretend = 0, frame = 0
 6918              		@ frame_needed = 0, uses_anonymous_args = 0
 6919              	.LVL569:
 6920 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6921              	.LCFI105:
 6922              		.cfi_def_cfa_offset 24
 6923              		.cfi_offset 3, -24
 6924              		.cfi_offset 4, -20
 6925              		.cfi_offset 5, -16
 6926              		.cfi_offset 6, -12
 6927              		.cfi_offset 7, -8
 6928              		.cfi_offset 14, -4
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 6929              		.loc 1 3948 0
 6930 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6931 0006 04F02804 		and	r4, r4, #40
 6932 000a 282C     		cmp	r4, #40
 6933 000c 01D0     		beq	.L554
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 6934              		.loc 1 4024 0
 6935 000e 0120     		movs	r0, #1
 6936              	.LVL570:
 6937              	.L547:
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6938              		.loc 1 4026 0
 6939 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6940              	.LVL571:
 6941              	.L554:
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6942              		.loc 1 3950 0
 6943 0012 B2FA82F4 		clz	r4, r2
 6944 0016 6409     		lsrs	r4, r4, #5
 6945 0018 0029     		cmp	r1, #0
 6946 001a 08BF     		it	eq
 6947 001c 0124     		moveq	r4, #1
 6948 001e 24B1     		cbz	r4, .L548
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 6949              		.loc 1 3952 0
 6950 0020 4FF40073 		mov	r3, #512
 6951              	.LVL572:
 6952 0024 4364     		str	r3, [r0, #68]
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 6953              		.loc 1 3953 0
 6954 0026 0120     		movs	r0, #1
 6955              	.LVL573:
 6956 0028 F2E7     		b	.L547
 6957              	.LVL574:
 6958              	.L548:
 6959 002a 1F46     		mov	r7, r3
 6960 002c 1646     		mov	r6, r2
 6961 002e 0C46     		mov	r4, r1
 6962 0030 0546     		mov	r5, r0
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6963              		.loc 1 3957 0
 6964 0032 48F20201 		movw	r1, #32770
 6965              	.LVL575:
ARM GAS  /tmp/cc1AMB4O.s 			page 260


 6966 0036 FFF7FEFF 		bl	I2C_Disable_IRQ
 6967              	.LVL576:
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6968              		.loc 1 3960 0
 6969 003a 95F84030 		ldrb	r3, [r5, #64]	@ zero_extendqisi2
 6970 003e 012B     		cmp	r3, #1
 6971 0040 47D0     		beq	.L552
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6972              		.loc 1 3960 0 is_stmt 0 discriminator 2
 6973 0042 0123     		movs	r3, #1
 6974 0044 85F84030 		strb	r3, [r5, #64]
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 6975              		.loc 1 3964 0 is_stmt 1 discriminator 2
 6976 0048 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 6977 004c DBB2     		uxtb	r3, r3
 6978 004e 292B     		cmp	r3, #41
 6979 0050 24D0     		beq	.L555
 6980              	.L549:
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6981              		.loc 1 3990 0
 6982 0052 2A23     		movs	r3, #42
 6983 0054 85F84130 		strb	r3, [r5, #65]
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6984              		.loc 1 3991 0
 6985 0058 2023     		movs	r3, #32
 6986 005a 85F84230 		strb	r3, [r5, #66]
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6987              		.loc 1 3992 0
 6988 005e 0023     		movs	r3, #0
 6989 0060 6B64     		str	r3, [r5, #68]
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 6990              		.loc 1 3995 0
 6991 0062 2A68     		ldr	r2, [r5]
 6992 0064 5368     		ldr	r3, [r2, #4]
 6993 0066 23F40043 		bic	r3, r3, #32768
 6994 006a 5360     		str	r3, [r2, #4]
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6995              		.loc 1 3998 0
 6996 006c 6C62     		str	r4, [r5, #36]
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6997              		.loc 1 3999 0
 6998 006e 6E85     		strh	r6, [r5, #42]	@ movhi
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6999              		.loc 1 4000 0
 7000 0070 6B8D     		ldrh	r3, [r5, #42]
 7001 0072 2B85     		strh	r3, [r5, #40]	@ movhi
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 7002              		.loc 1 4001 0
 7003 0074 EF62     		str	r7, [r5, #44]
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7004              		.loc 1 4002 0
 7005 0076 184B     		ldr	r3, .L556
 7006 0078 6B63     		str	r3, [r5, #52]
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7007              		.loc 1 4004 0
 7008 007a 2B68     		ldr	r3, [r5]
 7009 007c 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/cc1AMB4O.s 			page 261


 7010 007e 12F4803F 		tst	r2, #65536
 7011 0082 01D1     		bne	.L550
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7012              		.loc 1 4008 0
 7013 0084 0822     		movs	r2, #8
 7014 0086 DA61     		str	r2, [r3, #28]
 7015              	.L550:
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7016              		.loc 1 4012 0
 7017 0088 0024     		movs	r4, #0
 7018              	.LVL577:
 7019 008a 85F84040 		strb	r4, [r5, #64]
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7020              		.loc 1 4018 0
 7021 008e 48F20201 		movw	r1, #32770
 7022 0092 2846     		mov	r0, r5
 7023 0094 FFF7FEFF 		bl	I2C_Enable_IRQ
 7024              	.LVL578:
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7025              		.loc 1 4020 0
 7026 0098 2046     		mov	r0, r4
 7027 009a B9E7     		b	.L547
 7028              	.LVL579:
 7029              	.L555:
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7030              		.loc 1 3967 0
 7031 009c 0121     		movs	r1, #1
 7032 009e 2846     		mov	r0, r5
 7033 00a0 FFF7FEFF 		bl	I2C_Disable_IRQ
 7034              	.LVL580:
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7035              		.loc 1 3969 0
 7036 00a4 2B68     		ldr	r3, [r5]
 7037 00a6 1A68     		ldr	r2, [r3]
 7038 00a8 12F4804F 		tst	r2, #16384
 7039 00ac D1D0     		beq	.L549
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7040              		.loc 1 3971 0
 7041 00ae 1A68     		ldr	r2, [r3]
 7042 00b0 22F48042 		bic	r2, r2, #16384
 7043 00b4 1A60     		str	r2, [r3]
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7044              		.loc 1 3974 0
 7045 00b6 AB6B     		ldr	r3, [r5, #56]
 7046 00b8 002B     		cmp	r3, #0
 7047 00ba CAD0     		beq	.L549
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7048              		.loc 1 3978 0
 7049 00bc 074A     		ldr	r2, .L556+4
 7050 00be 1A65     		str	r2, [r3, #80]
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7051              		.loc 1 3981 0
 7052 00c0 A86B     		ldr	r0, [r5, #56]
 7053 00c2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7054              	.LVL581:
 7055 00c6 0028     		cmp	r0, #0
 7056 00c8 C3D0     		beq	.L549
ARM GAS  /tmp/cc1AMB4O.s 			page 262


3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7057              		.loc 1 3984 0
 7058 00ca A86B     		ldr	r0, [r5, #56]
 7059 00cc 036D     		ldr	r3, [r0, #80]
 7060 00ce 9847     		blx	r3
 7061              	.LVL582:
 7062 00d0 BFE7     		b	.L549
 7063              	.L552:
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7064              		.loc 1 3960 0
 7065 00d2 0220     		movs	r0, #2
 7066 00d4 9CE7     		b	.L547
 7067              	.L557:
 7068 00d6 00BF     		.align	2
 7069              	.L556:
 7070 00d8 00000000 		.word	I2C_Slave_ISR_IT
 7071 00dc 00000000 		.word	I2C_DMAAbort
 7072              		.cfi_endproc
 7073              	.LFE170:
 7075              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 7076              		.align	1
 7077              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 7078              		.syntax unified
 7079              		.thumb
 7080              		.thumb_func
 7081              		.fpu fpv5-sp-d16
 7083              	HAL_I2C_Slave_Seq_Receive_DMA:
 7084              	.LFB171:
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 7085              		.loc 1 4040 0
 7086              		.cfi_startproc
 7087              		@ args = 0, pretend = 0, frame = 0
 7088              		@ frame_needed = 0, uses_anonymous_args = 0
 7089              	.LVL583:
 7090 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7091              	.LCFI106:
 7092              		.cfi_def_cfa_offset 24
 7093              		.cfi_offset 3, -24
 7094              		.cfi_offset 4, -20
 7095              		.cfi_offset 5, -16
 7096              		.cfi_offset 6, -12
 7097              		.cfi_offset 7, -8
 7098              		.cfi_offset 14, -4
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7099              		.loc 1 4046 0
 7100 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 7101 0006 04F02804 		and	r4, r4, #40
 7102 000a 282C     		cmp	r4, #40
 7103 000c 02D0     		beq	.L572
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7104              		.loc 1 4204 0
 7105 000e 0125     		movs	r5, #1
 7106              	.LVL584:
 7107              	.L559:
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7108              		.loc 1 4206 0
 7109 0010 2846     		mov	r0, r5
ARM GAS  /tmp/cc1AMB4O.s 			page 263


 7110 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7111              	.LVL585:
 7112              	.L572:
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7113              		.loc 1 4048 0
 7114 0014 B2FA82F4 		clz	r4, r2
 7115 0018 6409     		lsrs	r4, r4, #5
 7116 001a 0029     		cmp	r1, #0
 7117 001c 08BF     		it	eq
 7118 001e 0124     		moveq	r4, #1
 7119 0020 24B1     		cbz	r4, .L560
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       return  HAL_ERROR;
 7120              		.loc 1 4050 0
 7121 0022 4FF40073 		mov	r3, #512
 7122              	.LVL586:
 7123 0026 4364     		str	r3, [r0, #68]
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7124              		.loc 1 4051 0
 7125 0028 0125     		movs	r5, #1
 7126 002a F1E7     		b	.L559
 7127              	.LVL587:
 7128              	.L560:
 7129 002c 1F46     		mov	r7, r3
 7130 002e 1646     		mov	r6, r2
 7131 0030 0D46     		mov	r5, r1
 7132 0032 0446     		mov	r4, r0
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7133              		.loc 1 4055 0
 7134 0034 48F20201 		movw	r1, #32770
 7135              	.LVL588:
 7136 0038 FFF7FEFF 		bl	I2C_Disable_IRQ
 7137              	.LVL589:
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7138              		.loc 1 4058 0
 7139 003c 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 7140 0040 012B     		cmp	r3, #1
 7141 0042 00F0A480 		beq	.L569
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7142              		.loc 1 4058 0 is_stmt 0 discriminator 2
 7143 0046 0123     		movs	r3, #1
 7144 0048 84F84030 		strb	r3, [r4, #64]
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7145              		.loc 1 4062 0 is_stmt 1 discriminator 2
 7146 004c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7147 0050 DBB2     		uxtb	r3, r3
 7148 0052 292B     		cmp	r3, #41
 7149 0054 49D0     		beq	.L573
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7150              		.loc 1 4087 0
 7151 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7152 005a DBB2     		uxtb	r3, r3
 7153 005c 2A2B     		cmp	r3, #42
 7154 005e 60D0     		beq	.L574
 7155              	.L562:
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7156              		.loc 1 4114 0
 7157 0060 2A23     		movs	r3, #42
ARM GAS  /tmp/cc1AMB4O.s 			page 264


 7158 0062 84F84130 		strb	r3, [r4, #65]
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7159              		.loc 1 4115 0
 7160 0066 2023     		movs	r3, #32
 7161 0068 84F84230 		strb	r3, [r4, #66]
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7162              		.loc 1 4116 0
 7163 006c 0023     		movs	r3, #0
 7164 006e 6364     		str	r3, [r4, #68]
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7165              		.loc 1 4119 0
 7166 0070 2268     		ldr	r2, [r4]
 7167 0072 5368     		ldr	r3, [r2, #4]
 7168 0074 23F40043 		bic	r3, r3, #32768
 7169 0078 5360     		str	r3, [r2, #4]
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7170              		.loc 1 4122 0
 7171 007a 6562     		str	r5, [r4, #36]
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7172              		.loc 1 4123 0
 7173 007c 6685     		strh	r6, [r4, #42]	@ movhi
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7174              		.loc 1 4124 0
 7175 007e 638D     		ldrh	r3, [r4, #42]
 7176 0080 2385     		strh	r3, [r4, #40]	@ movhi
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7177              		.loc 1 4125 0
 7178 0082 E762     		str	r7, [r4, #44]
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7179              		.loc 1 4126 0
 7180 0084 434B     		ldr	r3, .L576
 7181 0086 6363     		str	r3, [r4, #52]
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7182              		.loc 1 4128 0
 7183 0088 E36B     		ldr	r3, [r4, #60]
 7184 008a 002B     		cmp	r3, #0
 7185 008c 60D0     		beq	.L563
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7186              		.loc 1 4131 0
 7187 008e 424A     		ldr	r2, .L576+4
 7188 0090 DA63     		str	r2, [r3, #60]
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7189              		.loc 1 4134 0
 7190 0092 E36B     		ldr	r3, [r4, #60]
 7191 0094 414A     		ldr	r2, .L576+8
 7192 0096 DA64     		str	r2, [r3, #76]
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7193              		.loc 1 4137 0
 7194 0098 E26B     		ldr	r2, [r4, #60]
 7195 009a 0023     		movs	r3, #0
 7196 009c 1364     		str	r3, [r2, #64]
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7197              		.loc 1 4138 0
 7198 009e E26B     		ldr	r2, [r4, #60]
 7199 00a0 1365     		str	r3, [r2, #80]
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7200              		.loc 1 4141 0
ARM GAS  /tmp/cc1AMB4O.s 			page 265


 7201 00a2 2168     		ldr	r1, [r4]
 7202 00a4 238D     		ldrh	r3, [r4, #40]
 7203 00a6 2A46     		mov	r2, r5
 7204 00a8 2431     		adds	r1, r1, #36
 7205 00aa E06B     		ldr	r0, [r4, #60]
 7206 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 7207              	.LVL590:
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7208              		.loc 1 4158 0
 7209 00b0 0546     		mov	r5, r0
 7210              	.LVL591:
 7211 00b2 0028     		cmp	r0, #0
 7212 00b4 5AD1     		bne	.L575
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7213              		.loc 1 4161 0
 7214 00b6 638D     		ldrh	r3, [r4, #42]
 7215 00b8 228D     		ldrh	r2, [r4, #40]
 7216 00ba 9B1A     		subs	r3, r3, r2
 7217 00bc 9BB2     		uxth	r3, r3
 7218 00be 6385     		strh	r3, [r4, #42]	@ movhi
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7219              		.loc 1 4164 0
 7220 00c0 0023     		movs	r3, #0
 7221 00c2 2385     		strh	r3, [r4, #40]	@ movhi
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7222              		.loc 1 4181 0
 7223 00c4 2368     		ldr	r3, [r4]
 7224 00c6 9A69     		ldr	r2, [r3, #24]
 7225 00c8 12F4803F 		tst	r2, #65536
 7226 00cc 5CD0     		beq	.L566
 7227              	.L567:
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7228              		.loc 1 4189 0
 7229 00ce 0023     		movs	r3, #0
 7230 00d0 84F84030 		strb	r3, [r4, #64]
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7231              		.loc 1 4195 0
 7232 00d4 48F20201 		movw	r1, #32770
 7233 00d8 2046     		mov	r0, r4
 7234              	.LVL592:
 7235 00da FFF7FEFF 		bl	I2C_Enable_IRQ
 7236              	.LVL593:
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7237              		.loc 1 4198 0
 7238 00de 2268     		ldr	r2, [r4]
 7239 00e0 1368     		ldr	r3, [r2]
 7240 00e2 43F40043 		orr	r3, r3, #32768
 7241 00e6 1360     		str	r3, [r2]
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7242              		.loc 1 4200 0
 7243 00e8 92E7     		b	.L559
 7244              	.LVL594:
 7245              	.L573:
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7246              		.loc 1 4065 0
 7247 00ea 0121     		movs	r1, #1
 7248 00ec 2046     		mov	r0, r4
ARM GAS  /tmp/cc1AMB4O.s 			page 266


 7249 00ee FFF7FEFF 		bl	I2C_Disable_IRQ
 7250              	.LVL595:
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7251              		.loc 1 4067 0
 7252 00f2 2368     		ldr	r3, [r4]
 7253 00f4 1A68     		ldr	r2, [r3]
 7254 00f6 12F4804F 		tst	r2, #16384
 7255 00fa B1D0     		beq	.L562
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7256              		.loc 1 4070 0
 7257 00fc A26B     		ldr	r2, [r4, #56]
 7258 00fe 002A     		cmp	r2, #0
 7259 0100 AED0     		beq	.L562
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7260              		.loc 1 4072 0
 7261 0102 1A68     		ldr	r2, [r3]
 7262 0104 22F48042 		bic	r2, r2, #16384
 7263 0108 1A60     		str	r2, [r3]
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7264              		.loc 1 4076 0
 7265 010a A36B     		ldr	r3, [r4, #56]
 7266 010c 244A     		ldr	r2, .L576+12
 7267 010e 1A65     		str	r2, [r3, #80]
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7268              		.loc 1 4079 0
 7269 0110 A06B     		ldr	r0, [r4, #56]
 7270 0112 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7271              	.LVL596:
 7272 0116 0028     		cmp	r0, #0
 7273 0118 A2D0     		beq	.L562
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7274              		.loc 1 4082 0
 7275 011a A06B     		ldr	r0, [r4, #56]
 7276 011c 036D     		ldr	r3, [r0, #80]
 7277 011e 9847     		blx	r3
 7278              	.LVL597:
 7279 0120 9EE7     		b	.L562
 7280              	.L574:
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 7281              		.loc 1 4089 0
 7282 0122 2368     		ldr	r3, [r4]
 7283 0124 1A68     		ldr	r2, [r3]
 7284 0126 12F4004F 		tst	r2, #32768
 7285 012a 99D0     		beq	.L562
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7286              		.loc 1 4091 0
 7287 012c 1A68     		ldr	r2, [r3]
 7288 012e 22F40042 		bic	r2, r2, #32768
 7289 0132 1A60     		str	r2, [r3]
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 7290              		.loc 1 4094 0
 7291 0134 E36B     		ldr	r3, [r4, #60]
 7292 0136 002B     		cmp	r3, #0
 7293 0138 92D0     		beq	.L562
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7294              		.loc 1 4098 0
 7295 013a 194A     		ldr	r2, .L576+12
ARM GAS  /tmp/cc1AMB4O.s 			page 267


 7296 013c 1A65     		str	r2, [r3, #80]
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 7297              		.loc 1 4101 0
 7298 013e E06B     		ldr	r0, [r4, #60]
 7299 0140 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7300              	.LVL598:
 7301 0144 0028     		cmp	r0, #0
 7302 0146 8BD0     		beq	.L562
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 7303              		.loc 1 4104 0
 7304 0148 E06B     		ldr	r0, [r4, #60]
 7305 014a 036D     		ldr	r3, [r0, #80]
 7306 014c 9847     		blx	r3
 7307              	.LVL599:
 7308 014e 87E7     		b	.L562
 7309              	.L563:
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7310              		.loc 1 4146 0
 7311 0150 2823     		movs	r3, #40
 7312 0152 84F84130 		strb	r3, [r4, #65]
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7313              		.loc 1 4147 0
 7314 0156 0022     		movs	r2, #0
 7315 0158 84F84220 		strb	r2, [r4, #66]
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7316              		.loc 1 4150 0
 7317 015c 636C     		ldr	r3, [r4, #68]
 7318 015e 43F08003 		orr	r3, r3, #128
 7319 0162 6364     		str	r3, [r4, #68]
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7320              		.loc 1 4153 0
 7321 0164 84F84020 		strb	r2, [r4, #64]
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7322              		.loc 1 4155 0
 7323 0168 0125     		movs	r5, #1
 7324              	.LVL600:
 7325 016a 51E7     		b	.L559
 7326              	.LVL601:
 7327              	.L575:
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7328              		.loc 1 4169 0
 7329 016c 2823     		movs	r3, #40
 7330 016e 84F84130 		strb	r3, [r4, #65]
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7331              		.loc 1 4170 0
 7332 0172 0022     		movs	r2, #0
 7333 0174 84F84220 		strb	r2, [r4, #66]
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7334              		.loc 1 4173 0
 7335 0178 636C     		ldr	r3, [r4, #68]
 7336 017a 43F01003 		orr	r3, r3, #16
 7337 017e 6364     		str	r3, [r4, #68]
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7338              		.loc 1 4176 0
 7339 0180 84F84020 		strb	r2, [r4, #64]
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7340              		.loc 1 4178 0
ARM GAS  /tmp/cc1AMB4O.s 			page 268


 7341 0184 0125     		movs	r5, #1
 7342 0186 43E7     		b	.L559
 7343              	.L566:
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7344              		.loc 1 4185 0
 7345 0188 0822     		movs	r2, #8
 7346 018a DA61     		str	r2, [r3, #28]
 7347 018c 9FE7     		b	.L567
 7348              	.LVL602:
 7349              	.L569:
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7350              		.loc 1 4058 0
 7351 018e 0225     		movs	r5, #2
 7352              	.LVL603:
 7353 0190 3EE7     		b	.L559
 7354              	.L577:
 7355 0192 00BF     		.align	2
 7356              	.L576:
 7357 0194 00000000 		.word	I2C_Slave_ISR_DMA
 7358 0198 00000000 		.word	I2C_DMASlaveReceiveCplt
 7359 019c 00000000 		.word	I2C_DMAError
 7360 01a0 00000000 		.word	I2C_DMAAbort
 7361              		.cfi_endproc
 7362              	.LFE171:
 7364              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7365              		.align	1
 7366              		.global	HAL_I2C_EnableListen_IT
 7367              		.syntax unified
 7368              		.thumb
 7369              		.thumb_func
 7370              		.fpu fpv5-sp-d16
 7372              	HAL_I2C_EnableListen_IT:
 7373              	.LFB172:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7374              		.loc 1 4215 0
 7375              		.cfi_startproc
 7376              		@ args = 0, pretend = 0, frame = 0
 7377              		@ frame_needed = 0, uses_anonymous_args = 0
 7378              	.LVL604:
 7379 0000 08B5     		push	{r3, lr}
 7380              	.LCFI107:
 7381              		.cfi_def_cfa_offset 8
 7382              		.cfi_offset 3, -8
 7383              		.cfi_offset 14, -4
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7384              		.loc 1 4216 0
 7385 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7386 0006 DBB2     		uxtb	r3, r3
 7387 0008 202B     		cmp	r3, #32
 7388 000a 01D0     		beq	.L582
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7389              		.loc 1 4228 0
 7390 000c 0220     		movs	r0, #2
 7391              	.LVL605:
 7392              	.L579:
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7393              		.loc 1 4230 0
ARM GAS  /tmp/cc1AMB4O.s 			page 269


 7394 000e 08BD     		pop	{r3, pc}
 7395              	.LVL606:
 7396              	.L582:
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7397              		.loc 1 4218 0
 7398 0010 2823     		movs	r3, #40
 7399 0012 80F84130 		strb	r3, [r0, #65]
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7400              		.loc 1 4219 0
 7401 0016 044B     		ldr	r3, .L583
 7402 0018 4363     		str	r3, [r0, #52]
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7403              		.loc 1 4222 0
 7404 001a 4FF40041 		mov	r1, #32768
 7405 001e FFF7FEFF 		bl	I2C_Enable_IRQ
 7406              	.LVL607:
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7407              		.loc 1 4224 0
 7408 0022 0020     		movs	r0, #0
 7409 0024 F3E7     		b	.L579
 7410              	.L584:
 7411 0026 00BF     		.align	2
 7412              	.L583:
 7413 0028 00000000 		.word	I2C_Slave_ISR_IT
 7414              		.cfi_endproc
 7415              	.LFE172:
 7417              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7418              		.align	1
 7419              		.global	HAL_I2C_DisableListen_IT
 7420              		.syntax unified
 7421              		.thumb
 7422              		.thumb_func
 7423              		.fpu fpv5-sp-d16
 7425              	HAL_I2C_DisableListen_IT:
 7426              	.LFB173:
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7427              		.loc 1 4239 0
 7428              		.cfi_startproc
 7429              		@ args = 0, pretend = 0, frame = 0
 7430              		@ frame_needed = 0, uses_anonymous_args = 0
 7431              	.LVL608:
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7432              		.loc 1 4244 0
 7433 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7434 0004 DBB2     		uxtb	r3, r3
 7435 0006 282B     		cmp	r3, #40
 7436 0008 01D0     		beq	.L592
4259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7437              		.loc 1 4259 0
 7438 000a 0220     		movs	r0, #2
 7439              	.LVL609:
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7440              		.loc 1 4261 0
 7441 000c 7047     		bx	lr
 7442              	.LVL610:
 7443              	.L592:
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
ARM GAS  /tmp/cc1AMB4O.s 			page 270


 7444              		.loc 1 4239 0
 7445 000e 10B5     		push	{r4, lr}
 7446              	.LCFI108:
 7447              		.cfi_def_cfa_offset 8
 7448              		.cfi_offset 4, -8
 7449              		.cfi_offset 14, -4
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7450              		.loc 1 4246 0
 7451 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7452              	.LVL611:
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7453              		.loc 1 4247 0
 7454 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7455 0018 02F00302 		and	r2, r2, #3
 7456              	.LVL612:
 7457 001c 1343     		orrs	r3, r3, r2
 7458 001e 0363     		str	r3, [r0, #48]
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7459              		.loc 1 4248 0
 7460 0020 2023     		movs	r3, #32
 7461 0022 80F84130 		strb	r3, [r0, #65]
4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7462              		.loc 1 4249 0
 7463 0026 0024     		movs	r4, #0
 7464 0028 80F84240 		strb	r4, [r0, #66]
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7465              		.loc 1 4250 0
 7466 002c 4463     		str	r4, [r0, #52]
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7467              		.loc 1 4253 0
 7468 002e 4FF40041 		mov	r1, #32768
 7469 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7470              	.LVL613:
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7471              		.loc 1 4255 0
 7472 0036 2046     		mov	r0, r4
4261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7473              		.loc 1 4261 0
 7474 0038 10BD     		pop	{r4, pc}
 7475              		.cfi_endproc
 7476              	.LFE173:
 7478              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7479              		.align	1
 7480              		.global	HAL_I2C_Master_Abort_IT
 7481              		.syntax unified
 7482              		.thumb
 7483              		.thumb_func
 7484              		.fpu fpv5-sp-d16
 7486              	HAL_I2C_Master_Abort_IT:
 7487              	.LFB174:
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7488              		.loc 1 4272 0
 7489              		.cfi_startproc
 7490              		@ args = 0, pretend = 0, frame = 0
 7491              		@ frame_needed = 0, uses_anonymous_args = 0
 7492              	.LVL614:
4273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1AMB4O.s 			page 271


 7493              		.loc 1 4273 0
 7494 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7495 0004 DBB2     		uxtb	r3, r3
 7496 0006 102B     		cmp	r3, #16
 7497 0008 01D0     		beq	.L603
4315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7498              		.loc 1 4315 0
 7499 000a 0120     		movs	r0, #1
 7500              	.LVL615:
 7501 000c 7047     		bx	lr
 7502              	.LVL616:
 7503              	.L603:
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7504              		.loc 1 4276 0
 7505 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7506 0012 012B     		cmp	r3, #1
 7507 0014 32D0     		beq	.L598
4272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7508              		.loc 1 4272 0 discriminator 2
 7509 0016 30B5     		push	{r4, r5, lr}
 7510              	.LCFI109:
 7511              		.cfi_def_cfa_offset 12
 7512              		.cfi_offset 4, -12
 7513              		.cfi_offset 5, -8
 7514              		.cfi_offset 14, -4
 7515 0018 83B0     		sub	sp, sp, #12
 7516              	.LCFI110:
 7517              		.cfi_def_cfa_offset 24
 7518 001a 0C46     		mov	r4, r1
 7519 001c 0546     		mov	r5, r0
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7520              		.loc 1 4276 0 discriminator 2
 7521 001e 0123     		movs	r3, #1
 7522 0020 80F84030 		strb	r3, [r0, #64]
4279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7523              		.loc 1 4279 0 discriminator 2
 7524 0024 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7525 0028 DBB2     		uxtb	r3, r3
 7526 002a 212B     		cmp	r3, #33
 7527 002c 1AD0     		beq	.L604
4284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 7528              		.loc 1 4284 0
 7529 002e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7530 0032 DBB2     		uxtb	r3, r3
 7531 0034 222B     		cmp	r3, #34
 7532 0036 1BD0     		beq	.L605
 7533              	.LVL617:
 7534              	.L596:
4295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7535              		.loc 1 4295 0
 7536 0038 6023     		movs	r3, #96
 7537 003a 85F84130 		strb	r3, [r5, #65]
4299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7538              		.loc 1 4299 0
 7539 003e 104B     		ldr	r3, .L606
 7540 0040 0093     		str	r3, [sp]
 7541 0042 4FF00073 		mov	r3, #33554432
ARM GAS  /tmp/cc1AMB4O.s 			page 272


 7542 0046 0122     		movs	r2, #1
 7543 0048 2146     		mov	r1, r4
 7544 004a 2846     		mov	r0, r5
 7545 004c FFF7FEFF 		bl	I2C_TransferConfig
 7546              	.LVL618:
4302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7547              		.loc 1 4302 0
 7548 0050 0024     		movs	r4, #0
 7549 0052 85F84040 		strb	r4, [r5, #64]
4307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7550              		.loc 1 4307 0
 7551 0056 2021     		movs	r1, #32
 7552 0058 2846     		mov	r0, r5
 7553 005a FFF7FEFF 		bl	I2C_Enable_IRQ
 7554              	.LVL619:
4309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7555              		.loc 1 4309 0
 7556 005e 2046     		mov	r0, r4
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7557              		.loc 1 4317 0
 7558 0060 03B0     		add	sp, sp, #12
 7559              	.LCFI111:
 7560              		.cfi_remember_state
 7561              		.cfi_def_cfa_offset 12
 7562              		@ sp needed
 7563 0062 30BD     		pop	{r4, r5, pc}
 7564              	.LVL620:
 7565              	.L604:
 7566              	.LCFI112:
 7567              		.cfi_restore_state
4281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7568              		.loc 1 4281 0
 7569 0064 0121     		movs	r1, #1
 7570              	.LVL621:
 7571 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 7572              	.LVL622:
4282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7573              		.loc 1 4282 0
 7574 006a 1123     		movs	r3, #17
 7575 006c 2B63     		str	r3, [r5, #48]
 7576 006e E3E7     		b	.L596
 7577              	.LVL623:
 7578              	.L605:
4286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7579              		.loc 1 4286 0
 7580 0070 0221     		movs	r1, #2
 7581              	.LVL624:
 7582 0072 FFF7FEFF 		bl	I2C_Disable_IRQ
 7583              	.LVL625:
4287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 7584              		.loc 1 4287 0
 7585 0076 1223     		movs	r3, #18
 7586 0078 2B63     		str	r3, [r5, #48]
 7587 007a DDE7     		b	.L596
 7588              	.LVL626:
 7589              	.L598:
 7590              	.LCFI113:
ARM GAS  /tmp/cc1AMB4O.s 			page 273


 7591              		.cfi_def_cfa_offset 0
 7592              		.cfi_restore 4
 7593              		.cfi_restore 5
 7594              		.cfi_restore 14
4276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7595              		.loc 1 4276 0
 7596 007c 0220     		movs	r0, #2
 7597              	.LVL627:
4317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7598              		.loc 1 4317 0
 7599 007e 7047     		bx	lr
 7600              	.L607:
 7601              		.align	2
 7602              	.L606:
 7603 0080 00400080 		.word	-2147467264
 7604              		.cfi_endproc
 7605              	.LFE174:
 7607              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7608              		.align	1
 7609              		.global	HAL_I2C_EV_IRQHandler
 7610              		.syntax unified
 7611              		.thumb
 7612              		.thumb_func
 7613              		.fpu fpv5-sp-d16
 7615              	HAL_I2C_EV_IRQHandler:
 7616              	.LFB175:
4334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7617              		.loc 1 4334 0
 7618              		.cfi_startproc
 7619              		@ args = 0, pretend = 0, frame = 0
 7620              		@ frame_needed = 0, uses_anonymous_args = 0
 7621              	.LVL628:
 7622 0000 08B5     		push	{r3, lr}
 7623              	.LCFI114:
 7624              		.cfi_def_cfa_offset 8
 7625              		.cfi_offset 3, -8
 7626              		.cfi_offset 14, -4
4336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7627              		.loc 1 4336 0
 7628 0002 0368     		ldr	r3, [r0]
 7629 0004 9969     		ldr	r1, [r3, #24]
 7630              	.LVL629:
4337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7631              		.loc 1 4337 0
 7632 0006 1A68     		ldr	r2, [r3]
 7633              	.LVL630:
4340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7634              		.loc 1 4340 0
 7635 0008 436B     		ldr	r3, [r0, #52]
 7636 000a 03B1     		cbz	r3, .L608
4342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7637              		.loc 1 4342 0
 7638 000c 9847     		blx	r3
 7639              	.LVL631:
 7640              	.L608:
4344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7641              		.loc 1 4344 0
ARM GAS  /tmp/cc1AMB4O.s 			page 274


 7642 000e 08BD     		pop	{r3, pc}
 7643              		.cfi_endproc
 7644              	.LFE175:
 7646              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7647              		.align	1
 7648              		.weak	HAL_I2C_MasterTxCpltCallback
 7649              		.syntax unified
 7650              		.thumb
 7651              		.thumb_func
 7652              		.fpu fpv5-sp-d16
 7654              	HAL_I2C_MasterTxCpltCallback:
 7655              	.LFB177:
4402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7656              		.loc 1 4402 0
 7657              		.cfi_startproc
 7658              		@ args = 0, pretend = 0, frame = 0
 7659              		@ frame_needed = 0, uses_anonymous_args = 0
 7660              		@ link register save eliminated.
 7661              	.LVL632:
4409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7662              		.loc 1 4409 0
 7663 0000 7047     		bx	lr
 7664              		.cfi_endproc
 7665              	.LFE177:
 7667              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7668              		.align	1
 7669              		.weak	HAL_I2C_MasterRxCpltCallback
 7670              		.syntax unified
 7671              		.thumb
 7672              		.thumb_func
 7673              		.fpu fpv5-sp-d16
 7675              	HAL_I2C_MasterRxCpltCallback:
 7676              	.LFB178:
4418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7677              		.loc 1 4418 0
 7678              		.cfi_startproc
 7679              		@ args = 0, pretend = 0, frame = 0
 7680              		@ frame_needed = 0, uses_anonymous_args = 0
 7681              		@ link register save eliminated.
 7682              	.LVL633:
4425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7683              		.loc 1 4425 0
 7684 0000 7047     		bx	lr
 7685              		.cfi_endproc
 7686              	.LFE178:
 7688              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7689              		.align	1
 7690              		.syntax unified
 7691              		.thumb
 7692              		.thumb_func
 7693              		.fpu fpv5-sp-d16
 7695              	I2C_ITMasterSeqCplt:
 7696              	.LFB197:
5376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7697              		.loc 1 5376 0
 7698              		.cfi_startproc
 7699              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc1AMB4O.s 			page 275


 7700              		@ frame_needed = 0, uses_anonymous_args = 0
 7701              	.LVL634:
 7702 0000 38B5     		push	{r3, r4, r5, lr}
 7703              	.LCFI115:
 7704              		.cfi_def_cfa_offset 16
 7705              		.cfi_offset 3, -16
 7706              		.cfi_offset 4, -12
 7707              		.cfi_offset 5, -8
 7708              		.cfi_offset 14, -4
 7709 0002 0446     		mov	r4, r0
5378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7710              		.loc 1 5378 0
 7711 0004 0023     		movs	r3, #0
 7712 0006 80F84230 		strb	r3, [r0, #66]
5382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7713              		.loc 1 5382 0
 7714 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7715 000e DBB2     		uxtb	r3, r3
 7716 0010 212B     		cmp	r3, #33
 7717 0012 0FD0     		beq	.L617
5404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7718              		.loc 1 5404 0
 7719 0014 2023     		movs	r3, #32
 7720 0016 80F84130 		strb	r3, [r0, #65]
5405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7721              		.loc 1 5405 0
 7722 001a 1223     		movs	r3, #18
 7723 001c 0363     		str	r3, [r0, #48]
5406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7724              		.loc 1 5406 0
 7725 001e 0025     		movs	r5, #0
 7726 0020 4563     		str	r5, [r0, #52]
5409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7727              		.loc 1 5409 0
 7728 0022 0221     		movs	r1, #2
 7729 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7730              	.LVL635:
5412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7731              		.loc 1 5412 0
 7732 0028 84F84050 		strb	r5, [r4, #64]
5418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7733              		.loc 1 5418 0
 7734 002c 2046     		mov	r0, r4
 7735 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7736              	.LVL636:
 7737              	.L613:
5421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7738              		.loc 1 5421 0
 7739 0032 38BD     		pop	{r3, r4, r5, pc}
 7740              	.LVL637:
 7741              	.L617:
5384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7742              		.loc 1 5384 0
 7743 0034 2023     		movs	r3, #32
 7744 0036 80F84130 		strb	r3, [r0, #65]
5385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7745              		.loc 1 5385 0
ARM GAS  /tmp/cc1AMB4O.s 			page 276


 7746 003a 1123     		movs	r3, #17
 7747 003c 0363     		str	r3, [r0, #48]
5386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7748              		.loc 1 5386 0
 7749 003e 0025     		movs	r5, #0
 7750 0040 4563     		str	r5, [r0, #52]
5389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7751              		.loc 1 5389 0
 7752 0042 0121     		movs	r1, #1
 7753 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7754              	.LVL638:
5392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7755              		.loc 1 5392 0
 7756 0048 84F84050 		strb	r5, [r4, #64]
5398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7757              		.loc 1 5398 0
 7758 004c 2046     		mov	r0, r4
 7759 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7760              	.LVL639:
 7761 0052 EEE7     		b	.L613
 7762              		.cfi_endproc
 7763              	.LFE197:
 7765              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7766              		.align	1
 7767              		.weak	HAL_I2C_SlaveTxCpltCallback
 7768              		.syntax unified
 7769              		.thumb
 7770              		.thumb_func
 7771              		.fpu fpv5-sp-d16
 7773              	HAL_I2C_SlaveTxCpltCallback:
 7774              	.LFB179:
4433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7775              		.loc 1 4433 0
 7776              		.cfi_startproc
 7777              		@ args = 0, pretend = 0, frame = 0
 7778              		@ frame_needed = 0, uses_anonymous_args = 0
 7779              		@ link register save eliminated.
 7780              	.LVL640:
4440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7781              		.loc 1 4440 0
 7782 0000 7047     		bx	lr
 7783              		.cfi_endproc
 7784              	.LFE179:
 7786              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7787              		.align	1
 7788              		.weak	HAL_I2C_SlaveRxCpltCallback
 7789              		.syntax unified
 7790              		.thumb
 7791              		.thumb_func
 7792              		.fpu fpv5-sp-d16
 7794              	HAL_I2C_SlaveRxCpltCallback:
 7795              	.LFB180:
4449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7796              		.loc 1 4449 0
 7797              		.cfi_startproc
 7798              		@ args = 0, pretend = 0, frame = 0
 7799              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc1AMB4O.s 			page 277


 7800              		@ link register save eliminated.
 7801              	.LVL641:
4456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7802              		.loc 1 4456 0
 7803 0000 7047     		bx	lr
 7804              		.cfi_endproc
 7805              	.LFE180:
 7807              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7808              		.align	1
 7809              		.syntax unified
 7810              		.thumb
 7811              		.thumb_func
 7812              		.fpu fpv5-sp-d16
 7814              	I2C_ITSlaveSeqCplt:
 7815              	.LFB198:
5429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7816              		.loc 1 5429 0
 7817              		.cfi_startproc
 7818              		@ args = 0, pretend = 0, frame = 0
 7819              		@ frame_needed = 0, uses_anonymous_args = 0
 7820              	.LVL642:
 7821 0000 10B5     		push	{r4, lr}
 7822              	.LCFI116:
 7823              		.cfi_def_cfa_offset 8
 7824              		.cfi_offset 4, -8
 7825              		.cfi_offset 14, -4
 7826 0002 0446     		mov	r4, r0
5430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7827              		.loc 1 5430 0
 7828 0004 0368     		ldr	r3, [r0]
 7829 0006 1A68     		ldr	r2, [r3]
 7830              	.LVL643:
5433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7831              		.loc 1 5433 0
 7832 0008 0021     		movs	r1, #0
 7833 000a 80F84210 		strb	r1, [r0, #66]
5436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7834              		.loc 1 5436 0
 7835 000e 12F4804F 		tst	r2, #16384
 7836 0012 0ED0     		beq	.L621
5439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7837              		.loc 1 5439 0
 7838 0014 1A68     		ldr	r2, [r3]
 7839              	.LVL644:
 7840 0016 22F48042 		bic	r2, r2, #16384
 7841 001a 1A60     		str	r2, [r3]
 7842              	.L622:
5451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7843              		.loc 1 5451 0
 7844 001c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7845 0020 DBB2     		uxtb	r3, r3
 7846 0022 292B     		cmp	r3, #41
 7847 0024 0DD0     		beq	.L626
5471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7848              		.loc 1 5471 0
 7849 0026 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7850 002a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc1AMB4O.s 			page 278


 7851 002c 2A2B     		cmp	r3, #42
 7852 002e 18D0     		beq	.L627
 7853              	.LVL645:
 7854              	.L620:
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7855              		.loc 1 5494 0
 7856 0030 10BD     		pop	{r4, pc}
 7857              	.LVL646:
 7858              	.L621:
5441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7859              		.loc 1 5441 0
 7860 0032 12F4004F 		tst	r2, #32768
 7861 0036 F1D0     		beq	.L622
5444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7862              		.loc 1 5444 0
 7863 0038 1A68     		ldr	r2, [r3]
 7864              	.LVL647:
 7865 003a 22F40042 		bic	r2, r2, #32768
 7866 003e 1A60     		str	r2, [r3]
 7867 0040 ECE7     		b	.L622
 7868              	.L626:
5454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7869              		.loc 1 5454 0
 7870 0042 2823     		movs	r3, #40
 7871 0044 84F84130 		strb	r3, [r4, #65]
5455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7872              		.loc 1 5455 0
 7873 0048 2123     		movs	r3, #33
 7874 004a 2363     		str	r3, [r4, #48]
5458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7875              		.loc 1 5458 0
 7876 004c 0121     		movs	r1, #1
 7877 004e 2046     		mov	r0, r4
 7878              	.LVL648:
 7879 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 7880              	.LVL649:
5461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7881              		.loc 1 5461 0
 7882 0054 0023     		movs	r3, #0
 7883 0056 84F84030 		strb	r3, [r4, #64]
5467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7884              		.loc 1 5467 0
 7885 005a 2046     		mov	r0, r4
 7886 005c FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7887              	.LVL650:
 7888 0060 E6E7     		b	.L620
 7889              	.LVL651:
 7890              	.L627:
5474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7891              		.loc 1 5474 0
 7892 0062 2823     		movs	r3, #40
 7893 0064 84F84130 		strb	r3, [r4, #65]
5475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7894              		.loc 1 5475 0
 7895 0068 2223     		movs	r3, #34
 7896 006a 2363     		str	r3, [r4, #48]
5478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 279


 7897              		.loc 1 5478 0
 7898 006c 0221     		movs	r1, #2
 7899 006e 2046     		mov	r0, r4
 7900              	.LVL652:
 7901 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 7902              	.LVL653:
5481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7903              		.loc 1 5481 0
 7904 0074 0023     		movs	r3, #0
 7905 0076 84F84030 		strb	r3, [r4, #64]
5487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7906              		.loc 1 5487 0
 7907 007a 2046     		mov	r0, r4
 7908 007c FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7909              	.LVL654:
5494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7910              		.loc 1 5494 0
 7911 0080 D6E7     		b	.L620
 7912              		.cfi_endproc
 7913              	.LFE198:
 7915              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7916              		.align	1
 7917              		.syntax unified
 7918              		.thumb
 7919              		.thumb_func
 7920              		.fpu fpv5-sp-d16
 7922              	I2C_DMASlaveTransmitCplt:
 7923              	.LFB206:
6075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7924              		.loc 1 6075 0
 7925              		.cfi_startproc
 7926              		@ args = 0, pretend = 0, frame = 0
 7927              		@ frame_needed = 0, uses_anonymous_args = 0
 7928              	.LVL655:
 7929 0000 08B5     		push	{r3, lr}
 7930              	.LCFI117:
 7931              		.cfi_def_cfa_offset 8
 7932              		.cfi_offset 3, -8
 7933              		.cfi_offset 14, -4
6076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7934              		.loc 1 6076 0
 7935 0002 806B     		ldr	r0, [r0, #56]
 7936              	.LVL656:
6077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7937              		.loc 1 6077 0
 7938 0004 C36A     		ldr	r3, [r0, #44]
 7939              	.LVL657:
6079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 7940              		.loc 1 6079 0
 7941 0006 002B     		cmp	r3, #0
 7942 0008 18BF     		it	ne
 7943 000a B3F1807F 		cmpne	r3, #16777216
 7944 000e 00D0     		beq	.L631
 7945              	.LVL658:
 7946              	.L628:
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7947              		.loc 1 6094 0
ARM GAS  /tmp/cc1AMB4O.s 			page 280


 7948 0010 08BD     		pop	{r3, pc}
 7949              	.LVL659:
 7950              	.L631:
6082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7951              		.loc 1 6082 0
 7952 0012 0268     		ldr	r2, [r0]
 7953 0014 1368     		ldr	r3, [r2]
 7954              	.LVL660:
 7955 0016 23F48043 		bic	r3, r3, #16384
 7956 001a 1360     		str	r3, [r2]
6086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 7957              		.loc 1 6086 0
 7958 001c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7959              	.LVL661:
6094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7960              		.loc 1 6094 0
 7961 0020 F6E7     		b	.L628
 7962              		.cfi_endproc
 7963              	.LFE206:
 7965              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7966              		.align	1
 7967              		.syntax unified
 7968              		.thumb
 7969              		.thumb_func
 7970              		.fpu fpv5-sp-d16
 7972              	I2C_DMASlaveReceiveCplt:
 7973              	.LFB208:
6150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7974              		.loc 1 6150 0
 7975              		.cfi_startproc
 7976              		@ args = 0, pretend = 0, frame = 0
 7977              		@ frame_needed = 0, uses_anonymous_args = 0
 7978              	.LVL662:
 7979 0000 08B5     		push	{r3, lr}
 7980              	.LCFI118:
 7981              		.cfi_def_cfa_offset 8
 7982              		.cfi_offset 3, -8
 7983              		.cfi_offset 14, -4
6151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7984              		.loc 1 6151 0
 7985 0002 806B     		ldr	r0, [r0, #56]
 7986              	.LVL663:
6152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 7987              		.loc 1 6152 0
 7988 0004 C26A     		ldr	r2, [r0, #44]
 7989              	.LVL664:
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7990              		.loc 1 6154 0
 7991 0006 C36B     		ldr	r3, [r0, #60]
 7992 0008 1B68     		ldr	r3, [r3]
 7993 000a 5B68     		ldr	r3, [r3, #4]
 7994 000c 4BB9     		cbnz	r3, .L632
6154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7995              		.loc 1 6154 0 is_stmt 0 discriminator 1
 7996 000e 12F5803F 		cmn	r2, #65536
 7997 0012 06D0     		beq	.L632
6158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 281


 7998              		.loc 1 6158 0 is_stmt 1
 7999 0014 0268     		ldr	r2, [r0]
 8000              	.LVL665:
 8001 0016 1368     		ldr	r3, [r2]
 8002 0018 23F40043 		bic	r3, r3, #32768
 8003 001c 1360     		str	r3, [r2]
6161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8004              		.loc 1 6161 0
 8005 001e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8006              	.LVL666:
 8007              	.L632:
6169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8008              		.loc 1 6169 0
 8009 0022 08BD     		pop	{r3, pc}
 8010              		.cfi_endproc
 8011              	.LFE208:
 8013              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 8014              		.align	1
 8015              		.weak	HAL_I2C_AddrCallback
 8016              		.syntax unified
 8017              		.thumb
 8018              		.thumb_func
 8019              		.fpu fpv5-sp-d16
 8021              	HAL_I2C_AddrCallback:
 8022              	.LFB181:
4467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8023              		.loc 1 4467 0
 8024              		.cfi_startproc
 8025              		@ args = 0, pretend = 0, frame = 0
 8026              		@ frame_needed = 0, uses_anonymous_args = 0
 8027              		@ link register save eliminated.
 8028              	.LVL667:
4476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8029              		.loc 1 4476 0
 8030 0000 7047     		bx	lr
 8031              		.cfi_endproc
 8032              	.LFE181:
 8034              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 8035              		.align	1
 8036              		.syntax unified
 8037              		.thumb
 8038              		.thumb_func
 8039              		.fpu fpv5-sp-d16
 8041              	I2C_ITAddrCplt:
 8042              	.LFB196:
5281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint8_t transferdirection;
 8043              		.loc 1 5281 0
 8044              		.cfi_startproc
 8045              		@ args = 0, pretend = 0, frame = 0
 8046              		@ frame_needed = 0, uses_anonymous_args = 0
 8047              	.LVL668:
 8048 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8049              	.LCFI119:
 8050              		.cfi_def_cfa_offset 24
 8051              		.cfi_offset 3, -24
 8052              		.cfi_offset 4, -20
 8053              		.cfi_offset 5, -16
ARM GAS  /tmp/cc1AMB4O.s 			page 282


 8054              		.cfi_offset 6, -12
 8055              		.cfi_offset 7, -8
 8056              		.cfi_offset 14, -4
5291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8057              		.loc 1 5291 0
 8058 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8059 0006 03F02803 		and	r3, r3, #40
 8060 000a 282B     		cmp	r3, #40
 8061 000c 06D0     		beq	.L642
5363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8062              		.loc 1 5363 0
 8063 000e 0368     		ldr	r3, [r0]
 8064 0010 0822     		movs	r2, #8
 8065 0012 DA61     		str	r2, [r3, #28]
5366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8066              		.loc 1 5366 0
 8067 0014 0023     		movs	r3, #0
 8068 0016 80F84030 		strb	r3, [r0, #64]
 8069              	.LVL669:
 8070              	.L636:
5368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8071              		.loc 1 5368 0
 8072 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8073              	.LVL670:
 8074              	.L642:
 8075 001c 0446     		mov	r4, r0
5293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 8076              		.loc 1 5293 0
 8077 001e 0368     		ldr	r3, [r0]
 8078 0020 9E69     		ldr	r6, [r3, #24]
 8079 0022 C6F30046 		ubfx	r6, r6, #16, #1
 8080              	.LVL671:
5294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 8081              		.loc 1 5294 0
 8082 0026 9A69     		ldr	r2, [r3, #24]
 8083 0028 120C     		lsrs	r2, r2, #16
 8084 002a 02F0FE05 		and	r5, r2, #254
 8085              	.LVL672:
5295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 8086              		.loc 1 5295 0
 8087 002e 9A68     		ldr	r2, [r3, #8]
 8088 0030 C2F30902 		ubfx	r2, r2, #0, #10
 8089              	.LVL673:
5296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8090              		.loc 1 5296 0
 8091 0034 DF68     		ldr	r7, [r3, #12]
 8092 0036 07F0FE07 		and	r7, r7, #254
 8093              	.LVL674:
5299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8094              		.loc 1 5299 0
 8095 003a C168     		ldr	r1, [r0, #12]
 8096              	.LVL675:
 8097 003c 0229     		cmp	r1, #2
 8098 003e 22D1     		bne	.L638
5301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8099              		.loc 1 5301 0
 8100 0040 85EAD215 		eor	r5, r5, r2, lsr #7
ARM GAS  /tmp/cc1AMB4O.s 			page 283


 8101              	.LVL676:
 8102 0044 15F0060F 		tst	r5, #6
 8103 0048 10D1     		bne	.L639
 8104              	.LVL677:
5304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 8105              		.loc 1 5304 0
 8106 004a 816C     		ldr	r1, [r0, #72]
 8107 004c 0131     		adds	r1, r1, #1
 8108 004e 8164     		str	r1, [r0, #72]
5305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 8109              		.loc 1 5305 0
 8110 0050 816C     		ldr	r1, [r0, #72]
 8111 0052 0229     		cmp	r1, #2
 8112 0054 E1D1     		bne	.L636
5308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8113              		.loc 1 5308 0
 8114 0056 0021     		movs	r1, #0
 8115 0058 8164     		str	r1, [r0, #72]
5311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8116              		.loc 1 5311 0
 8117 005a 0820     		movs	r0, #8
 8118              	.LVL678:
 8119 005c D861     		str	r0, [r3, #28]
5314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8120              		.loc 1 5314 0
 8121 005e 84F84010 		strb	r1, [r4, #64]
5320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8122              		.loc 1 5320 0
 8123 0062 3146     		mov	r1, r6
 8124 0064 2046     		mov	r0, r4
 8125 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8126              	.LVL679:
 8127 006a D6E7     		b	.L636
 8128              	.LVL680:
 8129              	.L639:
5329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8130              		.loc 1 5329 0
 8131 006c 4FF40041 		mov	r1, #32768
 8132 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 8133              	.LVL681:
5332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8134              		.loc 1 5332 0
 8135 0074 0023     		movs	r3, #0
 8136 0076 84F84030 		strb	r3, [r4, #64]
5338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8137              		.loc 1 5338 0
 8138 007a 3A46     		mov	r2, r7
 8139 007c 3146     		mov	r1, r6
 8140 007e 2046     		mov	r0, r4
 8141 0080 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8142              	.LVL682:
 8143 0084 C9E7     		b	.L636
 8144              	.LVL683:
 8145              	.L638:
5346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8146              		.loc 1 5346 0
 8147 0086 4FF40041 		mov	r1, #32768
ARM GAS  /tmp/cc1AMB4O.s 			page 284


 8148 008a FFF7FEFF 		bl	I2C_Disable_IRQ
 8149              	.LVL684:
5349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8150              		.loc 1 5349 0
 8151 008e 0023     		movs	r3, #0
 8152 0090 84F84030 		strb	r3, [r4, #64]
5355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8153              		.loc 1 5355 0
 8154 0094 2A46     		mov	r2, r5
 8155 0096 3146     		mov	r1, r6
 8156 0098 2046     		mov	r0, r4
 8157 009a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 8158              	.LVL685:
 8159 009e BCE7     		b	.L636
 8160              		.cfi_endproc
 8161              	.LFE196:
 8163              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8164              		.align	1
 8165              		.weak	HAL_I2C_ListenCpltCallback
 8166              		.syntax unified
 8167              		.thumb
 8168              		.thumb_func
 8169              		.fpu fpv5-sp-d16
 8171              	HAL_I2C_ListenCpltCallback:
 8172              	.LFB182:
4485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8173              		.loc 1 4485 0
 8174              		.cfi_startproc
 8175              		@ args = 0, pretend = 0, frame = 0
 8176              		@ frame_needed = 0, uses_anonymous_args = 0
 8177              		@ link register save eliminated.
 8178              	.LVL686:
4492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8179              		.loc 1 4492 0
 8180 0000 7047     		bx	lr
 8181              		.cfi_endproc
 8182              	.LFE182:
 8184              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8185              		.align	1
 8186              		.syntax unified
 8187              		.thumb
 8188              		.thumb_func
 8189              		.fpu fpv5-sp-d16
 8191              	I2C_ITListenCplt:
 8192              	.LFB201:
5805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Reset handle parameters */
 8193              		.loc 1 5805 0
 8194              		.cfi_startproc
 8195              		@ args = 0, pretend = 0, frame = 0
 8196              		@ frame_needed = 0, uses_anonymous_args = 0
 8197              	.LVL687:
 8198 0000 10B5     		push	{r4, lr}
 8199              	.LCFI120:
 8200              		.cfi_def_cfa_offset 8
 8201              		.cfi_offset 4, -8
 8202              		.cfi_offset 14, -4
 8203 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc1AMB4O.s 			page 285


5807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8204              		.loc 1 5807 0
 8205 0004 174B     		ldr	r3, .L647
 8206 0006 C362     		str	r3, [r0, #44]
5808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8207              		.loc 1 5808 0
 8208 0008 0023     		movs	r3, #0
 8209 000a 0363     		str	r3, [r0, #48]
5809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8210              		.loc 1 5809 0
 8211 000c 2022     		movs	r2, #32
 8212 000e 80F84120 		strb	r2, [r0, #65]
5810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8213              		.loc 1 5810 0
 8214 0012 80F84230 		strb	r3, [r0, #66]
5811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8215              		.loc 1 5811 0
 8216 0016 4363     		str	r3, [r0, #52]
5814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8217              		.loc 1 5814 0
 8218 0018 11F0040F 		tst	r1, #4
 8219 001c 12D0     		beq	.L645
5817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8220              		.loc 1 5817 0
 8221 001e 0368     		ldr	r3, [r0]
 8222 0020 5A6A     		ldr	r2, [r3, #36]
 8223 0022 436A     		ldr	r3, [r0, #36]
 8224 0024 1A70     		strb	r2, [r3]
5820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8225              		.loc 1 5820 0
 8226 0026 436A     		ldr	r3, [r0, #36]
 8227 0028 0133     		adds	r3, r3, #1
 8228 002a 4362     		str	r3, [r0, #36]
5822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8229              		.loc 1 5822 0
 8230 002c 038D     		ldrh	r3, [r0, #40]
 8231 002e 4BB1     		cbz	r3, .L645
5824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8232              		.loc 1 5824 0
 8233 0030 013B     		subs	r3, r3, #1
 8234 0032 0385     		strh	r3, [r0, #40]	@ movhi
5825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8235              		.loc 1 5825 0
 8236 0034 438D     		ldrh	r3, [r0, #42]
 8237 0036 013B     		subs	r3, r3, #1
 8238 0038 9BB2     		uxth	r3, r3
 8239 003a 4385     		strh	r3, [r0, #42]	@ movhi
5828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8240              		.loc 1 5828 0
 8241 003c 436C     		ldr	r3, [r0, #68]
 8242 003e 43F00403 		orr	r3, r3, #4
 8243 0042 4364     		str	r3, [r0, #68]
 8244              	.L645:
5833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8245              		.loc 1 5833 0
 8246 0044 48F20301 		movw	r1, #32771
 8247              	.LVL688:
ARM GAS  /tmp/cc1AMB4O.s 			page 286


 8248 0048 2046     		mov	r0, r4
 8249              	.LVL689:
 8250 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 8251              	.LVL690:
5836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8252              		.loc 1 5836 0
 8253 004e 2368     		ldr	r3, [r4]
 8254 0050 1022     		movs	r2, #16
 8255 0052 DA61     		str	r2, [r3, #28]
5839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8256              		.loc 1 5839 0
 8257 0054 0023     		movs	r3, #0
 8258 0056 84F84030 		strb	r3, [r4, #64]
5845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8259              		.loc 1 5845 0
 8260 005a 2046     		mov	r0, r4
 8261 005c FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8262              	.LVL691:
5847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8263              		.loc 1 5847 0
 8264 0060 10BD     		pop	{r4, pc}
 8265              	.LVL692:
 8266              	.L648:
 8267 0062 00BF     		.align	2
 8268              	.L647:
 8269 0064 0000FFFF 		.word	-65536
 8270              		.cfi_endproc
 8271              	.LFE201:
 8273              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8274              		.align	1
 8275              		.weak	HAL_I2C_MemTxCpltCallback
 8276              		.syntax unified
 8277              		.thumb
 8278              		.thumb_func
 8279              		.fpu fpv5-sp-d16
 8281              	HAL_I2C_MemTxCpltCallback:
 8282              	.LFB183:
4501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8283              		.loc 1 4501 0
 8284              		.cfi_startproc
 8285              		@ args = 0, pretend = 0, frame = 0
 8286              		@ frame_needed = 0, uses_anonymous_args = 0
 8287              		@ link register save eliminated.
 8288              	.LVL693:
4508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8289              		.loc 1 4508 0
 8290 0000 7047     		bx	lr
 8291              		.cfi_endproc
 8292              	.LFE183:
 8294              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8295              		.align	1
 8296              		.weak	HAL_I2C_MemRxCpltCallback
 8297              		.syntax unified
 8298              		.thumb
 8299              		.thumb_func
 8300              		.fpu fpv5-sp-d16
 8302              	HAL_I2C_MemRxCpltCallback:
ARM GAS  /tmp/cc1AMB4O.s 			page 287


 8303              	.LFB184:
4517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8304              		.loc 1 4517 0
 8305              		.cfi_startproc
 8306              		@ args = 0, pretend = 0, frame = 0
 8307              		@ frame_needed = 0, uses_anonymous_args = 0
 8308              		@ link register save eliminated.
 8309              	.LVL694:
4524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8310              		.loc 1 4524 0
 8311 0000 7047     		bx	lr
 8312              		.cfi_endproc
 8313              	.LFE184:
 8315              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8316              		.align	1
 8317              		.weak	HAL_I2C_ErrorCallback
 8318              		.syntax unified
 8319              		.thumb
 8320              		.thumb_func
 8321              		.fpu fpv5-sp-d16
 8323              	HAL_I2C_ErrorCallback:
 8324              	.LFB185:
4533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8325              		.loc 1 4533 0
 8326              		.cfi_startproc
 8327              		@ args = 0, pretend = 0, frame = 0
 8328              		@ frame_needed = 0, uses_anonymous_args = 0
 8329              		@ link register save eliminated.
 8330              	.LVL695:
4540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8331              		.loc 1 4540 0
 8332 0000 7047     		bx	lr
 8333              		.cfi_endproc
 8334              	.LFE185:
 8336              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8337              		.align	1
 8338              		.weak	HAL_I2C_AbortCpltCallback
 8339              		.syntax unified
 8340              		.thumb
 8341              		.thumb_func
 8342              		.fpu fpv5-sp-d16
 8344              	HAL_I2C_AbortCpltCallback:
 8345              	.LFB186:
4549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8346              		.loc 1 4549 0
 8347              		.cfi_startproc
 8348              		@ args = 0, pretend = 0, frame = 0
 8349              		@ frame_needed = 0, uses_anonymous_args = 0
 8350              		@ link register save eliminated.
 8351              	.LVL696:
4556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8352              		.loc 1 4556 0
 8353 0000 7047     		bx	lr
 8354              		.cfi_endproc
 8355              	.LFE186:
 8357              		.section	.text.I2C_TreatErrorCallback,"ax",%progbits
 8358              		.align	1
ARM GAS  /tmp/cc1AMB4O.s 			page 288


 8359              		.syntax unified
 8360              		.thumb
 8361              		.thumb_func
 8362              		.fpu fpv5-sp-d16
 8364              	I2C_TreatErrorCallback:
 8365              	.LFB203:
5968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8366              		.loc 1 5968 0
 8367              		.cfi_startproc
 8368              		@ args = 0, pretend = 0, frame = 0
 8369              		@ frame_needed = 0, uses_anonymous_args = 0
 8370              	.LVL697:
 8371 0000 08B5     		push	{r3, lr}
 8372              	.LCFI121:
 8373              		.cfi_def_cfa_offset 8
 8374              		.cfi_offset 3, -8
 8375              		.cfi_offset 14, -4
5969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8376              		.loc 1 5969 0
 8377 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8378 0006 DBB2     		uxtb	r3, r3
 8379 0008 602B     		cmp	r3, #96
 8380 000a 06D0     		beq	.L657
5986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8381              		.loc 1 5986 0
 8382 000c 0023     		movs	r3, #0
 8383 000e 0363     		str	r3, [r0, #48]
5989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8384              		.loc 1 5989 0
 8385 0010 80F84030 		strb	r3, [r0, #64]
5995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8386              		.loc 1 5995 0
 8387 0014 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8388              	.LVL698:
 8389              	.L653:
5998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8390              		.loc 1 5998 0
 8391 0018 08BD     		pop	{r3, pc}
 8392              	.LVL699:
 8393              	.L657:
5971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8394              		.loc 1 5971 0
 8395 001a 2023     		movs	r3, #32
 8396 001c 80F84130 		strb	r3, [r0, #65]
5972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8397              		.loc 1 5972 0
 8398 0020 0023     		movs	r3, #0
 8399 0022 0363     		str	r3, [r0, #48]
5975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8400              		.loc 1 5975 0
 8401 0024 80F84030 		strb	r3, [r0, #64]
5981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8402              		.loc 1 5981 0
 8403 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8404              	.LVL700:
 8405 002c F4E7     		b	.L653
 8406              		.cfi_endproc
ARM GAS  /tmp/cc1AMB4O.s 			page 289


 8407              	.LFE203:
 8409              		.section	.text.I2C_ITError,"ax",%progbits
 8410              		.align	1
 8411              		.syntax unified
 8412              		.thumb
 8413              		.thumb_func
 8414              		.fpu fpv5-sp-d16
 8416              	I2C_ITError:
 8417              	.LFB202:
5856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8418              		.loc 1 5856 0
 8419              		.cfi_startproc
 8420              		@ args = 0, pretend = 0, frame = 0
 8421              		@ frame_needed = 0, uses_anonymous_args = 0
 8422              	.LVL701:
 8423 0000 10B5     		push	{r4, lr}
 8424              	.LCFI122:
 8425              		.cfi_def_cfa_offset 8
 8426              		.cfi_offset 4, -8
 8427              		.cfi_offset 14, -4
 8428 0002 0446     		mov	r4, r0
5857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmppreviousstate;
 8429              		.loc 1 5857 0
 8430 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8431              	.LVL702:
5861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8432              		.loc 1 5861 0
 8433 0008 0022     		movs	r2, #0
 8434 000a 80F84220 		strb	r2, [r0, #66]
5862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8435              		.loc 1 5862 0
 8436 000e 3B48     		ldr	r0, .L670
 8437              	.LVL703:
 8438 0010 E062     		str	r0, [r4, #44]
5863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8439              		.loc 1 5863 0
 8440 0012 6285     		strh	r2, [r4, #42]	@ movhi
5866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8441              		.loc 1 5866 0
 8442 0014 626C     		ldr	r2, [r4, #68]
 8443 0016 1143     		orrs	r1, r1, r2
 8444              	.LVL704:
 8445 0018 6164     		str	r1, [r4, #68]
5870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8446              		.loc 1 5870 0
 8447 001a 283B     		subs	r3, r3, #40
 8448              	.LVL705:
 8449 001c DBB2     		uxtb	r3, r3
5869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8450              		.loc 1 5869 0
 8451 001e 022B     		cmp	r3, #2
 8452 0020 2DD8     		bhi	.L659
5874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8453              		.loc 1 5874 0
 8454 0022 0321     		movs	r1, #3
 8455 0024 2046     		mov	r0, r4
 8456 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  /tmp/cc1AMB4O.s 			page 290


 8457              	.LVL706:
5877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8458              		.loc 1 5877 0
 8459 002a 2823     		movs	r3, #40
 8460 002c 84F84130 		strb	r3, [r4, #65]
5878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8461              		.loc 1 5878 0
 8462 0030 334B     		ldr	r3, .L670+4
 8463 0032 6363     		str	r3, [r4, #52]
 8464              	.L660:
5896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
 8465              		.loc 1 5896 0
 8466 0034 236B     		ldr	r3, [r4, #48]
 8467              	.LVL707:
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8468              		.loc 1 5897 0
 8469 0036 A26B     		ldr	r2, [r4, #56]
 8470 0038 002A     		cmp	r2, #0
 8471 003a 34D0     		beq	.L662
5897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8472              		.loc 1 5897 0 is_stmt 0 discriminator 1
 8473 003c 212B     		cmp	r3, #33
 8474 003e 18BF     		it	ne
 8475 0040 112B     		cmpne	r3, #17
 8476 0042 30D1     		bne	.L662
5900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8477              		.loc 1 5900 0 is_stmt 1
 8478 0044 2368     		ldr	r3, [r4]
 8479              	.LVL708:
 8480 0046 1A68     		ldr	r2, [r3]
 8481 0048 12F4804F 		tst	r2, #16384
 8482 004c 03D0     		beq	.L663
5902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8483              		.loc 1 5902 0
 8484 004e 1A68     		ldr	r2, [r3]
 8485 0050 22F48042 		bic	r2, r2, #16384
 8486 0054 1A60     		str	r2, [r3]
 8487              	.L663:
5905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8488              		.loc 1 5905 0
 8489 0056 A06B     		ldr	r0, [r4, #56]
 8490 0058 FFF7FEFF 		bl	HAL_DMA_GetState
 8491              	.LVL709:
 8492 005c 0128     		cmp	r0, #1
 8493 005e 1ED0     		beq	.L664
5909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8494              		.loc 1 5909 0
 8495 0060 A36B     		ldr	r3, [r4, #56]
 8496 0062 284A     		ldr	r2, .L670+8
 8497 0064 1A65     		str	r2, [r3, #80]
5912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8498              		.loc 1 5912 0
 8499 0066 0023     		movs	r3, #0
 8500 0068 84F84030 		strb	r3, [r4, #64]
5915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8501              		.loc 1 5915 0
 8502 006c A06B     		ldr	r0, [r4, #56]
ARM GAS  /tmp/cc1AMB4O.s 			page 291


 8503 006e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8504              	.LVL710:
 8505 0072 0028     		cmp	r0, #0
 8506 0074 40D0     		beq	.L658
5918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8507              		.loc 1 5918 0
 8508 0076 A06B     		ldr	r0, [r4, #56]
 8509 0078 036D     		ldr	r3, [r0, #80]
 8510 007a 9847     		blx	r3
 8511              	.LVL711:
 8512 007c 3CE0     		b	.L658
 8513              	.L659:
5883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8514              		.loc 1 5883 0
 8515 007e 48F20301 		movw	r1, #32771
 8516 0082 2046     		mov	r0, r4
 8517 0084 FFF7FEFF 		bl	I2C_Disable_IRQ
 8518              	.LVL712:
5887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8519              		.loc 1 5887 0
 8520 0088 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8521 008c DBB2     		uxtb	r3, r3
 8522 008e 602B     		cmp	r3, #96
 8523 0090 02D0     		beq	.L661
5890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8524              		.loc 1 5890 0
 8525 0092 2023     		movs	r3, #32
 8526 0094 84F84130 		strb	r3, [r4, #65]
 8527              	.L661:
5892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8528              		.loc 1 5892 0
 8529 0098 0023     		movs	r3, #0
 8530 009a 6363     		str	r3, [r4, #52]
 8531 009c CAE7     		b	.L660
 8532              	.L664:
5923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8533              		.loc 1 5923 0
 8534 009e 2046     		mov	r0, r4
 8535 00a0 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8536              	.LVL713:
 8537 00a4 28E0     		b	.L658
 8538              	.LVL714:
 8539              	.L662:
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8540              		.loc 1 5927 0
 8541 00a6 E26B     		ldr	r2, [r4, #60]
 8542 00a8 1AB3     		cbz	r2, .L666
5927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8543              		.loc 1 5927 0 is_stmt 0 discriminator 1
 8544 00aa 222B     		cmp	r3, #34
 8545 00ac 18BF     		it	ne
 8546 00ae 122B     		cmpne	r3, #18
 8547 00b0 1FD1     		bne	.L666
5930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8548              		.loc 1 5930 0 is_stmt 1
 8549 00b2 2368     		ldr	r3, [r4]
 8550              	.LVL715:
ARM GAS  /tmp/cc1AMB4O.s 			page 292


 8551 00b4 1A68     		ldr	r2, [r3]
 8552 00b6 12F4004F 		tst	r2, #32768
 8553 00ba 03D0     		beq	.L667
5932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8554              		.loc 1 5932 0
 8555 00bc 1A68     		ldr	r2, [r3]
 8556 00be 22F40042 		bic	r2, r2, #32768
 8557 00c2 1A60     		str	r2, [r3]
 8558              	.L667:
5935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8559              		.loc 1 5935 0
 8560 00c4 E06B     		ldr	r0, [r4, #60]
 8561 00c6 FFF7FEFF 		bl	HAL_DMA_GetState
 8562              	.LVL716:
 8563 00ca 0128     		cmp	r0, #1
 8564 00cc 0DD0     		beq	.L668
5939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8565              		.loc 1 5939 0
 8566 00ce E36B     		ldr	r3, [r4, #60]
 8567 00d0 0C4A     		ldr	r2, .L670+8
 8568 00d2 1A65     		str	r2, [r3, #80]
5942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8569              		.loc 1 5942 0
 8570 00d4 0023     		movs	r3, #0
 8571 00d6 84F84030 		strb	r3, [r4, #64]
5945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8572              		.loc 1 5945 0
 8573 00da E06B     		ldr	r0, [r4, #60]
 8574 00dc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8575              	.LVL717:
 8576 00e0 50B1     		cbz	r0, .L658
5948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8577              		.loc 1 5948 0
 8578 00e2 E06B     		ldr	r0, [r4, #60]
 8579 00e4 036D     		ldr	r3, [r0, #80]
 8580 00e6 9847     		blx	r3
 8581              	.LVL718:
 8582 00e8 06E0     		b	.L658
 8583              	.L668:
5953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8584              		.loc 1 5953 0
 8585 00ea 2046     		mov	r0, r4
 8586 00ec FFF7FEFF 		bl	I2C_TreatErrorCallback
 8587              	.LVL719:
 8588 00f0 02E0     		b	.L658
 8589              	.LVL720:
 8590              	.L666:
5958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8591              		.loc 1 5958 0
 8592 00f2 2046     		mov	r0, r4
 8593 00f4 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8594              	.LVL721:
 8595              	.L658:
5960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8596              		.loc 1 5960 0
 8597 00f8 10BD     		pop	{r4, pc}
 8598              	.LVL722:
ARM GAS  /tmp/cc1AMB4O.s 			page 293


 8599              	.L671:
 8600 00fa 00BF     		.align	2
 8601              	.L670:
 8602 00fc 0000FFFF 		.word	-65536
 8603 0100 00000000 		.word	I2C_Slave_ISR_IT
 8604 0104 00000000 		.word	I2C_DMAAbort
 8605              		.cfi_endproc
 8606              	.LFE202:
 8608              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8609              		.align	1
 8610              		.syntax unified
 8611              		.thumb
 8612              		.thumb_func
 8613              		.fpu fpv5-sp-d16
 8615              	I2C_ITSlaveCplt:
 8616              	.LFB200:
5646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8617              		.loc 1 5646 0
 8618              		.cfi_startproc
 8619              		@ args = 0, pretend = 0, frame = 0
 8620              		@ frame_needed = 0, uses_anonymous_args = 0
 8621              	.LVL723:
 8622 0000 70B5     		push	{r4, r5, r6, lr}
 8623              	.LCFI123:
 8624              		.cfi_def_cfa_offset 16
 8625              		.cfi_offset 4, -16
 8626              		.cfi_offset 5, -12
 8627              		.cfi_offset 6, -8
 8628              		.cfi_offset 14, -4
 8629 0002 0446     		mov	r4, r0
 8630 0004 0D46     		mov	r5, r1
5647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8631              		.loc 1 5647 0
 8632 0006 0268     		ldr	r2, [r0]
 8633 0008 1668     		ldr	r6, [r2]
 8634              	.LVL724:
5649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8635              		.loc 1 5649 0
 8636 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8637 000e DBB2     		uxtb	r3, r3
 8638              	.LVL725:
5652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8639              		.loc 1 5652 0
 8640 0010 2021     		movs	r1, #32
 8641              	.LVL726:
 8642 0012 D161     		str	r1, [r2, #28]
5655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8643              		.loc 1 5655 0
 8644 0014 292B     		cmp	r3, #41
 8645 0016 18BF     		it	ne
 8646 0018 212B     		cmpne	r3, #33
 8647 001a 5AD0     		beq	.L684
5660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8648              		.loc 1 5660 0
 8649 001c 2A2B     		cmp	r3, #42
 8650 001e 18BF     		it	ne
 8651 0020 222B     		cmpne	r3, #34
ARM GAS  /tmp/cc1AMB4O.s 			page 294


 8652 0022 5DD0     		beq	.L685
 8653              	.LVL727:
 8654              	.L674:
5671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8655              		.loc 1 5671 0
 8656 0024 2268     		ldr	r2, [r4]
 8657 0026 5368     		ldr	r3, [r2, #4]
 8658 0028 43F40043 		orr	r3, r3, #32768
 8659 002c 5360     		str	r3, [r2, #4]
5674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8660              		.loc 1 5674 0
 8661 002e 2268     		ldr	r2, [r4]
 8662 0030 5368     		ldr	r3, [r2, #4]
 8663 0032 23F0FF73 		bic	r3, r3, #33423360
 8664 0036 23F48B33 		bic	r3, r3, #71168
 8665 003a 23F4FF73 		bic	r3, r3, #510
 8666 003e 23F00103 		bic	r3, r3, #1
 8667 0042 5360     		str	r3, [r2, #4]
5677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8668              		.loc 1 5677 0
 8669 0044 2046     		mov	r0, r4
 8670 0046 FFF7FEFF 		bl	I2C_Flush_TXDR
 8671              	.LVL728:
5680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8672              		.loc 1 5680 0
 8673 004a 16F4804F 		tst	r6, #16384
 8674 004e 4ED0     		beq	.L675
5683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8675              		.loc 1 5683 0
 8676 0050 2268     		ldr	r2, [r4]
 8677 0052 1368     		ldr	r3, [r2]
 8678 0054 23F48043 		bic	r3, r3, #16384
 8679 0058 1360     		str	r3, [r2]
5685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8680              		.loc 1 5685 0
 8681 005a A36B     		ldr	r3, [r4, #56]
 8682 005c 1BB1     		cbz	r3, .L676
5687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8683              		.loc 1 5687 0
 8684 005e 1B68     		ldr	r3, [r3]
 8685 0060 5B68     		ldr	r3, [r3, #4]
 8686 0062 9BB2     		uxth	r3, r3
 8687 0064 6385     		strh	r3, [r4, #42]	@ movhi
 8688              	.L676:
5706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8689              		.loc 1 5706 0
 8690 0066 15F0040F 		tst	r5, #4
 8691 006a 10D0     		beq	.L677
5709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8692              		.loc 1 5709 0
 8693 006c 25F00405 		bic	r5, r5, #4
 8694              	.LVL729:
5712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8695              		.loc 1 5712 0
 8696 0070 2368     		ldr	r3, [r4]
 8697 0072 5A6A     		ldr	r2, [r3, #36]
 8698 0074 636A     		ldr	r3, [r4, #36]
ARM GAS  /tmp/cc1AMB4O.s 			page 295


 8699 0076 1A70     		strb	r2, [r3]
5715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8700              		.loc 1 5715 0
 8701 0078 636A     		ldr	r3, [r4, #36]
 8702 007a 0133     		adds	r3, r3, #1
 8703 007c 6362     		str	r3, [r4, #36]
5717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8704              		.loc 1 5717 0
 8705 007e 238D     		ldrh	r3, [r4, #40]
 8706 0080 2BB1     		cbz	r3, .L677
5719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 8707              		.loc 1 5719 0
 8708 0082 013B     		subs	r3, r3, #1
 8709 0084 2385     		strh	r3, [r4, #40]	@ movhi
5720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8710              		.loc 1 5720 0
 8711 0086 638D     		ldrh	r3, [r4, #42]
 8712 0088 013B     		subs	r3, r3, #1
 8713 008a 9BB2     		uxth	r3, r3
 8714 008c 6385     		strh	r3, [r4, #42]	@ movhi
 8715              	.L677:
5725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8716              		.loc 1 5725 0
 8717 008e 638D     		ldrh	r3, [r4, #42]
 8718 0090 9BB2     		uxth	r3, r3
 8719 0092 1BB1     		cbz	r3, .L678
5728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8720              		.loc 1 5728 0
 8721 0094 636C     		ldr	r3, [r4, #68]
 8722 0096 43F00403 		orr	r3, r3, #4
 8723 009a 6364     		str	r3, [r4, #68]
 8724              	.L678:
5731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8725              		.loc 1 5731 0
 8726 009c 0023     		movs	r3, #0
 8727 009e 84F84230 		strb	r3, [r4, #66]
5732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8728              		.loc 1 5732 0
 8729 00a2 6363     		str	r3, [r4, #52]
5734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8730              		.loc 1 5734 0
 8731 00a4 636C     		ldr	r3, [r4, #68]
 8732 00a6 002B     		cmp	r3, #0
 8733 00a8 31D1     		bne	.L686
5746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8734              		.loc 1 5746 0
 8735 00aa E36A     		ldr	r3, [r4, #44]
 8736 00ac 13F5803F 		cmn	r3, #65536
 8737 00b0 3BD1     		bne	.L687
5766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8738              		.loc 1 5766 0
 8739 00b2 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8740 00b6 DBB2     		uxtb	r3, r3
 8741 00b8 222B     		cmp	r3, #34
 8742 00ba 46D0     		beq	.L688
5783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8743              		.loc 1 5783 0
ARM GAS  /tmp/cc1AMB4O.s 			page 296


 8744 00bc 2023     		movs	r3, #32
 8745 00be 84F84130 		strb	r3, [r4, #65]
5784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8746              		.loc 1 5784 0
 8747 00c2 0023     		movs	r3, #0
 8748 00c4 2363     		str	r3, [r4, #48]
5787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8749              		.loc 1 5787 0
 8750 00c6 84F84030 		strb	r3, [r4, #64]
5793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8751              		.loc 1 5793 0
 8752 00ca 2046     		mov	r0, r4
 8753 00cc FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8754              	.LVL730:
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8755              		.loc 1 5796 0
 8756 00d0 3AE0     		b	.L672
 8757              	.LVL731:
 8758              	.L684:
5657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8759              		.loc 1 5657 0
 8760 00d2 48F20101 		movw	r1, #32769
 8761 00d6 FFF7FEFF 		bl	I2C_Disable_IRQ
 8762              	.LVL732:
5658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8763              		.loc 1 5658 0
 8764 00da 2123     		movs	r3, #33
 8765 00dc 2363     		str	r3, [r4, #48]
 8766 00de A1E7     		b	.L674
 8767              	.LVL733:
 8768              	.L685:
5662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8769              		.loc 1 5662 0
 8770 00e0 48F20201 		movw	r1, #32770
 8771 00e4 FFF7FEFF 		bl	I2C_Disable_IRQ
 8772              	.LVL734:
5663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8773              		.loc 1 5663 0
 8774 00e8 2223     		movs	r3, #34
 8775 00ea 2363     		str	r3, [r4, #48]
 8776 00ec 9AE7     		b	.L674
 8777              	.L675:
5690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8778              		.loc 1 5690 0
 8779 00ee 16F4004F 		tst	r6, #32768
 8780 00f2 B8D0     		beq	.L676
5693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8781              		.loc 1 5693 0
 8782 00f4 2268     		ldr	r2, [r4]
 8783 00f6 1368     		ldr	r3, [r2]
 8784 00f8 23F40043 		bic	r3, r3, #32768
 8785 00fc 1360     		str	r3, [r2]
5695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8786              		.loc 1 5695 0
 8787 00fe E36B     		ldr	r3, [r4, #60]
 8788 0100 002B     		cmp	r3, #0
 8789 0102 B0D0     		beq	.L676
ARM GAS  /tmp/cc1AMB4O.s 			page 297


5697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8790              		.loc 1 5697 0
 8791 0104 1B68     		ldr	r3, [r3]
 8792 0106 5B68     		ldr	r3, [r3, #4]
 8793 0108 9BB2     		uxth	r3, r3
 8794 010a 6385     		strh	r3, [r4, #42]	@ movhi
 8795 010c ABE7     		b	.L676
 8796              	.LVL735:
 8797              	.L686:
5737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8798              		.loc 1 5737 0
 8799 010e 616C     		ldr	r1, [r4, #68]
 8800 0110 2046     		mov	r0, r4
 8801 0112 FFF7FEFF 		bl	I2C_ITError
 8802              	.LVL736:
5740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8803              		.loc 1 5740 0
 8804 0116 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8805 011a DBB2     		uxtb	r3, r3
 8806 011c 282B     		cmp	r3, #40
 8807 011e 13D1     		bne	.L672
5743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 8808              		.loc 1 5743 0
 8809 0120 2946     		mov	r1, r5
 8810 0122 2046     		mov	r0, r4
 8811 0124 FFF7FEFF 		bl	I2C_ITListenCplt
 8812              	.LVL737:
 8813 0128 0EE0     		b	.L672
 8814              	.L687:
5749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8815              		.loc 1 5749 0
 8816 012a 2046     		mov	r0, r4
 8817 012c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8818              	.LVL738:
5751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8819              		.loc 1 5751 0
 8820 0130 0B4B     		ldr	r3, .L689
 8821 0132 E362     		str	r3, [r4, #44]
5752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8822              		.loc 1 5752 0
 8823 0134 2023     		movs	r3, #32
 8824 0136 84F84130 		strb	r3, [r4, #65]
5753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8825              		.loc 1 5753 0
 8826 013a 0023     		movs	r3, #0
 8827 013c 2363     		str	r3, [r4, #48]
5756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8828              		.loc 1 5756 0
 8829 013e 84F84030 		strb	r3, [r4, #64]
5762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8830              		.loc 1 5762 0
 8831 0142 2046     		mov	r0, r4
 8832 0144 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8833              	.LVL739:
 8834              	.L672:
5796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8835              		.loc 1 5796 0
ARM GAS  /tmp/cc1AMB4O.s 			page 298


 8836 0148 70BD     		pop	{r4, r5, r6, pc}
 8837              	.LVL740:
 8838              	.L688:
5768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8839              		.loc 1 5768 0
 8840 014a 2023     		movs	r3, #32
 8841 014c 84F84130 		strb	r3, [r4, #65]
5769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8842              		.loc 1 5769 0
 8843 0150 0023     		movs	r3, #0
 8844 0152 2363     		str	r3, [r4, #48]
5772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8845              		.loc 1 5772 0
 8846 0154 84F84030 		strb	r3, [r4, #64]
5778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8847              		.loc 1 5778 0
 8848 0158 2046     		mov	r0, r4
 8849 015a FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8850              	.LVL741:
 8851 015e F3E7     		b	.L672
 8852              	.L690:
 8853              		.align	2
 8854              	.L689:
 8855 0160 0000FFFF 		.word	-65536
 8856              		.cfi_endproc
 8857              	.LFE200:
 8859              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8860              		.align	1
 8861              		.syntax unified
 8862              		.thumb
 8863              		.thumb_func
 8864              		.fpu fpv5-sp-d16
 8866              	I2C_Slave_ISR_IT:
 8867              	.LFB191:
4769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8868              		.loc 1 4769 0
 8869              		.cfi_startproc
 8870              		@ args = 0, pretend = 0, frame = 0
 8871              		@ frame_needed = 0, uses_anonymous_args = 0
 8872              	.LVL742:
 8873 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8874              	.LCFI124:
 8875              		.cfi_def_cfa_offset 24
 8876              		.cfi_offset 3, -24
 8877              		.cfi_offset 4, -20
 8878              		.cfi_offset 5, -16
 8879              		.cfi_offset 6, -12
 8880              		.cfi_offset 7, -8
 8881              		.cfi_offset 14, -4
4770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8882              		.loc 1 4770 0
 8883 0002 C76A     		ldr	r7, [r0, #44]
 8884              	.LVL743:
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8885              		.loc 1 4774 0
 8886 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8887 0008 012B     		cmp	r3, #1
ARM GAS  /tmp/cc1AMB4O.s 			page 299


 8888 000a 00F0A380 		beq	.L703
 8889 000e 1646     		mov	r6, r2
 8890 0010 0D46     		mov	r5, r1
 8891 0012 0446     		mov	r4, r0
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8892              		.loc 1 4774 0 is_stmt 0 discriminator 2
 8893 0014 0123     		movs	r3, #1
 8894 0016 80F84030 		strb	r3, [r0, #64]
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8895              		.loc 1 4777 0 is_stmt 1 discriminator 2
 8896 001a 11F0200F 		tst	r1, #32
 8897 001e 02D0     		beq	.L693
4777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8898              		.loc 1 4777 0 is_stmt 0 discriminator 1
 8899 0020 12F0200F 		tst	r2, #32
 8900 0024 19D1     		bne	.L705
 8901              	.LVL744:
 8902              	.L693:
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8903              		.loc 1 4783 0 is_stmt 1
 8904 0026 15F0100F 		tst	r5, #16
 8905 002a 45D0     		beq	.L694
4783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 8906              		.loc 1 4783 0 is_stmt 0 discriminator 1
 8907 002c 16F0100F 		tst	r6, #16
 8908 0030 42D0     		beq	.L694
4789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 8909              		.loc 1 4789 0 is_stmt 1
 8910 0032 638D     		ldrh	r3, [r4, #42]
 8911 0034 9BB2     		uxth	r3, r3
 8912 0036 43BB     		cbnz	r3, .L695
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8913              		.loc 1 4792 0
 8914 0038 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8915 003c DBB2     		uxtb	r3, r3
 8916 003e 282B     		cmp	r3, #40
 8917 0040 0ED0     		beq	.L706
 8918              	.L696:
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8919              		.loc 1 4797 0
 8920 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8921 0046 DBB2     		uxtb	r3, r3
 8922 0048 292B     		cmp	r3, #41
 8923 004a 11D0     		beq	.L707
 8924              	.L698:
4812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8925              		.loc 1 4812 0
 8926 004c 2368     		ldr	r3, [r4]
 8927 004e 1022     		movs	r2, #16
 8928 0050 DA61     		str	r2, [r3, #28]
 8929              	.LVL745:
 8930              	.L697:
4890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8931              		.loc 1 4890 0
 8932 0052 0020     		movs	r0, #0
 8933 0054 84F84000 		strb	r0, [r4, #64]
 8934              	.LVL746:
ARM GAS  /tmp/cc1AMB4O.s 			page 300


 8935              	.L692:
4893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8936              		.loc 1 4893 0
 8937 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8938              	.LVL747:
 8939              	.L705:
4780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 8940              		.loc 1 4780 0
 8941 005a FFF7FEFF 		bl	I2C_ITSlaveCplt
 8942              	.LVL748:
 8943 005e E2E7     		b	.L693
 8944              	.L706:
4792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8945              		.loc 1 4792 0 discriminator 1
 8946 0060 B7F1007F 		cmp	r7, #33554432
 8947 0064 EDD1     		bne	.L696
4795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8948              		.loc 1 4795 0
 8949 0066 2946     		mov	r1, r5
 8950 0068 2046     		mov	r0, r4
 8951 006a FFF7FEFF 		bl	I2C_ITListenCplt
 8952              	.LVL749:
 8953 006e F0E7     		b	.L697
 8954              	.L707:
4797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8955              		.loc 1 4797 0 discriminator 1
 8956 0070 17F5803F 		cmn	r7, #65536
 8957 0074 EAD0     		beq	.L698
4800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8958              		.loc 1 4800 0
 8959 0076 2368     		ldr	r3, [r4]
 8960 0078 1022     		movs	r2, #16
 8961 007a DA61     		str	r2, [r3, #28]
4803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8962              		.loc 1 4803 0
 8963 007c 2046     		mov	r0, r4
 8964 007e FFF7FEFF 		bl	I2C_Flush_TXDR
 8965              	.LVL750:
4807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8966              		.loc 1 4807 0
 8967 0082 2046     		mov	r0, r4
 8968 0084 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8969              	.LVL751:
 8970 0088 E3E7     		b	.L697
 8971              	.L695:
4819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8972              		.loc 1 4819 0
 8973 008a 2368     		ldr	r3, [r4]
 8974 008c 1022     		movs	r2, #16
 8975 008e DA61     		str	r2, [r3, #28]
4822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 8976              		.loc 1 4822 0
 8977 0090 636C     		ldr	r3, [r4, #68]
 8978 0092 43F00403 		orr	r3, r3, #4
 8979 0096 6364     		str	r3, [r4, #68]
4824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 8980              		.loc 1 4824 0
ARM GAS  /tmp/cc1AMB4O.s 			page 301


 8981 0098 B7F1807F 		cmp	r7, #16777216
 8982 009c 14BF     		ite	ne
 8983 009e 0023     		movne	r3, #0
 8984 00a0 0123     		moveq	r3, #1
 8985 00a2 002F     		cmp	r7, #0
 8986 00a4 14BF     		ite	ne
 8987 00a6 1F46     		movne	r7, r3
 8988 00a8 0127     		moveq	r7, #1
 8989              	.LVL752:
 8990 00aa 002F     		cmp	r7, #0
 8991 00ac D1D0     		beq	.L697
4827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 8992              		.loc 1 4827 0
 8993 00ae 616C     		ldr	r1, [r4, #68]
 8994 00b0 2046     		mov	r0, r4
 8995 00b2 FFF7FEFF 		bl	I2C_ITError
 8996              	.LVL753:
 8997 00b6 CCE7     		b	.L697
 8998              	.LVL754:
 8999              	.L694:
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9000              		.loc 1 4831 0
 9001 00b8 15F0040F 		tst	r5, #4
 9002 00bc 1ED0     		beq	.L699
4831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9003              		.loc 1 4831 0 is_stmt 0 discriminator 1
 9004 00be 16F0040F 		tst	r6, #4
 9005 00c2 1BD0     		beq	.L699
4833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9006              		.loc 1 4833 0 is_stmt 1
 9007 00c4 638D     		ldrh	r3, [r4, #42]
 9008 00c6 9BB2     		uxth	r3, r3
 9009 00c8 6BB1     		cbz	r3, .L700
4836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9010              		.loc 1 4836 0
 9011 00ca 2368     		ldr	r3, [r4]
 9012 00cc 5A6A     		ldr	r2, [r3, #36]
 9013 00ce 636A     		ldr	r3, [r4, #36]
 9014 00d0 1A70     		strb	r2, [r3]
4839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9015              		.loc 1 4839 0
 9016 00d2 636A     		ldr	r3, [r4, #36]
 9017 00d4 0133     		adds	r3, r3, #1
 9018 00d6 6362     		str	r3, [r4, #36]
4841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferCount--;
 9019              		.loc 1 4841 0
 9020 00d8 238D     		ldrh	r3, [r4, #40]
 9021 00da 013B     		subs	r3, r3, #1
 9022 00dc 2385     		strh	r3, [r4, #40]	@ movhi
4842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9023              		.loc 1 4842 0
 9024 00de 638D     		ldrh	r3, [r4, #42]
 9025 00e0 013B     		subs	r3, r3, #1
 9026 00e2 9BB2     		uxth	r3, r3
 9027 00e4 6385     		strh	r3, [r4, #42]	@ movhi
 9028              	.L700:
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
ARM GAS  /tmp/cc1AMB4O.s 			page 302


 9029              		.loc 1 4845 0
 9030 00e6 638D     		ldrh	r3, [r4, #42]
 9031 00e8 9BB2     		uxth	r3, r3
 9032 00ea 002B     		cmp	r3, #0
 9033 00ec B1D1     		bne	.L697
4845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 9034              		.loc 1 4845 0 is_stmt 0 discriminator 1
 9035 00ee 17F5803F 		cmn	r7, #65536
 9036 00f2 AED0     		beq	.L697
4849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9037              		.loc 1 4849 0 is_stmt 1
 9038 00f4 2046     		mov	r0, r4
 9039 00f6 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9040              	.LVL755:
 9041 00fa AAE7     		b	.L697
 9042              	.L699:
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 9043              		.loc 1 4852 0
 9044 00fc 15F0080F 		tst	r5, #8
 9045 0100 02D0     		beq	.L701
4852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 9046              		.loc 1 4852 0 is_stmt 0 discriminator 1
 9047 0102 16F0080F 		tst	r6, #8
 9048 0106 17D1     		bne	.L708
 9049              	.L701:
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9050              		.loc 1 4857 0 is_stmt 1
 9051 0108 15F0020F 		tst	r5, #2
 9052 010c A1D0     		beq	.L697
4857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9053              		.loc 1 4857 0 is_stmt 0 discriminator 1
 9054 010e 16F0020F 		tst	r6, #2
 9055 0112 9ED0     		beq	.L697
4863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9056              		.loc 1 4863 0 is_stmt 1
 9057 0114 638D     		ldrh	r3, [r4, #42]
 9058 0116 9BB2     		uxth	r3, r3
 9059 0118 9BB1     		cbz	r3, .L702
4866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9060              		.loc 1 4866 0
 9061 011a 626A     		ldr	r2, [r4, #36]
 9062 011c 2368     		ldr	r3, [r4]
 9063 011e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9064 0120 9A62     		str	r2, [r3, #40]
4869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9065              		.loc 1 4869 0
 9066 0122 636A     		ldr	r3, [r4, #36]
 9067 0124 0133     		adds	r3, r3, #1
 9068 0126 6362     		str	r3, [r4, #36]
4871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       hi2c->XferSize--;
 9069              		.loc 1 4871 0
 9070 0128 638D     		ldrh	r3, [r4, #42]
 9071 012a 013B     		subs	r3, r3, #1
 9072 012c 9BB2     		uxth	r3, r3
 9073 012e 6385     		strh	r3, [r4, #42]	@ movhi
4872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9074              		.loc 1 4872 0
ARM GAS  /tmp/cc1AMB4O.s 			page 303


 9075 0130 238D     		ldrh	r3, [r4, #40]
 9076 0132 013B     		subs	r3, r3, #1
 9077 0134 2385     		strh	r3, [r4, #40]	@ movhi
 9078 0136 8CE7     		b	.L697
 9079              	.L708:
4855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9080              		.loc 1 4855 0
 9081 0138 2946     		mov	r1, r5
 9082 013a 2046     		mov	r0, r4
 9083 013c FFF7FEFF 		bl	I2C_ITAddrCplt
 9084              	.LVL756:
 9085 0140 87E7     		b	.L697
 9086              	.L702:
4876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9087              		.loc 1 4876 0
 9088 0142 002F     		cmp	r7, #0
 9089 0144 18BF     		it	ne
 9090 0146 B7F1807F 		cmpne	r7, #16777216
 9091 014a 82D1     		bne	.L697
4880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9092              		.loc 1 4880 0
 9093 014c 2046     		mov	r0, r4
 9094 014e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9095              	.LVL757:
 9096 0152 7EE7     		b	.L697
 9097              	.LVL758:
 9098              	.L703:
4774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9099              		.loc 1 4774 0
 9100 0154 0220     		movs	r0, #2
 9101              	.LVL759:
 9102 0156 7FE7     		b	.L692
 9103              		.cfi_endproc
 9104              	.LFE191:
 9106              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 9107              		.align	1
 9108              		.syntax unified
 9109              		.thumb
 9110              		.thumb_func
 9111              		.fpu fpv5-sp-d16
 9113              	I2C_ITMasterCplt:
 9114              	.LFB199:
5503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 9115              		.loc 1 5503 0
 9116              		.cfi_startproc
 9117              		@ args = 0, pretend = 0, frame = 8
 9118              		@ frame_needed = 0, uses_anonymous_args = 0
 9119              	.LVL760:
 9120 0000 30B5     		push	{r4, r5, lr}
 9121              	.LCFI125:
 9122              		.cfi_def_cfa_offset 12
 9123              		.cfi_offset 4, -12
 9124              		.cfi_offset 5, -8
 9125              		.cfi_offset 14, -4
 9126 0002 83B0     		sub	sp, sp, #12
 9127              	.LCFI126:
 9128              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc1AMB4O.s 			page 304


 9129 0004 0446     		mov	r4, r0
 9130 0006 0D46     		mov	r5, r1
 9131              	.LVL761:
5509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9132              		.loc 1 5509 0
 9133 0008 0368     		ldr	r3, [r0]
 9134 000a 2022     		movs	r2, #32
 9135 000c DA61     		str	r2, [r3, #28]
5512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9136              		.loc 1 5512 0
 9137 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9138 0012 DBB2     		uxtb	r3, r3
 9139 0014 212B     		cmp	r3, #33
 9140 0016 4AD0     		beq	.L721
5517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9141              		.loc 1 5517 0
 9142 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 9143 001c DBB2     		uxtb	r3, r3
 9144 001e 222B     		cmp	r3, #34
 9145 0020 4BD0     		beq	.L722
 9146              	.LVL762:
 9147              	.L711:
5528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9148              		.loc 1 5528 0
 9149 0022 2268     		ldr	r2, [r4]
 9150 0024 5368     		ldr	r3, [r2, #4]
 9151 0026 23F0FF73 		bic	r3, r3, #33423360
 9152 002a 23F48B33 		bic	r3, r3, #71168
 9153 002e 23F4FF73 		bic	r3, r3, #510
 9154 0032 23F00103 		bic	r3, r3, #1
 9155 0036 5360     		str	r3, [r2, #4]
5531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 9156              		.loc 1 5531 0
 9157 0038 0023     		movs	r3, #0
 9158 003a 6363     		str	r3, [r4, #52]
5532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9159              		.loc 1 5532 0
 9160 003c A3F58033 		sub	r3, r3, #65536
 9161 0040 E362     		str	r3, [r4, #44]
5534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9162              		.loc 1 5534 0
 9163 0042 15F0100F 		tst	r5, #16
 9164 0046 06D0     		beq	.L712
5537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9165              		.loc 1 5537 0
 9166 0048 2368     		ldr	r3, [r4]
 9167 004a 1022     		movs	r2, #16
 9168 004c DA61     		str	r2, [r3, #28]
5540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9169              		.loc 1 5540 0
 9170 004e 636C     		ldr	r3, [r4, #68]
 9171 0050 43F00403 		orr	r3, r3, #4
 9172 0054 6364     		str	r3, [r4, #68]
 9173              	.L712:
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9174              		.loc 1 5544 0
 9175 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
ARM GAS  /tmp/cc1AMB4O.s 			page 305


 9176 005a DBB2     		uxtb	r3, r3
 9177 005c 602B     		cmp	r3, #96
 9178 005e 32D0     		beq	.L723
 9179              	.L713:
5552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9180              		.loc 1 5552 0
 9181 0060 2046     		mov	r0, r4
 9182 0062 FFF7FEFF 		bl	I2C_Flush_TXDR
 9183              	.LVL763:
5555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9184              		.loc 1 5555 0
 9185 0066 626C     		ldr	r2, [r4, #68]
 9186              	.LVL764:
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9187              		.loc 1 5558 0
 9188 0068 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9189 006c DBB2     		uxtb	r3, r3
 9190 006e 602B     		cmp	r3, #96
 9191 0070 32D0     		beq	.L714
5558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9192              		.loc 1 5558 0 is_stmt 0 discriminator 1
 9193 0072 8ABB     		cbnz	r2, .L714
5564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9194              		.loc 1 5564 0 is_stmt 1
 9195 0074 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9196 0078 DBB2     		uxtb	r3, r3
 9197 007a 212B     		cmp	r3, #33
 9198 007c 32D0     		beq	.L724
5599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9199              		.loc 1 5599 0
 9200 007e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9201 0082 DBB2     		uxtb	r3, r3
 9202 0084 222B     		cmp	r3, #34
 9203 0086 2BD1     		bne	.L709
5601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9204              		.loc 1 5601 0
 9205 0088 2023     		movs	r3, #32
 9206 008a 84F84130 		strb	r3, [r4, #65]
5602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9207              		.loc 1 5602 0
 9208 008e 0023     		movs	r3, #0
 9209 0090 2363     		str	r3, [r4, #48]
5604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9210              		.loc 1 5604 0
 9211 0092 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9212 0096 DBB2     		uxtb	r3, r3
 9213 0098 402B     		cmp	r3, #64
 9214 009a 3FD0     		beq	.L725
5620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9215              		.loc 1 5620 0
 9216 009c 0023     		movs	r3, #0
 9217 009e 84F84230 		strb	r3, [r4, #66]
5623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9218              		.loc 1 5623 0
 9219 00a2 84F84030 		strb	r3, [r4, #64]
5629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9220              		.loc 1 5629 0
ARM GAS  /tmp/cc1AMB4O.s 			page 306


 9221 00a6 2046     		mov	r0, r4
 9222 00a8 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9223              	.LVL765:
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9224              		.loc 1 5637 0
 9225 00ac 18E0     		b	.L709
 9226              	.LVL766:
 9227              	.L721:
5514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 9228              		.loc 1 5514 0
 9229 00ae 0121     		movs	r1, #1
 9230              	.LVL767:
 9231 00b0 FFF7FEFF 		bl	I2C_Disable_IRQ
 9232              	.LVL768:
5515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9233              		.loc 1 5515 0
 9234 00b4 1123     		movs	r3, #17
 9235 00b6 2363     		str	r3, [r4, #48]
 9236 00b8 B3E7     		b	.L711
 9237              	.LVL769:
 9238              	.L722:
5519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 9239              		.loc 1 5519 0
 9240 00ba 0221     		movs	r1, #2
 9241              	.LVL770:
 9242 00bc FFF7FEFF 		bl	I2C_Disable_IRQ
 9243              	.LVL771:
5520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9244              		.loc 1 5520 0
 9245 00c0 1223     		movs	r3, #18
 9246 00c2 2363     		str	r3, [r4, #48]
 9247 00c4 ADE7     		b	.L711
 9248              	.L723:
5544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9249              		.loc 1 5544 0 discriminator 1
 9250 00c6 15F0040F 		tst	r5, #4
 9251 00ca C9D0     		beq	.L713
5547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     UNUSED(tmpreg);
 9252              		.loc 1 5547 0
 9253 00cc 2368     		ldr	r3, [r4]
 9254 00ce 5B6A     		ldr	r3, [r3, #36]
 9255 00d0 DBB2     		uxtb	r3, r3
 9256 00d2 0193     		str	r3, [sp, #4]
5548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9257              		.loc 1 5548 0
 9258 00d4 019B     		ldr	r3, [sp, #4]
 9259 00d6 C3E7     		b	.L713
 9260              	.LVL772:
 9261              	.L714:
5561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9262              		.loc 1 5561 0
 9263 00d8 616C     		ldr	r1, [r4, #68]
 9264 00da 2046     		mov	r0, r4
 9265 00dc FFF7FEFF 		bl	I2C_ITError
 9266              	.LVL773:
 9267              	.L709:
5637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 307


 9268              		.loc 1 5637 0
 9269 00e0 03B0     		add	sp, sp, #12
 9270              	.LCFI127:
 9271              		.cfi_remember_state
 9272              		.cfi_def_cfa_offset 12
 9273              		@ sp needed
 9274 00e2 30BD     		pop	{r4, r5, pc}
 9275              	.LVL774:
 9276              	.L724:
 9277              	.LCFI128:
 9278              		.cfi_restore_state
5566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9279              		.loc 1 5566 0
 9280 00e4 2023     		movs	r3, #32
 9281 00e6 84F84130 		strb	r3, [r4, #65]
5567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9282              		.loc 1 5567 0
 9283 00ea 0023     		movs	r3, #0
 9284 00ec 2363     		str	r3, [r4, #48]
5569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9285              		.loc 1 5569 0
 9286 00ee 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9287 00f2 DBB2     		uxtb	r3, r3
 9288 00f4 402B     		cmp	r3, #64
 9289 00f6 08D0     		beq	.L726
5585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9290              		.loc 1 5585 0
 9291 00f8 0023     		movs	r3, #0
 9292 00fa 84F84230 		strb	r3, [r4, #66]
5588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9293              		.loc 1 5588 0
 9294 00fe 84F84030 		strb	r3, [r4, #64]
5594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9295              		.loc 1 5594 0
 9296 0102 2046     		mov	r0, r4
 9297 0104 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9298              	.LVL775:
 9299 0108 EAE7     		b	.L709
 9300              	.LVL776:
 9301              	.L726:
5571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9302              		.loc 1 5571 0
 9303 010a 0023     		movs	r3, #0
 9304 010c 84F84230 		strb	r3, [r4, #66]
5574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9305              		.loc 1 5574 0
 9306 0110 84F84030 		strb	r3, [r4, #64]
5580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9307              		.loc 1 5580 0
 9308 0114 2046     		mov	r0, r4
 9309 0116 FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9310              	.LVL777:
 9311 011a E1E7     		b	.L709
 9312              	.LVL778:
 9313              	.L725:
5606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9314              		.loc 1 5606 0
ARM GAS  /tmp/cc1AMB4O.s 			page 308


 9315 011c 0023     		movs	r3, #0
 9316 011e 84F84230 		strb	r3, [r4, #66]
5609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9317              		.loc 1 5609 0
 9318 0122 84F84030 		strb	r3, [r4, #64]
5615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9319              		.loc 1 5615 0
 9320 0126 2046     		mov	r0, r4
 9321 0128 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9322              	.LVL779:
 9323 012c D8E7     		b	.L709
 9324              		.cfi_endproc
 9325              	.LFE199:
 9327              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9328              		.align	1
 9329              		.syntax unified
 9330              		.thumb
 9331              		.thumb_func
 9332              		.fpu fpv5-sp-d16
 9334              	I2C_Master_ISR_IT:
 9335              	.LFB190:
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9336              		.loc 1 4632 0
 9337              		.cfi_startproc
 9338              		@ args = 0, pretend = 0, frame = 0
 9339              		@ frame_needed = 0, uses_anonymous_args = 0
 9340              	.LVL780:
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9341              		.loc 1 4637 0
 9342 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9343 0004 012B     		cmp	r3, #1
 9344 0006 00F0B780 		beq	.L741
4632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9345              		.loc 1 4632 0 discriminator 2
 9346 000a 70B5     		push	{r4, r5, r6, lr}
 9347              	.LCFI129:
 9348              		.cfi_def_cfa_offset 16
 9349              		.cfi_offset 4, -16
 9350              		.cfi_offset 5, -12
 9351              		.cfi_offset 6, -8
 9352              		.cfi_offset 14, -4
 9353 000c 82B0     		sub	sp, sp, #8
 9354              	.LCFI130:
 9355              		.cfi_def_cfa_offset 24
 9356 000e 0446     		mov	r4, r0
 9357 0010 0D46     		mov	r5, r1
 9358 0012 1646     		mov	r6, r2
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9359              		.loc 1 4637 0 discriminator 2
 9360 0014 0123     		movs	r3, #1
 9361 0016 80F84030 		strb	r3, [r0, #64]
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9362              		.loc 1 4639 0 discriminator 2
 9363 001a 11F0100F 		tst	r1, #16
 9364 001e 02D0     		beq	.L729
4639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9365              		.loc 1 4639 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc1AMB4O.s 			page 309


 9366 0020 12F0100F 		tst	r2, #16
 9367 0024 21D1     		bne	.L746
 9368              	.L729:
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9369              		.loc 1 4652 0 is_stmt 1
 9370 0026 15F0040F 		tst	r5, #4
 9371 002a 28D0     		beq	.L731
4652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9372              		.loc 1 4652 0 is_stmt 0 discriminator 1
 9373 002c 16F0040F 		tst	r6, #4
 9374 0030 25D0     		beq	.L731
4655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9375              		.loc 1 4655 0 is_stmt 1
 9376 0032 25F00405 		bic	r5, r5, #4
 9377              	.LVL781:
4658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9378              		.loc 1 4658 0
 9379 0036 2368     		ldr	r3, [r4]
 9380 0038 5A6A     		ldr	r2, [r3, #36]
 9381              	.LVL782:
 9382 003a 636A     		ldr	r3, [r4, #36]
 9383 003c 1A70     		strb	r2, [r3]
4661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9384              		.loc 1 4661 0
 9385 003e 636A     		ldr	r3, [r4, #36]
 9386 0040 0133     		adds	r3, r3, #1
 9387 0042 6362     		str	r3, [r4, #36]
4663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9388              		.loc 1 4663 0
 9389 0044 238D     		ldrh	r3, [r4, #40]
 9390 0046 013B     		subs	r3, r3, #1
 9391 0048 2385     		strh	r3, [r4, #40]	@ movhi
4664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9392              		.loc 1 4664 0
 9393 004a 638D     		ldrh	r3, [r4, #42]
 9394 004c 013B     		subs	r3, r3, #1
 9395 004e 9BB2     		uxth	r3, r3
 9396 0050 6385     		strh	r3, [r4, #42]	@ movhi
 9397              	.LVL783:
 9398              	.L730:
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9399              		.loc 1 4748 0
 9400 0052 15F0200F 		tst	r5, #32
 9401 0056 03D0     		beq	.L740
4748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9402              		.loc 1 4748 0 is_stmt 0 discriminator 1
 9403 0058 16F0200F 		tst	r6, #32
 9404 005c 40F08780 		bne	.L747
 9405              	.L740:
4755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9406              		.loc 1 4755 0 is_stmt 1
 9407 0060 0020     		movs	r0, #0
 9408 0062 84F84000 		strb	r0, [r4, #64]
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9409              		.loc 1 4758 0
 9410 0066 02B0     		add	sp, sp, #8
 9411              	.LCFI131:
ARM GAS  /tmp/cc1AMB4O.s 			page 310


 9412              		.cfi_remember_state
 9413              		.cfi_def_cfa_offset 16
 9414              		@ sp needed
 9415 0068 70BD     		pop	{r4, r5, r6, pc}
 9416              	.LVL784:
 9417              	.L746:
 9418              	.LCFI132:
 9419              		.cfi_restore_state
4642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9420              		.loc 1 4642 0
 9421 006a 0368     		ldr	r3, [r0]
 9422 006c 1022     		movs	r2, #16
 9423              	.LVL785:
 9424 006e DA61     		str	r2, [r3, #28]
4647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9425              		.loc 1 4647 0
 9426 0070 436C     		ldr	r3, [r0, #68]
 9427 0072 43F00403 		orr	r3, r3, #4
 9428 0076 4364     		str	r3, [r0, #68]
4650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9429              		.loc 1 4650 0
 9430 0078 FFF7FEFF 		bl	I2C_Flush_TXDR
 9431              	.LVL786:
 9432 007c E9E7     		b	.L730
 9433              	.LVL787:
 9434              	.L731:
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9435              		.loc 1 4666 0
 9436 007e 15F0020F 		tst	r5, #2
 9437 0082 11D0     		beq	.L732
4666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9438              		.loc 1 4666 0 is_stmt 0 discriminator 1
 9439 0084 16F0020F 		tst	r6, #2
 9440 0088 0ED0     		beq	.L732
4669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9441              		.loc 1 4669 0 is_stmt 1
 9442 008a 626A     		ldr	r2, [r4, #36]
 9443              	.LVL788:
 9444 008c 2368     		ldr	r3, [r4]
 9445 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9446 0090 9A62     		str	r2, [r3, #40]
4672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9447              		.loc 1 4672 0
 9448 0092 636A     		ldr	r3, [r4, #36]
 9449 0094 0133     		adds	r3, r3, #1
 9450 0096 6362     		str	r3, [r4, #36]
4674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     hi2c->XferCount--;
 9451              		.loc 1 4674 0
 9452 0098 238D     		ldrh	r3, [r4, #40]
 9453 009a 013B     		subs	r3, r3, #1
 9454 009c 2385     		strh	r3, [r4, #40]	@ movhi
4675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9455              		.loc 1 4675 0
 9456 009e 638D     		ldrh	r3, [r4, #42]
 9457 00a0 013B     		subs	r3, r3, #1
 9458 00a2 9BB2     		uxth	r3, r3
 9459 00a4 6385     		strh	r3, [r4, #42]	@ movhi
ARM GAS  /tmp/cc1AMB4O.s 			page 311


 9460 00a6 D4E7     		b	.L730
 9461              	.LVL789:
 9462              	.L732:
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9463              		.loc 1 4677 0
 9464 00a8 15F0800F 		tst	r5, #128
 9465 00ac 3FD0     		beq	.L733
4677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9466              		.loc 1 4677 0 is_stmt 0 discriminator 1
 9467 00ae 16F0400F 		tst	r6, #64
 9468 00b2 3CD0     		beq	.L733
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9469              		.loc 1 4679 0 is_stmt 1
 9470 00b4 638D     		ldrh	r3, [r4, #42]
 9471 00b6 9BB2     		uxth	r3, r3
 9472 00b8 5BB3     		cbz	r3, .L734
4679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9473              		.loc 1 4679 0 is_stmt 0 discriminator 1
 9474 00ba 238D     		ldrh	r3, [r4, #40]
 9475 00bc 4BBB     		cbnz	r3, .L734
4681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9476              		.loc 1 4681 0 is_stmt 1
 9477 00be 2368     		ldr	r3, [r4]
 9478 00c0 5968     		ldr	r1, [r3, #4]
 9479              	.LVL790:
 9480 00c2 C1F30901 		ubfx	r1, r1, #0, #10
 9481              	.LVL791:
4683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9482              		.loc 1 4683 0
 9483 00c6 638D     		ldrh	r3, [r4, #42]
 9484 00c8 9BB2     		uxth	r3, r3
 9485 00ca FF2B     		cmp	r3, #255
 9486 00cc 0ED8     		bhi	.L748
4690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9487              		.loc 1 4690 0
 9488 00ce 628D     		ldrh	r2, [r4, #42]
 9489              	.LVL792:
 9490 00d0 92B2     		uxth	r2, r2
 9491 00d2 2285     		strh	r2, [r4, #40]	@ movhi
4691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9492              		.loc 1 4691 0
 9493 00d4 E36A     		ldr	r3, [r4, #44]
 9494 00d6 13F5803F 		cmn	r3, #65536
 9495 00da 11D0     		beq	.L736
4693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9496              		.loc 1 4693 0
 9497 00dc E36A     		ldr	r3, [r4, #44]
 9498 00de 0020     		movs	r0, #0
 9499              	.LVL793:
 9500 00e0 0090     		str	r0, [sp]
 9501 00e2 D2B2     		uxtb	r2, r2
 9502 00e4 2046     		mov	r0, r4
 9503 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 9504              	.LVL794:
 9505 00ea B2E7     		b	.L730
 9506              	.LVL795:
 9507              	.L748:
ARM GAS  /tmp/cc1AMB4O.s 			page 312


4685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9508              		.loc 1 4685 0
 9509 00ec FF22     		movs	r2, #255
 9510              	.LVL796:
 9511 00ee 2285     		strh	r2, [r4, #40]	@ movhi
4686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9512              		.loc 1 4686 0
 9513 00f0 0023     		movs	r3, #0
 9514 00f2 0093     		str	r3, [sp]
 9515 00f4 4FF08073 		mov	r3, #16777216
 9516 00f8 2046     		mov	r0, r4
 9517              	.LVL797:
 9518 00fa FFF7FEFF 		bl	I2C_TransferConfig
 9519              	.LVL798:
 9520 00fe A8E7     		b	.L730
 9521              	.LVL799:
 9522              	.L736:
4697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9523              		.loc 1 4697 0
 9524 0100 0023     		movs	r3, #0
 9525 0102 0093     		str	r3, [sp]
 9526 0104 4FF00073 		mov	r3, #33554432
 9527 0108 D2B2     		uxtb	r2, r2
 9528 010a 2046     		mov	r0, r4
 9529              	.LVL800:
 9530 010c FFF7FEFF 		bl	I2C_TransferConfig
 9531              	.LVL801:
 9532 0110 9FE7     		b	.L730
 9533              	.LVL802:
 9534              	.L734:
4704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9535              		.loc 1 4704 0
 9536 0112 2368     		ldr	r3, [r4]
 9537 0114 5B68     		ldr	r3, [r3, #4]
 9538 0116 13F0007F 		tst	r3, #33554432
 9539 011a 03D1     		bne	.L737
4707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9540              		.loc 1 4707 0
 9541 011c 2046     		mov	r0, r4
 9542              	.LVL803:
 9543 011e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9544              	.LVL804:
 9545 0122 96E7     		b	.L730
 9546              	.LVL805:
 9547              	.L737:
4713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9548              		.loc 1 4713 0
 9549 0124 4021     		movs	r1, #64
 9550              	.LVL806:
 9551 0126 2046     		mov	r0, r4
 9552              	.LVL807:
 9553 0128 FFF7FEFF 		bl	I2C_ITError
 9554              	.LVL808:
 9555 012c 91E7     		b	.L730
 9556              	.LVL809:
 9557              	.L733:
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
ARM GAS  /tmp/cc1AMB4O.s 			page 313


 9558              		.loc 1 4717 0
 9559 012e 15F0400F 		tst	r5, #64
 9560 0132 8ED0     		beq	.L730
4717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9561              		.loc 1 4717 0 is_stmt 0 discriminator 1
 9562 0134 16F0400F 		tst	r6, #64
 9563 0138 8BD0     		beq	.L730
4719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9564              		.loc 1 4719 0 is_stmt 1
 9565 013a 638D     		ldrh	r3, [r4, #42]
 9566 013c 9BB2     		uxth	r3, r3
 9567 013e 8BB9     		cbnz	r3, .L738
4721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9568              		.loc 1 4721 0
 9569 0140 2368     		ldr	r3, [r4]
 9570 0142 5A68     		ldr	r2, [r3, #4]
 9571              	.LVL810:
 9572 0144 12F0007F 		tst	r2, #33554432
 9573 0148 83D1     		bne	.L730
4724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9574              		.loc 1 4724 0
 9575 014a E26A     		ldr	r2, [r4, #44]
 9576 014c 12F5803F 		cmn	r2, #65536
 9577 0150 04D1     		bne	.L739
4727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9578              		.loc 1 4727 0
 9579 0152 5A68     		ldr	r2, [r3, #4]
 9580 0154 42F48042 		orr	r2, r2, #16384
 9581 0158 5A60     		str	r2, [r3, #4]
 9582 015a 7AE7     		b	.L730
 9583              	.L739:
4732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9584              		.loc 1 4732 0
 9585 015c 2046     		mov	r0, r4
 9586              	.LVL811:
 9587 015e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9588              	.LVL812:
 9589 0162 76E7     		b	.L730
 9590              	.LVL813:
 9591              	.L738:
4740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9592              		.loc 1 4740 0
 9593 0164 4021     		movs	r1, #64
 9594              	.LVL814:
 9595 0166 2046     		mov	r0, r4
 9596              	.LVL815:
 9597 0168 FFF7FEFF 		bl	I2C_ITError
 9598              	.LVL816:
 9599 016c 71E7     		b	.L730
 9600              	.LVL817:
 9601              	.L747:
4751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9602              		.loc 1 4751 0
 9603 016e 2946     		mov	r1, r5
 9604 0170 2046     		mov	r0, r4
 9605 0172 FFF7FEFF 		bl	I2C_ITMasterCplt
 9606              	.LVL818:
ARM GAS  /tmp/cc1AMB4O.s 			page 314


 9607 0176 73E7     		b	.L740
 9608              	.LVL819:
 9609              	.L741:
 9610              	.LCFI133:
 9611              		.cfi_def_cfa_offset 0
 9612              		.cfi_restore 4
 9613              		.cfi_restore 5
 9614              		.cfi_restore 6
 9615              		.cfi_restore 14
4637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9616              		.loc 1 4637 0
 9617 0178 0220     		movs	r0, #2
 9618              	.LVL820:
4758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9619              		.loc 1 4758 0
 9620 017a 7047     		bx	lr
 9621              		.cfi_endproc
 9622              	.LFE190:
 9624              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9625              		.align	1
 9626              		.syntax unified
 9627              		.thumb
 9628              		.thumb_func
 9629              		.fpu fpv5-sp-d16
 9631              	I2C_Slave_ISR_DMA:
 9632              	.LFB193:
5039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9633              		.loc 1 5039 0
 9634              		.cfi_startproc
 9635              		@ args = 0, pretend = 0, frame = 0
 9636              		@ frame_needed = 0, uses_anonymous_args = 0
 9637              	.LVL821:
 9638 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9639              	.LCFI134:
 9640              		.cfi_def_cfa_offset 24
 9641              		.cfi_offset 3, -24
 9642              		.cfi_offset 4, -20
 9643              		.cfi_offset 5, -16
 9644              		.cfi_offset 6, -12
 9645              		.cfi_offset 7, -8
 9646              		.cfi_offset 14, -4
5040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9647              		.loc 1 5040 0
 9648 0002 C76A     		ldr	r7, [r0, #44]
 9649              	.LVL822:
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9650              		.loc 1 5045 0
 9651 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9652 0008 012B     		cmp	r3, #1
 9653 000a 00F08F80 		beq	.L764
 9654 000e 1646     		mov	r6, r2
 9655 0010 0C46     		mov	r4, r1
 9656 0012 0546     		mov	r5, r0
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9657              		.loc 1 5045 0 is_stmt 0 discriminator 2
 9658 0014 0123     		movs	r3, #1
 9659 0016 80F84030 		strb	r3, [r0, #64]
ARM GAS  /tmp/cc1AMB4O.s 			page 315


5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9660              		.loc 1 5048 0 is_stmt 1 discriminator 2
 9661 001a 11F0200F 		tst	r1, #32
 9662 001e 02D0     		beq	.L751
5048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9663              		.loc 1 5048 0 is_stmt 0 discriminator 1
 9664 0020 12F0200F 		tst	r2, #32
 9665 0024 16D1     		bne	.L769
 9666              	.LVL823:
 9667              	.L751:
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9668              		.loc 1 5054 0 is_stmt 1
 9669 0026 14F0100F 		tst	r4, #16
 9670 002a 70D0     		beq	.L752
5054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9671              		.loc 1 5054 0 is_stmt 0 discriminator 1
 9672 002c 16F0100F 		tst	r6, #16
 9673 0030 6DD0     		beq	.L752
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9674              		.loc 1 5060 0 is_stmt 1
 9675 0032 C6F38033 		ubfx	r3, r6, #14, #1
 9676 0036 13B9     		cbnz	r3, .L753
5060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9677              		.loc 1 5060 0 is_stmt 0 discriminator 1
 9678 0038 16F4004F 		tst	r6, #32768
 9679 003c 63D0     		beq	.L754
 9680              	.L753:
5064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9681              		.loc 1 5064 0 is_stmt 1
 9682 003e EA6B     		ldr	r2, [r5, #60]
 9683 0040 5AB1     		cbz	r2, .L765
5066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9684              		.loc 1 5066 0
 9685 0042 16F4004F 		tst	r6, #32768
 9686 0046 0AD0     		beq	.L766
5068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9687              		.loc 1 5068 0
 9688 0048 1268     		ldr	r2, [r2]
 9689 004a 5268     		ldr	r2, [r2, #4]
 9690 004c 002A     		cmp	r2, #0
 9691 004e 2ED0     		beq	.L767
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9692              		.loc 1 5041 0
 9693 0050 0021     		movs	r1, #0
 9694 0052 05E0     		b	.L755
 9695              	.LVL824:
 9696              	.L769:
5051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9697              		.loc 1 5051 0
 9698 0054 FFF7FEFF 		bl	I2C_ITSlaveCplt
 9699              	.LVL825:
 9700 0058 E5E7     		b	.L751
 9701              	.L765:
5041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9702              		.loc 1 5041 0
 9703 005a 0021     		movs	r1, #0
 9704 005c 00E0     		b	.L755
ARM GAS  /tmp/cc1AMB4O.s 			page 316


 9705              	.L766:
 9706 005e 0021     		movs	r1, #0
 9707              	.L755:
 9708              	.LVL826:
5076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9709              		.loc 1 5076 0
 9710 0060 AA6B     		ldr	r2, [r5, #56]
 9711 0062 1AB1     		cbz	r2, .L756
5078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9712              		.loc 1 5078 0
 9713 0064 13B1     		cbz	r3, .L756
5080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9714              		.loc 1 5080 0
 9715 0066 1368     		ldr	r3, [r2]
 9716 0068 5B68     		ldr	r3, [r3, #4]
 9717 006a 13B3     		cbz	r3, .L757
 9718              	.L756:
5087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9719              		.loc 1 5087 0
 9720 006c 09BB     		cbnz	r1, .L757
5117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9721              		.loc 1 5117 0
 9722 006e 2B68     		ldr	r3, [r5]
 9723 0070 1022     		movs	r2, #16
 9724 0072 DA61     		str	r2, [r3, #28]
5120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9725              		.loc 1 5120 0
 9726 0074 6B6C     		ldr	r3, [r5, #68]
 9727 0076 43F00403 		orr	r3, r3, #4
 9728 007a 6B64     		str	r3, [r5, #68]
5123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9729              		.loc 1 5123 0
 9730 007c 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9731 0080 DBB2     		uxtb	r3, r3
 9732              	.LVL827:
5125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9733              		.loc 1 5125 0
 9734 0082 B7F1807F 		cmp	r7, #16777216
 9735 0086 14BF     		ite	ne
 9736 0088 0022     		movne	r2, #0
 9737 008a 0122     		moveq	r2, #1
 9738 008c 002F     		cmp	r7, #0
 9739 008e 14BF     		ite	ne
 9740 0090 1746     		movne	r7, r2
 9741 0092 0127     		moveq	r7, #1
 9742              	.LVL828:
 9743 0094 002F     		cmp	r7, #0
 9744 0096 40D0     		beq	.L760
5127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9745              		.loc 1 5127 0
 9746 0098 292B     		cmp	r3, #41
 9747 009a 18BF     		it	ne
 9748 009c 212B     		cmpne	r3, #33
 9749 009e 2BD1     		bne	.L762
5129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9750              		.loc 1 5129 0
 9751 00a0 2123     		movs	r3, #33
ARM GAS  /tmp/cc1AMB4O.s 			page 317


 9752              	.LVL829:
 9753 00a2 2B63     		str	r3, [r5, #48]
 9754              	.L763:
5141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9755              		.loc 1 5141 0
 9756 00a4 696C     		ldr	r1, [r5, #68]
 9757              	.LVL830:
 9758 00a6 2846     		mov	r0, r5
 9759 00a8 FFF7FEFF 		bl	I2C_ITError
 9760              	.LVL831:
 9761 00ac 35E0     		b	.L760
 9762              	.LVL832:
 9763              	.L767:
5070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9764              		.loc 1 5070 0
 9765 00ae 0121     		movs	r1, #1
 9766 00b0 D6E7     		b	.L755
 9767              	.LVL833:
 9768              	.L757:
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9769              		.loc 1 5090 0
 9770 00b2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9771 00b6 DBB2     		uxtb	r3, r3
 9772 00b8 282B     		cmp	r3, #40
 9773 00ba 08D0     		beq	.L770
 9774              	.L759:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9775              		.loc 1 5095 0
 9776 00bc 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9777 00c0 DBB2     		uxtb	r3, r3
 9778 00c2 292B     		cmp	r3, #41
 9779 00c4 0BD0     		beq	.L771
 9780              	.L761:
5110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9781              		.loc 1 5110 0
 9782 00c6 2B68     		ldr	r3, [r5]
 9783 00c8 1022     		movs	r2, #16
 9784 00ca DA61     		str	r2, [r3, #28]
 9785 00cc 25E0     		b	.L760
 9786              	.L770:
5090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9787              		.loc 1 5090 0 discriminator 1
 9788 00ce B7F1007F 		cmp	r7, #33554432
 9789 00d2 F3D1     		bne	.L759
5093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9790              		.loc 1 5093 0
 9791 00d4 2146     		mov	r1, r4
 9792              	.LVL834:
 9793 00d6 2846     		mov	r0, r5
 9794 00d8 FFF7FEFF 		bl	I2C_ITListenCplt
 9795              	.LVL835:
 9796 00dc 1DE0     		b	.L760
 9797              	.LVL836:
 9798              	.L771:
5095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 9799              		.loc 1 5095 0 discriminator 1
 9800 00de 17F5803F 		cmn	r7, #65536
ARM GAS  /tmp/cc1AMB4O.s 			page 318


 9801 00e2 F0D0     		beq	.L761
5098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9802              		.loc 1 5098 0
 9803 00e4 2B68     		ldr	r3, [r5]
 9804 00e6 1022     		movs	r2, #16
 9805 00e8 DA61     		str	r2, [r3, #28]
5101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9806              		.loc 1 5101 0
 9807 00ea 2846     		mov	r0, r5
 9808 00ec FFF7FEFF 		bl	I2C_Flush_TXDR
 9809              	.LVL837:
5105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 9810              		.loc 1 5105 0
 9811 00f0 2846     		mov	r0, r5
 9812 00f2 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9813              	.LVL838:
 9814 00f6 10E0     		b	.L760
 9815              	.LVL839:
 9816              	.L762:
5131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           {
 9817              		.loc 1 5131 0
 9818 00f8 2A2B     		cmp	r3, #42
 9819 00fa 18BF     		it	ne
 9820 00fc 222B     		cmpne	r3, #34
 9821 00fe D1D1     		bne	.L763
5133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****           }
 9822              		.loc 1 5133 0
 9823 0100 2223     		movs	r3, #34
 9824              	.LVL840:
 9825 0102 2B63     		str	r3, [r5, #48]
 9826 0104 CEE7     		b	.L763
 9827              	.LVL841:
 9828              	.L754:
5148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 9829              		.loc 1 5148 0
 9830 0106 2B68     		ldr	r3, [r5]
 9831 0108 1022     		movs	r2, #16
 9832 010a DA61     		str	r2, [r3, #28]
 9833 010c 05E0     		b	.L760
 9834              	.L752:
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9835              		.loc 1 5151 0
 9836 010e 14F0080F 		tst	r4, #8
 9837 0112 02D0     		beq	.L760
5151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9838              		.loc 1 5151 0 is_stmt 0 discriminator 1
 9839 0114 16F0080F 		tst	r6, #8
 9840 0118 03D1     		bne	.L772
 9841              	.LVL842:
 9842              	.L760:
5161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9843              		.loc 1 5161 0 is_stmt 1
 9844 011a 0020     		movs	r0, #0
 9845 011c 85F84000 		strb	r0, [r5, #64]
 9846              	.LVL843:
 9847              	.L750:
5164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 319


 9848              		.loc 1 5164 0
 9849 0120 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9850              	.LVL844:
 9851              	.L772:
5153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9852              		.loc 1 5153 0
 9853 0122 2146     		mov	r1, r4
 9854 0124 2846     		mov	r0, r5
 9855 0126 FFF7FEFF 		bl	I2C_ITAddrCplt
 9856              	.LVL845:
 9857 012a F6E7     		b	.L760
 9858              	.LVL846:
 9859              	.L764:
5045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9860              		.loc 1 5045 0
 9861 012c 0220     		movs	r0, #2
 9862              	.LVL847:
 9863 012e F7E7     		b	.L750
 9864              		.cfi_endproc
 9865              	.LFE193:
 9867              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 9868              		.align	1
 9869              		.syntax unified
 9870              		.thumb
 9871              		.thumb_func
 9872              		.fpu fpv5-sp-d16
 9874              	I2C_Master_ISR_DMA:
 9875              	.LFB192:
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9876              		.loc 1 4904 0
 9877              		.cfi_startproc
 9878              		@ args = 0, pretend = 0, frame = 0
 9879              		@ frame_needed = 0, uses_anonymous_args = 0
 9880              	.LVL848:
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9881              		.loc 1 4909 0
 9882 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9883 0004 012B     		cmp	r3, #1
 9884 0006 00F09980 		beq	.L786
4904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint16_t devaddress;
 9885              		.loc 1 4904 0 discriminator 2
 9886 000a 10B5     		push	{r4, lr}
 9887              	.LCFI135:
 9888              		.cfi_def_cfa_offset 8
 9889              		.cfi_offset 4, -8
 9890              		.cfi_offset 14, -4
 9891 000c 82B0     		sub	sp, sp, #8
 9892              	.LCFI136:
 9893              		.cfi_def_cfa_offset 16
 9894 000e 0446     		mov	r4, r0
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9895              		.loc 1 4909 0 discriminator 2
 9896 0010 0123     		movs	r3, #1
 9897 0012 80F84030 		strb	r3, [r0, #64]
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9898              		.loc 1 4911 0 discriminator 2
 9899 0016 11F0100F 		tst	r1, #16
ARM GAS  /tmp/cc1AMB4O.s 			page 320


 9900 001a 02D0     		beq	.L775
4911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9901              		.loc 1 4911 0 is_stmt 0 discriminator 1
 9902 001c 12F0100F 		tst	r2, #16
 9903 0020 31D1     		bne	.L792
 9904              	.L775:
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9905              		.loc 1 4927 0 is_stmt 1
 9906 0022 11F0800F 		tst	r1, #128
 9907 0026 5FD0     		beq	.L777
4927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 9908              		.loc 1 4927 0 is_stmt 0 discriminator 1
 9909 0028 12F0400F 		tst	r2, #64
 9910 002c 5CD0     		beq	.L777
4930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9911              		.loc 1 4930 0 is_stmt 1
 9912 002e 2268     		ldr	r2, [r4]
 9913              	.LVL849:
 9914 0030 1368     		ldr	r3, [r2]
 9915 0032 23F04003 		bic	r3, r3, #64
 9916 0036 1360     		str	r3, [r2]
4932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 9917              		.loc 1 4932 0
 9918 0038 638D     		ldrh	r3, [r4, #42]
 9919 003a 9BB2     		uxth	r3, r3
 9920 003c 002B     		cmp	r3, #0
 9921 003e 45D0     		beq	.L778
4935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9922              		.loc 1 4935 0
 9923 0040 2368     		ldr	r3, [r4]
 9924 0042 5968     		ldr	r1, [r3, #4]
 9925              	.LVL850:
 9926 0044 C1F30901 		ubfx	r1, r1, #0, #10
 9927              	.LVL851:
4938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9928              		.loc 1 4938 0
 9929 0048 638D     		ldrh	r3, [r4, #42]
 9930 004a 9BB2     		uxth	r3, r3
 9931 004c FF2B     		cmp	r3, #255
 9932 004e 2CD9     		bls	.L779
4940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 9933              		.loc 1 4940 0
 9934 0050 FF23     		movs	r3, #255
 9935 0052 2385     		strh	r3, [r4, #40]	@ movhi
 9936              	.LVL852:
4941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9937              		.loc 1 4941 0
 9938 0054 4FF08073 		mov	r3, #16777216
 9939              	.LVL853:
 9940              	.L780:
4957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9941              		.loc 1 4957 0
 9942 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 9943 005c 0020     		movs	r0, #0
 9944              	.LVL854:
 9945 005e 0090     		str	r0, [sp]
 9946 0060 2046     		mov	r0, r4
ARM GAS  /tmp/cc1AMB4O.s 			page 321


 9947 0062 FFF7FEFF 		bl	I2C_TransferConfig
 9948              	.LVL855:
4960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9949              		.loc 1 4960 0
 9950 0066 638D     		ldrh	r3, [r4, #42]
 9951 0068 228D     		ldrh	r2, [r4, #40]
 9952 006a 9B1A     		subs	r3, r3, r2
 9953 006c 9BB2     		uxth	r3, r3
 9954 006e 6385     		strh	r3, [r4, #42]	@ movhi
4963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 9955              		.loc 1 4963 0
 9956 0070 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9957 0074 DBB2     		uxtb	r3, r3
 9958 0076 222B     		cmp	r3, #34
 9959 0078 22D0     		beq	.L793
4969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 9960              		.loc 1 4969 0
 9961 007a 2268     		ldr	r2, [r4]
 9962 007c 1368     		ldr	r3, [r2]
 9963 007e 43F48043 		orr	r3, r3, #16384
 9964 0082 1360     		str	r3, [r2]
 9965 0084 0CE0     		b	.L776
 9966              	.LVL856:
 9967              	.L792:
4914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9968              		.loc 1 4914 0
 9969 0086 0368     		ldr	r3, [r0]
 9970 0088 1022     		movs	r2, #16
 9971              	.LVL857:
 9972 008a DA61     		str	r2, [r3, #28]
4917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9973              		.loc 1 4917 0
 9974 008c 436C     		ldr	r3, [r0, #68]
 9975 008e 43F00403 		orr	r3, r3, #4
 9976 0092 4364     		str	r3, [r0, #68]
4922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9977              		.loc 1 4922 0
 9978 0094 2021     		movs	r1, #32
 9979              	.LVL858:
 9980 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 9981              	.LVL859:
4925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 9982              		.loc 1 4925 0
 9983 009a 2046     		mov	r0, r4
 9984 009c FFF7FEFF 		bl	I2C_Flush_TXDR
 9985              	.LVL860:
 9986              	.L776:
5025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9987              		.loc 1 5025 0
 9988 00a0 0020     		movs	r0, #0
 9989 00a2 84F84000 		strb	r0, [r4, #64]
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 9990              		.loc 1 5028 0
 9991 00a6 02B0     		add	sp, sp, #8
 9992              	.LCFI137:
 9993              		.cfi_remember_state
 9994              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc1AMB4O.s 			page 322


 9995              		@ sp needed
 9996 00a8 10BD     		pop	{r4, pc}
 9997              	.LVL861:
 9998              	.L779:
 9999              	.LCFI138:
 10000              		.cfi_restore_state
4945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 10001              		.loc 1 4945 0
 10002 00aa 638D     		ldrh	r3, [r4, #42]
 10003 00ac 2385     		strh	r3, [r4, #40]	@ movhi
4946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 10004              		.loc 1 4946 0
 10005 00ae E36A     		ldr	r3, [r4, #44]
 10006 00b0 13F5803F 		cmn	r3, #65536
 10007 00b4 01D0     		beq	.L787
4948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 10008              		.loc 1 4948 0
 10009 00b6 E36A     		ldr	r3, [r4, #44]
 10010              	.LVL862:
 10011 00b8 CEE7     		b	.L780
 10012              	.LVL863:
 10013              	.L787:
4952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 10014              		.loc 1 4952 0
 10015 00ba 4FF00073 		mov	r3, #33554432
 10016 00be CBE7     		b	.L780
 10017              	.LVL864:
 10018              	.L793:
4965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 10019              		.loc 1 4965 0
 10020 00c0 2268     		ldr	r2, [r4]
 10021 00c2 1368     		ldr	r3, [r2]
 10022 00c4 43F40043 		orr	r3, r3, #32768
 10023 00c8 1360     		str	r3, [r2]
 10024 00ca E9E7     		b	.L776
 10025              	.LVL865:
 10026              	.L778:
4975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 10027              		.loc 1 4975 0
 10028 00cc 2368     		ldr	r3, [r4]
 10029 00ce 5B68     		ldr	r3, [r3, #4]
 10030 00d0 13F0007F 		tst	r3, #33554432
 10031 00d4 03D1     		bne	.L782
4978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 10032              		.loc 1 4978 0
 10033 00d6 2046     		mov	r0, r4
 10034              	.LVL866:
 10035 00d8 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10036              	.LVL867:
 10037 00dc E0E7     		b	.L776
 10038              	.LVL868:
 10039              	.L782:
4984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       }
 10040              		.loc 1 4984 0
 10041 00de 4021     		movs	r1, #64
 10042              	.LVL869:
 10043 00e0 2046     		mov	r0, r4
ARM GAS  /tmp/cc1AMB4O.s 			page 323


 10044              	.LVL870:
 10045 00e2 FFF7FEFF 		bl	I2C_ITError
 10046              	.LVL871:
 10047 00e6 DBE7     		b	.L776
 10048              	.LVL872:
 10049              	.L777:
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10050              		.loc 1 4988 0
 10051 00e8 11F0400F 		tst	r1, #64
 10052 00ec 1CD0     		beq	.L783
4988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10053              		.loc 1 4988 0 is_stmt 0 discriminator 1
 10054 00ee 12F0400F 		tst	r2, #64
 10055 00f2 19D0     		beq	.L783
4990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10056              		.loc 1 4990 0 is_stmt 1
 10057 00f4 638D     		ldrh	r3, [r4, #42]
 10058 00f6 9BB2     		uxth	r3, r3
 10059 00f8 8BB9     		cbnz	r3, .L784
4992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****       {
 10060              		.loc 1 4992 0
 10061 00fa 2368     		ldr	r3, [r4]
 10062 00fc 5A68     		ldr	r2, [r3, #4]
 10063              	.LVL873:
 10064 00fe 12F0007F 		tst	r2, #33554432
 10065 0102 CDD1     		bne	.L776
4995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         {
 10066              		.loc 1 4995 0
 10067 0104 E26A     		ldr	r2, [r4, #44]
 10068 0106 12F5803F 		cmn	r2, #65536
 10069 010a 04D1     		bne	.L785
4998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 10070              		.loc 1 4998 0
 10071 010c 5A68     		ldr	r2, [r3, #4]
 10072 010e 42F48042 		orr	r2, r2, #16384
 10073 0112 5A60     		str	r2, [r3, #4]
 10074 0114 C4E7     		b	.L776
 10075              	.L785:
5003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****         }
 10076              		.loc 1 5003 0
 10077 0116 2046     		mov	r0, r4
 10078              	.LVL874:
 10079 0118 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 10080              	.LVL875:
 10081 011c C0E7     		b	.L776
 10082              	.LVL876:
 10083              	.L784:
5011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10084              		.loc 1 5011 0
 10085 011e 4021     		movs	r1, #64
 10086              	.LVL877:
 10087 0120 2046     		mov	r0, r4
 10088              	.LVL878:
 10089 0122 FFF7FEFF 		bl	I2C_ITError
 10090              	.LVL879:
 10091 0126 BBE7     		b	.L776
 10092              	.LVL880:
ARM GAS  /tmp/cc1AMB4O.s 			page 324


 10093              	.L783:
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10094              		.loc 1 5014 0
 10095 0128 11F0200F 		tst	r1, #32
 10096 012c B8D0     		beq	.L776
5014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10097              		.loc 1 5014 0 is_stmt 0 discriminator 1
 10098 012e 12F0200F 		tst	r2, #32
 10099 0132 B5D0     		beq	.L776
5017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10100              		.loc 1 5017 0 is_stmt 1
 10101 0134 2046     		mov	r0, r4
 10102              	.LVL881:
 10103 0136 FFF7FEFF 		bl	I2C_ITMasterCplt
 10104              	.LVL882:
 10105 013a B1E7     		b	.L776
 10106              	.LVL883:
 10107              	.L786:
 10108              	.LCFI139:
 10109              		.cfi_def_cfa_offset 0
 10110              		.cfi_restore 4
 10111              		.cfi_restore 14
4909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10112              		.loc 1 4909 0
 10113 013c 0220     		movs	r0, #2
 10114              	.LVL884:
5028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10115              		.loc 1 5028 0
 10116 013e 7047     		bx	lr
 10117              		.cfi_endproc
 10118              	.LFE192:
 10120              		.section	.text.I2C_DMAError,"ax",%progbits
 10121              		.align	1
 10122              		.syntax unified
 10123              		.thumb
 10124              		.thumb_func
 10125              		.fpu fpv5-sp-d16
 10127              	I2C_DMAError:
 10128              	.LFB209:
6177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t treatdmaerror = 0U;
 10129              		.loc 1 6177 0
 10130              		.cfi_startproc
 10131              		@ args = 0, pretend = 0, frame = 0
 10132              		@ frame_needed = 0, uses_anonymous_args = 0
 10133              	.LVL885:
 10134 0000 38B5     		push	{r3, r4, r5, lr}
 10135              	.LCFI140:
 10136              		.cfi_def_cfa_offset 16
 10137              		.cfi_offset 3, -16
 10138              		.cfi_offset 4, -12
 10139              		.cfi_offset 5, -8
 10140              		.cfi_offset 14, -4
 10141              	.LVL886:
6179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10142              		.loc 1 6179 0
 10143 0002 846B     		ldr	r4, [r0, #56]
 10144              	.LVL887:
ARM GAS  /tmp/cc1AMB4O.s 			page 325


6181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10145              		.loc 1 6181 0
 10146 0004 A36B     		ldr	r3, [r4, #56]
 10147 0006 7BB1     		cbz	r3, .L798
6183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10148              		.loc 1 6183 0
 10149 0008 1B68     		ldr	r3, [r3]
 10150 000a 5B68     		ldr	r3, [r3, #4]
 10151 000c 73B1     		cbz	r3, .L799
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10152              		.loc 1 6178 0
 10153 000e 0025     		movs	r5, #0
 10154              	.L795:
 10155              	.LVL888:
6189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10156              		.loc 1 6189 0
 10157 0010 E36B     		ldr	r3, [r4, #60]
 10158 0012 1BB1     		cbz	r3, .L796
6191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10159              		.loc 1 6191 0
 10160 0014 1B68     		ldr	r3, [r3]
 10161 0016 5B68     		ldr	r3, [r3, #4]
 10162 0018 03B9     		cbnz	r3, .L796
6193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10163              		.loc 1 6193 0
 10164 001a 0125     		movs	r5, #1
 10165              	.LVL889:
 10166              	.L796:
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10167              		.loc 1 6198 0
 10168 001c FFF7FEFF 		bl	HAL_DMA_GetError
 10169              	.LVL890:
 10170 0020 0228     		cmp	r0, #2
 10171 0022 00D0     		beq	.L794
6198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10172              		.loc 1 6198 0 is_stmt 0 discriminator 1
 10173 0024 25B9     		cbnz	r5, .L802
 10174              	.L794:
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10175              		.loc 1 6206 0 is_stmt 1
 10176 0026 38BD     		pop	{r3, r4, r5, pc}
 10177              	.LVL891:
 10178              	.L798:
6178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10179              		.loc 1 6178 0
 10180 0028 0025     		movs	r5, #0
 10181 002a F1E7     		b	.L795
 10182              	.L799:
6185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10183              		.loc 1 6185 0
 10184 002c 0125     		movs	r5, #1
 10185 002e EFE7     		b	.L795
 10186              	.LVL892:
 10187              	.L802:
6201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10188              		.loc 1 6201 0
 10189 0030 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc1AMB4O.s 			page 326


 10190 0032 5368     		ldr	r3, [r2, #4]
 10191 0034 43F40043 		orr	r3, r3, #32768
 10192 0038 5360     		str	r3, [r2, #4]
6204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10193              		.loc 1 6204 0
 10194 003a 1021     		movs	r1, #16
 10195 003c 2046     		mov	r0, r4
 10196 003e FFF7FEFF 		bl	I2C_ITError
 10197              	.LVL893:
6206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10198              		.loc 1 6206 0
 10199 0042 F0E7     		b	.L794
 10200              		.cfi_endproc
 10201              	.LFE209:
 10203              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 10204              		.align	1
 10205              		.syntax unified
 10206              		.thumb
 10207              		.thumb_func
 10208              		.fpu fpv5-sp-d16
 10210              	I2C_DMAMasterTransmitCplt:
 10211              	.LFB205:
6027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10212              		.loc 1 6027 0
 10213              		.cfi_startproc
 10214              		@ args = 0, pretend = 0, frame = 0
 10215              		@ frame_needed = 0, uses_anonymous_args = 0
 10216              	.LVL894:
 10217 0000 10B5     		push	{r4, lr}
 10218              	.LCFI141:
 10219              		.cfi_def_cfa_offset 8
 10220              		.cfi_offset 4, -8
 10221              		.cfi_offset 14, -4
6028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10222              		.loc 1 6028 0
 10223 0002 846B     		ldr	r4, [r0, #56]
 10224              	.LVL895:
6031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10225              		.loc 1 6031 0
 10226 0004 2268     		ldr	r2, [r4]
 10227 0006 1368     		ldr	r3, [r2]
 10228 0008 23F48043 		bic	r3, r3, #16384
 10229 000c 1360     		str	r3, [r2]
6034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10230              		.loc 1 6034 0
 10231 000e 638D     		ldrh	r3, [r4, #42]
 10232 0010 9BB2     		uxth	r3, r3
 10233 0012 ABB1     		cbz	r3, .L810
6043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10234              		.loc 1 6043 0
 10235 0014 238D     		ldrh	r3, [r4, #40]
 10236 0016 616A     		ldr	r1, [r4, #36]
 10237 0018 1944     		add	r1, r1, r3
 10238 001a 6162     		str	r1, [r4, #36]
6046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10239              		.loc 1 6046 0
 10240 001c 638D     		ldrh	r3, [r4, #42]
ARM GAS  /tmp/cc1AMB4O.s 			page 327


 10241 001e 9BB2     		uxth	r3, r3
 10242 0020 FF2B     		cmp	r3, #255
 10243 0022 12D9     		bls	.L806
6048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10244              		.loc 1 6048 0
 10245 0024 FF23     		movs	r3, #255
 10246 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10247              	.L807:
6056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10248              		.loc 1 6056 0
 10249 0028 2268     		ldr	r2, [r4]
 10250 002a 238D     		ldrh	r3, [r4, #40]
 10251 002c 2832     		adds	r2, r2, #40
 10252 002e A06B     		ldr	r0, [r4, #56]
 10253              	.LVL896:
 10254 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10255              	.LVL897:
 10256 0034 60B9     		cbnz	r0, .L811
6064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10257              		.loc 1 6064 0
 10258 0036 4021     		movs	r1, #64
 10259 0038 2046     		mov	r0, r4
 10260 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10261              	.LVL898:
 10262              	.L803:
6067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10263              		.loc 1 6067 0
 10264 003e 10BD     		pop	{r4, pc}
 10265              	.LVL899:
 10266              	.L810:
6037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10267              		.loc 1 6037 0
 10268 0040 2021     		movs	r1, #32
 10269 0042 2046     		mov	r0, r4
 10270              	.LVL900:
 10271 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10272              	.LVL901:
 10273 0048 F9E7     		b	.L803
 10274              	.LVL902:
 10275              	.L806:
6052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10276              		.loc 1 6052 0
 10277 004a 638D     		ldrh	r3, [r4, #42]
 10278 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10279 004e EBE7     		b	.L807
 10280              	.LVL903:
 10281              	.L811:
6059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10282              		.loc 1 6059 0
 10283 0050 1021     		movs	r1, #16
 10284 0052 2046     		mov	r0, r4
 10285 0054 FFF7FEFF 		bl	I2C_ITError
 10286              	.LVL904:
 10287 0058 F1E7     		b	.L803
 10288              		.cfi_endproc
 10289              	.LFE205:
 10291              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
ARM GAS  /tmp/cc1AMB4O.s 			page 328


 10292              		.align	1
 10293              		.syntax unified
 10294              		.thumb
 10295              		.thumb_func
 10296              		.fpu fpv5-sp-d16
 10298              	I2C_DMAMasterReceiveCplt:
 10299              	.LFB207:
6102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10300              		.loc 1 6102 0
 10301              		.cfi_startproc
 10302              		@ args = 0, pretend = 0, frame = 0
 10303              		@ frame_needed = 0, uses_anonymous_args = 0
 10304              	.LVL905:
 10305 0000 10B5     		push	{r4, lr}
 10306              	.LCFI142:
 10307              		.cfi_def_cfa_offset 8
 10308              		.cfi_offset 4, -8
 10309              		.cfi_offset 14, -4
6103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10310              		.loc 1 6103 0
 10311 0002 846B     		ldr	r4, [r0, #56]
 10312              	.LVL906:
6106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10313              		.loc 1 6106 0
 10314 0004 2268     		ldr	r2, [r4]
 10315 0006 1368     		ldr	r3, [r2]
 10316 0008 23F40043 		bic	r3, r3, #32768
 10317 000c 1360     		str	r3, [r2]
6109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10318              		.loc 1 6109 0
 10319 000e 638D     		ldrh	r3, [r4, #42]
 10320 0010 9BB2     		uxth	r3, r3
 10321 0012 ABB1     		cbz	r3, .L819
6118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10322              		.loc 1 6118 0
 10323 0014 238D     		ldrh	r3, [r4, #40]
 10324 0016 626A     		ldr	r2, [r4, #36]
 10325 0018 1A44     		add	r2, r2, r3
 10326 001a 6262     		str	r2, [r4, #36]
6121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10327              		.loc 1 6121 0
 10328 001c 638D     		ldrh	r3, [r4, #42]
 10329 001e 9BB2     		uxth	r3, r3
 10330 0020 FF2B     		cmp	r3, #255
 10331 0022 12D9     		bls	.L815
6123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10332              		.loc 1 6123 0
 10333 0024 FF23     		movs	r3, #255
 10334 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10335              	.L816:
6131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     {
 10336              		.loc 1 6131 0
 10337 0028 2168     		ldr	r1, [r4]
 10338 002a 238D     		ldrh	r3, [r4, #40]
 10339 002c 2431     		adds	r1, r1, #36
 10340 002e E06B     		ldr	r0, [r4, #60]
 10341              	.LVL907:
ARM GAS  /tmp/cc1AMB4O.s 			page 329


 10342 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10343              	.LVL908:
 10344 0034 60B9     		cbnz	r0, .L820
6139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10345              		.loc 1 6139 0
 10346 0036 4021     		movs	r1, #64
 10347 0038 2046     		mov	r0, r4
 10348 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10349              	.LVL909:
 10350              	.L812:
6142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10351              		.loc 1 6142 0
 10352 003e 10BD     		pop	{r4, pc}
 10353              	.LVL910:
 10354              	.L819:
6112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10355              		.loc 1 6112 0
 10356 0040 2021     		movs	r1, #32
 10357 0042 2046     		mov	r0, r4
 10358              	.LVL911:
 10359 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10360              	.LVL912:
 10361 0048 F9E7     		b	.L812
 10362              	.LVL913:
 10363              	.L815:
6127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10364              		.loc 1 6127 0
 10365 004a 638D     		ldrh	r3, [r4, #42]
 10366 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10367 004e EBE7     		b	.L816
 10368              	.LVL914:
 10369              	.L820:
6134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****     }
 10370              		.loc 1 6134 0
 10371 0050 1021     		movs	r1, #16
 10372 0052 2046     		mov	r0, r4
 10373 0054 FFF7FEFF 		bl	I2C_ITError
 10374              	.LVL915:
 10375 0058 F1E7     		b	.L812
 10376              		.cfi_endproc
 10377              	.LFE207:
 10379              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10380              		.align	1
 10381              		.global	HAL_I2C_ER_IRQHandler
 10382              		.syntax unified
 10383              		.thumb
 10384              		.thumb_func
 10385              		.fpu fpv5-sp-d16
 10387              	HAL_I2C_ER_IRQHandler:
 10388              	.LFB176:
4353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10389              		.loc 1 4353 0
 10390              		.cfi_startproc
 10391              		@ args = 0, pretend = 0, frame = 0
 10392              		@ frame_needed = 0, uses_anonymous_args = 0
 10393              	.LVL916:
 10394 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc1AMB4O.s 			page 330


 10395              	.LCFI143:
 10396              		.cfi_def_cfa_offset 8
 10397              		.cfi_offset 4, -8
 10398              		.cfi_offset 14, -4
4354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10399              		.loc 1 4354 0
 10400 0002 0268     		ldr	r2, [r0]
 10401 0004 9369     		ldr	r3, [r2, #24]
 10402              	.LVL917:
4355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   uint32_t tmperror;
 10403              		.loc 1 4355 0
 10404 0006 1168     		ldr	r1, [r2]
 10405              	.LVL918:
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10406              		.loc 1 4359 0
 10407 0008 13F4807F 		tst	r3, #256
 10408 000c 09D0     		beq	.L822
4359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10409              		.loc 1 4359 0 is_stmt 0 discriminator 1
 10410 000e 11F0800F 		tst	r1, #128
 10411 0012 06D0     		beq	.L822
4361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10412              		.loc 1 4361 0 is_stmt 1
 10413 0014 446C     		ldr	r4, [r0, #68]
 10414 0016 44F00104 		orr	r4, r4, #1
 10415 001a 4464     		str	r4, [r0, #68]
4364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10416              		.loc 1 4364 0
 10417 001c 4FF48074 		mov	r4, #256
 10418 0020 D461     		str	r4, [r2, #28]
 10419              	.L822:
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10420              		.loc 1 4368 0
 10421 0022 13F4806F 		tst	r3, #1024
 10422 0026 0AD0     		beq	.L823
4368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10423              		.loc 1 4368 0 is_stmt 0 discriminator 1
 10424 0028 11F0800F 		tst	r1, #128
 10425 002c 07D0     		beq	.L823
4370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10426              		.loc 1 4370 0 is_stmt 1
 10427 002e 426C     		ldr	r2, [r0, #68]
 10428 0030 42F00802 		orr	r2, r2, #8
 10429 0034 4264     		str	r2, [r0, #68]
4373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10430              		.loc 1 4373 0
 10431 0036 0268     		ldr	r2, [r0]
 10432 0038 4FF48064 		mov	r4, #1024
 10433 003c D461     		str	r4, [r2, #28]
 10434              	.L823:
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10435              		.loc 1 4377 0
 10436 003e 13F4007F 		tst	r3, #512
 10437 0042 0AD0     		beq	.L824
4377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10438              		.loc 1 4377 0 is_stmt 0 discriminator 1
 10439 0044 11F0800F 		tst	r1, #128
ARM GAS  /tmp/cc1AMB4O.s 			page 331


 10440 0048 07D0     		beq	.L824
4379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10441              		.loc 1 4379 0 is_stmt 1
 10442 004a 436C     		ldr	r3, [r0, #68]
 10443              	.LVL919:
 10444 004c 43F00203 		orr	r3, r3, #2
 10445 0050 4364     		str	r3, [r0, #68]
4382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10446              		.loc 1 4382 0
 10447 0052 0368     		ldr	r3, [r0]
 10448 0054 4FF40072 		mov	r2, #512
 10449 0058 DA61     		str	r2, [r3, #28]
 10450              	.L824:
4386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10451              		.loc 1 4386 0
 10452 005a 416C     		ldr	r1, [r0, #68]
 10453              	.LVL920:
4389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10454              		.loc 1 4389 0
 10455 005c 11F00B0F 		tst	r1, #11
 10456 0060 00D1     		bne	.L827
 10457              	.LVL921:
 10458              	.L821:
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10459              		.loc 1 4393 0
 10460 0062 10BD     		pop	{r4, pc}
 10461              	.LVL922:
 10462              	.L827:
4391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10463              		.loc 1 4391 0
 10464 0064 FFF7FEFF 		bl	I2C_ITError
 10465              	.LVL923:
4393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10466              		.loc 1 4393 0
 10467 0068 FBE7     		b	.L821
 10468              		.cfi_endproc
 10469              	.LFE176:
 10471              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10472              		.align	1
 10473              		.syntax unified
 10474              		.thumb
 10475              		.thumb_func
 10476              		.fpu fpv5-sp-d16
 10478              	I2C_DMAAbort:
 10479              	.LFB210:
6215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10480              		.loc 1 6215 0
 10481              		.cfi_startproc
 10482              		@ args = 0, pretend = 0, frame = 0
 10483              		@ frame_needed = 0, uses_anonymous_args = 0
 10484              	.LVL924:
 10485 0000 08B5     		push	{r3, lr}
 10486              	.LCFI144:
 10487              		.cfi_def_cfa_offset 8
 10488              		.cfi_offset 3, -8
 10489              		.cfi_offset 14, -4
6216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
ARM GAS  /tmp/cc1AMB4O.s 			page 332


 10490              		.loc 1 6216 0
 10491 0002 806B     		ldr	r0, [r0, #56]
 10492              	.LVL925:
6219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10493              		.loc 1 6219 0
 10494 0004 836B     		ldr	r3, [r0, #56]
 10495 0006 0BB1     		cbz	r3, .L829
6221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10496              		.loc 1 6221 0
 10497 0008 0022     		movs	r2, #0
 10498 000a 1A65     		str	r2, [r3, #80]
 10499              	.L829:
6223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   {
 10500              		.loc 1 6223 0
 10501 000c C36B     		ldr	r3, [r0, #60]
 10502 000e 0BB1     		cbz	r3, .L830
6225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   }
 10503              		.loc 1 6225 0
 10504 0010 0022     		movs	r2, #0
 10505 0012 1A65     		str	r2, [r3, #80]
 10506              	.L830:
6228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10507              		.loc 1 6228 0
 10508 0014 FFF7FEFF 		bl	I2C_TreatErrorCallback
 10509              	.LVL926:
6229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10510              		.loc 1 6229 0
 10511 0018 08BD     		pop	{r3, pc}
 10512              		.cfi_endproc
 10513              	.LFE210:
 10515              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10516              		.align	1
 10517              		.global	HAL_I2C_GetState
 10518              		.syntax unified
 10519              		.thumb
 10520              		.thumb_func
 10521              		.fpu fpv5-sp-d16
 10523              	HAL_I2C_GetState:
 10524              	.LFB187:
4584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   /* Return I2C handle state */
 10525              		.loc 1 4584 0
 10526              		.cfi_startproc
 10527              		@ args = 0, pretend = 0, frame = 0
 10528              		@ frame_needed = 0, uses_anonymous_args = 0
 10529              		@ link register save eliminated.
 10530              	.LVL927:
4586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10531              		.loc 1 4586 0
 10532 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10533              	.LVL928:
4587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10534              		.loc 1 4587 0
 10535 0004 7047     		bx	lr
 10536              		.cfi_endproc
 10537              	.LFE187:
 10539              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10540              		.align	1
ARM GAS  /tmp/cc1AMB4O.s 			page 333


 10541              		.global	HAL_I2C_GetMode
 10542              		.syntax unified
 10543              		.thumb
 10544              		.thumb_func
 10545              		.fpu fpv5-sp-d16
 10547              	HAL_I2C_GetMode:
 10548              	.LFB188:
4596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->Mode;
 10549              		.loc 1 4596 0
 10550              		.cfi_startproc
 10551              		@ args = 0, pretend = 0, frame = 0
 10552              		@ frame_needed = 0, uses_anonymous_args = 0
 10553              		@ link register save eliminated.
 10554              	.LVL929:
4597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10555              		.loc 1 4597 0
 10556 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10557              	.LVL930:
4598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10558              		.loc 1 4598 0
 10559 0004 7047     		bx	lr
 10560              		.cfi_endproc
 10561              	.LFE188:
 10563              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10564              		.align	1
 10565              		.global	HAL_I2C_GetError
 10566              		.syntax unified
 10567              		.thumb
 10568              		.thumb_func
 10569              		.fpu fpv5-sp-d16
 10571              	HAL_I2C_GetError:
 10572              	.LFB189:
4607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10573              		.loc 1 4607 0
 10574              		.cfi_startproc
 10575              		@ args = 0, pretend = 0, frame = 0
 10576              		@ frame_needed = 0, uses_anonymous_args = 0
 10577              		@ link register save eliminated.
 10578              	.LVL931:
4608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** }
 10579              		.loc 1 4608 0
 10580 0000 406C     		ldr	r0, [r0, #68]
 10581              	.LVL932:
4609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c **** 
 10582              		.loc 1 4609 0
 10583 0002 7047     		bx	lr
 10584              		.cfi_endproc
 10585              	.LFE189:
 10587              		.text
 10588              	.Letext0:
 10589              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 10590              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 10591              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 10592              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 10593              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f756xx.h"
 10594              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 10595              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
ARM GAS  /tmp/cc1AMB4O.s 			page 334


 10596              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 10597              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 10598              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cc1AMB4O.s 			page 335


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_i2c.c
     /tmp/cc1AMB4O.s:18     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/cc1AMB4O.s:24     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/cc1AMB4O.s:58     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/cc1AMB4O.s:64     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/cc1AMB4O.s:110    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/cc1AMB4O.s:116    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/cc1AMB4O.s:220    .text.I2C_Enable_IRQ:000000000000006c $d
     /tmp/cc1AMB4O.s:9874   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/cc1AMB4O.s:9631   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/cc1AMB4O.s:226    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/cc1AMB4O.s:232    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/cc1AMB4O.s:393    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/cc1AMB4O.s:399    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/cc1AMB4O.s:433    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/cc1AMB4O.s:439    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/cc1AMB4O.s:544    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1AMB4O.s:550    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cc1AMB4O.s:624    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1AMB4O.s:630    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cc1AMB4O.s:700    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/cc1AMB4O.s:706    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/cc1AMB4O.s:803    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/cc1AMB4O.s:808    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/cc1AMB4O.s:814    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/cc1AMB4O.s:911    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/cc1AMB4O.s:916    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1AMB4O.s:922    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cc1AMB4O.s:993    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/cc1AMB4O.s:999    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cc1AMB4O.s:1109   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cc1AMB4O.s:1116   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cc1AMB4O.s:1130   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/cc1AMB4O.s:1137   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/cc1AMB4O.s:1270   .text.HAL_I2C_Init:00000000000000b8 $d
     /tmp/cc1AMB4O.s:1275   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cc1AMB4O.s:1282   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cc1AMB4O.s:1296   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/cc1AMB4O.s:1303   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/cc1AMB4O.s:1358   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/cc1AMB4O.s:1365   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/cc1AMB4O.s:1618   .text.HAL_I2C_Master_Transmit:0000000000000178 $d
     /tmp/cc1AMB4O.s:1623   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/cc1AMB4O.s:1630   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/cc1AMB4O.s:1883   .text.HAL_I2C_Master_Receive:0000000000000178 $d
     /tmp/cc1AMB4O.s:1888   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/cc1AMB4O.s:1895   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/cc1AMB4O.s:2172   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/cc1AMB4O.s:2179   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/cc1AMB4O.s:2438   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:2445   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/cc1AMB4O.s:2574   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/cc1AMB4O.s:9334   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/cc1AMB4O.s:2581   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:2588   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/cc1AMB4O.s:2717   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
ARM GAS  /tmp/cc1AMB4O.s 			page 336


     /tmp/cc1AMB4O.s:2724   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:2731   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cc1AMB4O.s:2811   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/cc1AMB4O.s:8866   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/cc1AMB4O.s:2817   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:2824   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/cc1AMB4O.s:2904   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/cc1AMB4O.s:2910   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:2917   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cc1AMB4O.s:3151   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/cc1AMB4O.s:10210  .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/cc1AMB4O.s:10127  .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/cc1AMB4O.s:3161   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:3168   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/cc1AMB4O.s:3398   .text.HAL_I2C_Master_Receive_DMA:0000000000000138 $d
     /tmp/cc1AMB4O.s:10298  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/cc1AMB4O.s:3408   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:3415   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cc1AMB4O.s:3581   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000e8 $d
     /tmp/cc1AMB4O.s:7922   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/cc1AMB4O.s:3589   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:3596   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cc1AMB4O.s:3764   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e8 $d
     /tmp/cc1AMB4O.s:7972   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/cc1AMB4O.s:3772   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/cc1AMB4O.s:3779   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/cc1AMB4O.s:4071   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/cc1AMB4O.s:4078   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/cc1AMB4O.s:4371   .text.HAL_I2C_Mem_Read:00000000000001b4 $d
     /tmp/cc1AMB4O.s:4376   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:4383   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/cc1AMB4O.s:4555   .text.HAL_I2C_Mem_Write_IT:00000000000000e0 $d
     /tmp/cc1AMB4O.s:4561   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:4568   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/cc1AMB4O.s:4741   .text.HAL_I2C_Mem_Read_IT:00000000000000e0 $d
     /tmp/cc1AMB4O.s:4748   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:4755   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/cc1AMB4O.s:5002   .text.HAL_I2C_Mem_Write_DMA:000000000000015c $d
     /tmp/cc1AMB4O.s:5010   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:5017   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/cc1AMB4O.s:5265   .text.HAL_I2C_Mem_Read_DMA:0000000000000160 $d
     /tmp/cc1AMB4O.s:5274   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/cc1AMB4O.s:5281   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/cc1AMB4O.s:5547   .text.HAL_I2C_IsDeviceReady:000000000000016c $d
     /tmp/cc1AMB4O.s:5552   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:5559   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/cc1AMB4O.s:5716   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/cc1AMB4O.s:5722   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:5729   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/cc1AMB4O.s:5990   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000158 $d
     /tmp/cc1AMB4O.s:5999   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:6006   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/cc1AMB4O.s:6163   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/cc1AMB4O.s:6169   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:6176   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/cc1AMB4O.s:6437   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000158 $d
     /tmp/cc1AMB4O.s:6446   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
ARM GAS  /tmp/cc1AMB4O.s 			page 337


     /tmp/cc1AMB4O.s:6453   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/cc1AMB4O.s:6610   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000d8 $d
     /tmp/cc1AMB4O.s:10478  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/cc1AMB4O.s:6616   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:6623   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/cc1AMB4O.s:6898   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000194 $d
     /tmp/cc1AMB4O.s:6906   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:6913   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/cc1AMB4O.s:7070   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000d8 $d
     /tmp/cc1AMB4O.s:7076   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:7083   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/cc1AMB4O.s:7357   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000194 $d
     /tmp/cc1AMB4O.s:7365   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:7372   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/cc1AMB4O.s:7413   .text.HAL_I2C_EnableListen_IT:0000000000000028 $d
     /tmp/cc1AMB4O.s:7418   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:7425   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/cc1AMB4O.s:7479   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:7486   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/cc1AMB4O.s:7603   .text.HAL_I2C_Master_Abort_IT:0000000000000080 $d
     /tmp/cc1AMB4O.s:7608   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/cc1AMB4O.s:7615   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/cc1AMB4O.s:7647   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:7654   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cc1AMB4O.s:7668   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:7675   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cc1AMB4O.s:7689   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:7695   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/cc1AMB4O.s:7766   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:7773   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cc1AMB4O.s:7787   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:7794   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cc1AMB4O.s:7808   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:7814   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/cc1AMB4O.s:7916   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:7966   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:8014   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8021   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/cc1AMB4O.s:8035   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:8041   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/cc1AMB4O.s:8164   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8171   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/cc1AMB4O.s:8185   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:8191   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/cc1AMB4O.s:8269   .text.I2C_ITListenCplt:0000000000000064 $d
     /tmp/cc1AMB4O.s:8274   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8281   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/cc1AMB4O.s:8295   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8302   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/cc1AMB4O.s:8316   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8323   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/cc1AMB4O.s:8337   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8344   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/cc1AMB4O.s:8358   .text.I2C_TreatErrorCallback:0000000000000000 $t
     /tmp/cc1AMB4O.s:8364   .text.I2C_TreatErrorCallback:0000000000000000 I2C_TreatErrorCallback
     /tmp/cc1AMB4O.s:8410   .text.I2C_ITError:0000000000000000 $t
     /tmp/cc1AMB4O.s:8416   .text.I2C_ITError:0000000000000000 I2C_ITError
ARM GAS  /tmp/cc1AMB4O.s 			page 338


     /tmp/cc1AMB4O.s:8602   .text.I2C_ITError:00000000000000fc $d
     /tmp/cc1AMB4O.s:8609   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:8615   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/cc1AMB4O.s:8855   .text.I2C_ITSlaveCplt:0000000000000160 $d
     /tmp/cc1AMB4O.s:8860   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:9107   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:9113   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/cc1AMB4O.s:9328   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/cc1AMB4O.s:9625   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:9868   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/cc1AMB4O.s:10121  .text.I2C_DMAError:0000000000000000 $t
     /tmp/cc1AMB4O.s:10204  .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:10292  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/cc1AMB4O.s:10380  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/cc1AMB4O.s:10387  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/cc1AMB4O.s:10472  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/cc1AMB4O.s:10516  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/cc1AMB4O.s:10523  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/cc1AMB4O.s:10540  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/cc1AMB4O.s:10547  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/cc1AMB4O.s:10564  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/cc1AMB4O.s:10571  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetState
HAL_DMA_GetError
